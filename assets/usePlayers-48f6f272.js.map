{"version":3,"file":"usePlayers-48f6f272.js","sources":["../../src/hooks/useMixes.ts","../../src/hooks/usePlayers.ts"],"sourcesContent":["export const useMixes = () => {\n  // TODO: implement selecting different mix\n  return [\n    {\n      id: 26, // xx\n    },\n  ];\n};\n","import { useMemo } from 'react';\nimport _ from 'lodash/fp';\n\nimport { api } from 'utils/trpc';\n\nimport { useMixes } from './useMixes';\nimport { useUser } from './useUser';\n\nexport const usePlayers = () => {\n  const mixes = useMixes();\n  return api.players.list.useQuery({ mixes: mixes.map((mix) => mix.id) });\n};\n\nexport const usePlayersOptions = () => {\n  const players = usePlayers();\n  const user = useUser();\n\n  return useMemo(() => {\n    return {\n      isLoading: user.isLoading || players.isLoading,\n      options:\n        !user.data || !players.data\n          ? []\n          : _.flow(\n              _.map(({ nickname, arcade_name, id }: (typeof players.data)[number]) => ({\n                label: `${nickname} (${arcade_name})`,\n                value: nickname,\n                isCurrentPlayer: user.data?.id === id,\n              })),\n              _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\n            )(players.data),\n    };\n  }, [players, user]);\n};\n"],"names":["useMixes","usePlayers","mixes","api","mix"],"mappings":"yCAAO,MAAMA,EAAW,IAEf,CACL,CACE,GAAI,EACN,CAAA,ECGSC,EAAa,IAAM,CAC9B,MAAMC,EAAQF,IACd,OAAOG,EAAI,QAAQ,KAAK,SAAS,CAAE,MAAOD,EAAM,IAAKE,GAAQA,EAAI,EAAE,CAAG,CAAA,CACxE"}