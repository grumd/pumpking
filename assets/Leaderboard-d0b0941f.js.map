{"version":3,"file":"Leaderboard-d0b0941f.js","sources":["../../src/legacy-code/components/Shared/Input/Input.jsx","../../src/legacy-code/components/Shared/CollapsibleBar/index.jsx","../../src/legacy-code/components/Leaderboard/ChartFilter.jsx","../../src/legacy-code/components/Leaderboard/PresetsControl.jsx","../../src/legacy-code/components/Leaderboard/Result.jsx","../../src/legacy-code/components/Leaderboard/ResultsCollapser.jsx","../../src/legacy-code/components/Contexts/FilteredDataContext.jsx","../../src/legacy-code/components/Leaderboard/Chart.jsx","../../../../node_modules/remove-accents/index.js","../../../../node_modules/match-sorter/dist/match-sorter.esm.js","../../src/legacy-code/reducers/selectors.js","../../src/legacy-code/components/Leaderboard/Leaderboard.jsx"],"sourcesContent":["/* eslint-disable react/no-deprecated */\n// imports from vendor deps\nimport React from 'react';\nimport toBe from 'prop-types';\nimport classNames from 'classnames';\nimport _ from 'lodash/fp';\n\n// imports from styles\nexport default class Input extends React.Component {\n  static propTypes = {\n    value: toBe.any,\n    defaultValue: toBe.any,\n    onChange: toBe.func,\n    onBlur: toBe.func,\n    type: toBe.string,\n    className: toBe.string,\n    trimOnBlur: toBe.bool,\n  };\n\n  static defaultProps = {\n    value: null,\n    type: 'text',\n    onChange: _.noop,\n    onBlur: _.noop,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: (!_.isNil(props.value) ? props.value : props.defaultValue) || '',\n    };\n    _.bindAll(['handleChange', 'handleBlur', 'handleKeyPress'], this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.value !== this.props.value) {\n      this.setState({ value: this.props.value });\n    }\n  }\n\n  handleChange(e) {\n    const newValue = e.target.value;\n    this.setState({ value: newValue }, () => this.props.onChange(newValue));\n  }\n\n  handleBlur(e) {\n    const { type } = this.props;\n    const { value } = this.state;\n    if (type === 'number') {\n      const numericValue = Number(value);\n      if (numericValue >= Number(e.target.min) && numericValue <= Number(e.target.max)) {\n        this.props.onBlur(numericValue, e);\n      } else {\n        this.setState({ value: this.props.value });\n        this.props.onBlur(this.props.value, e);\n      }\n    }\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleBlur(e);\n    }\n  }\n\n  render() {\n    const { className } = this.props;\n\n    // HACK: This component uses onInput instead of onChange\n    // because IE11 fails to call onChange events when you paste/cut using context menu (RMB)\n    // We're using onInput because it works fine, and because for text input\n    // there's no difference between how onChange and onInput work\n    return (\n      <input\n        {..._.omit(['defaultValue', 'onChange'], this.props)}\n        className={classNames(className, 'text-input')}\n        value={this.state.value}\n        onBlur={this.handleBlur}\n        onKeyPress={this.handleKeyPress}\n        onInput={this.handleChange}\n        onChange={_.noop} // Handled by onInput\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport toBe from 'prop-types';\nimport { FaChevronRight } from 'react-icons/fa';\nimport classNames from 'classnames';\n\nimport './styles.scss';\n\nexport default class CollapsibleBar extends PureComponent {\n  static propTypes = {\n    className: toBe.string,\n    children: toBe.any,\n    title: toBe.any,\n    defaultOpen: toBe.bool,\n  };\n\n  constructor(props) {\n    super();\n    this.state = { open: props.defaultOpen || false };\n  }\n\n  render() {\n    const { children, title, className } = this.props;\n    const { open } = this.state;\n\n    return (\n      <div className={classNames('collapsible-bar', className, { open })}>\n        <div className=\"header\" onClick={() => this.setState((state) => ({ open: !state.open }))}>\n          <div className=\"collapse-button\">\n            <FaChevronRight />\n          </div>\n          <div className=\"title\">{title}</div>\n        </div>\n        {children && <div className=\"collapsible-children\">{children}</div>}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport _ from 'lodash/fp';\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\n\nimport Overlay from 'legacy-code/components/Shared/Overlay/Overlay';\nimport ToggleButton from 'legacy-code/components/Shared/ToggleButton/ToggleButton';\nimport Input from 'legacy-code/components/Shared/Input/Input';\nimport Range from 'legacy-code/components/Shared/Range';\n\nimport { CHART_MIN_MAX, DURATION_DEFAULT, DURATION } from 'legacy-code/constants/leaderboard';\nimport { useLanguage } from 'utils/context/translation';\n\nexport default function ChartFilter({ filterValue, onChange: onChangeEx }) {\n  const range = _.getOr(CHART_MIN_MAX, 'range', filterValue);\n  const type = _.getOr(null, 'type', filterValue);\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filterValue);\n\n  const lang = useLanguage();\n\n  let buttonText = lang.FILTER_CHARTS;\n  if (filterValue) {\n    const t = type || '';\n    buttonText = range[0] === range[1] ? `${t}${range[0]}` : `${t}${range[0]} - ${t}${range[1]}`;\n    buttonText = lang.CHARTS + ': ' + buttonText;\n    if (!_.isEqual(duration, DURATION_DEFAULT)) {\n      buttonText += ' ***';\n      // buttonText += ` (${_.values(DURATION)\n      //   .filter(dur => duration.includes(dur))\n      //   .map(s => s.slice(0, 2))\n      //   .join('-')})`;\n    }\n  }\n\n  const onChange = (value) => {\n    onChangeEx({\n      range,\n      type,\n      ...value,\n      duration: _.isEmpty(value.duration) ? duration : value.duration,\n    });\n  };\n\n  return (\n    <div>\n      <Overlay\n        overlayClassName=\"chart-range-overlay-outer\"\n        overlayItem={\n          <button className=\"filter-charts-button btn btn-sm btn-dark\">{buttonText}</button>\n        }\n      >\n        <div className=\"chart-range-overlay\">\n          <div className=\"buttons\">\n            <ToggleButton\n              text=\"Single\"\n              active={type === 'S'}\n              onToggle={(active) => {\n                onChange({\n                  type: active ? 'S' : null,\n                });\n              }}\n            />\n            <ToggleButton\n              text=\"Double\"\n              active={type === 'D'}\n              onToggle={(active) => {\n                onChange({\n                  type: active ? 'D' : null,\n                });\n              }}\n            />\n          </div>\n          <Range\n            range={range}\n            min={CHART_MIN_MAX[0]}\n            max={CHART_MIN_MAX[1]}\n            onChange={(r) => onChange({ range: r })}\n          />\n          <div className=\"inputs\">\n            <button\n              className=\"btn btn-sm btn-dark\"\n              onClick={() =>\n                onChange({\n                  range: [Math.max(range[0] - 1, CHART_MIN_MAX[0]), range[1]],\n                })\n              }\n            >\n              <FaCaretLeft />\n            </button>\n            <Input\n              type=\"number\"\n              className=\"form-control\"\n              min={CHART_MIN_MAX[0]}\n              max={Math.min(CHART_MIN_MAX[1], range[1])}\n              value={range[0]}\n              onBlur={(value) => {\n                onChange({ range: [value, range[1]] });\n              }}\n            />\n            <button\n              className=\"btn btn-sm btn-dark\"\n              onClick={() => {\n                const newMin = Math.min(range[0] + 1, CHART_MIN_MAX[1]);\n                onChange({\n                  range: [newMin, range[1] < newMin ? newMin : range[1]],\n                });\n              }}\n            >\n              <FaCaretRight />\n            </button>\n            <div className=\"_flex-fill\" />\n            <button\n              className=\"btn btn-sm btn-dark\"\n              onClick={() => {\n                const newMax = Math.max(range[1] - 1, CHART_MIN_MAX[0]);\n                onChange({\n                  range: [range[0] > newMax ? newMax : range[0], newMax],\n                });\n              }}\n            >\n              <FaCaretLeft />\n            </button>\n            <Input\n              type=\"number\"\n              className=\"form-control\"\n              min={Math.max(CHART_MIN_MAX[0], range[0])}\n              max={CHART_MIN_MAX[1]}\n              value={range[1]}\n              onBlur={(value) => onChange({ range: [range[0], value] })}\n            />\n            <button\n              className=\"btn btn-sm btn-dark\"\n              onClick={() =>\n                onChange({\n                  range: [range[0], Math.min(range[1] + 1, CHART_MIN_MAX[1])],\n                })\n              }\n            >\n              <FaCaretRight />\n            </button>\n          </div>\n          <div className=\"buttons-duration\">\n            <ToggleButton\n              text=\"Standard\"\n              active={duration.includes(DURATION.STD)}\n              onToggle={(active) => {\n                onChange({\n                  duration: active\n                    ? [...duration, DURATION.STD]\n                    : _.without([DURATION.STD], duration),\n                });\n              }}\n            />\n            <ToggleButton\n              text=\"Short\"\n              active={duration.includes(DURATION.SHORT)}\n              onToggle={(active) => {\n                onChange({\n                  duration: active\n                    ? [...duration, DURATION.SHORT]\n                    : _.without([DURATION.SHORT], duration),\n                });\n              }}\n            />\n            <ToggleButton\n              text=\"Remix\"\n              active={duration.includes(DURATION.REMIX)}\n              onToggle={(active) => {\n                onChange({\n                  duration: active\n                    ? [...duration, DURATION.REMIX]\n                    : _.without([DURATION.REMIX], duration),\n                });\n              }}\n            />\n            <ToggleButton\n              text=\"Full\"\n              active={duration.includes(DURATION.FULL)}\n              onToggle={(active) => {\n                onChange({\n                  duration: active\n                    ? [...duration, DURATION.FULL]\n                    : _.without([DURATION.FULL], duration),\n                });\n              }}\n            />\n          </div>\n        </div>\n      </Overlay>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FaLayerGroup, FaFolderOpen, FaSave, FaPlus, FaTrashAlt } from 'react-icons/fa';\nimport Select from 'react-select';\n\nimport Overlay from 'legacy-code/components/Shared/Overlay/Overlay';\nimport Input from 'legacy-code/components/Shared/Input/Input';\n\nimport {\n  loadPresets,\n  savePreset,\n  selectPreset,\n  openPreset,\n  deletePreset,\n} from 'legacy-code/reducers/presets';\nimport { Language } from 'utils/context/translation';\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state.presets,\n  };\n};\n\nconst mapDispatchToProps = {\n  loadPresets,\n  savePreset,\n  openPreset,\n  deletePreset,\n  selectPreset,\n};\n\nclass PresetsControl extends React.Component {\n  state = {};\n\n  static contextType = Language;\n\n  componentDidMount() {\n    this.props.loadPresets();\n  }\n\n  onChangeSelection = (selected) => {\n    this.props.selectPreset(selected.name);\n  };\n\n  onRewritePreset = () => {\n    const { currentPreset } = this.props;\n    this.props.savePreset(currentPreset.name);\n  };\n\n  onSavePreset = () => {\n    const { name } = this.state;\n    this.props.savePreset(name);\n    this.setState({ isAddingNew: false });\n  };\n\n  render() {\n    const { presets, currentPreset, isLoading } = this.props;\n    const { name, isAddingNew } = this.state;\n    const lang = this.context;\n    return (\n      <div>\n        <Overlay\n          overlayItem={\n            <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\n              <FaLayerGroup />\n              {lang.PRESETS}\n            </button>\n          }\n        >\n          <div className=\"presets-control-overlay\">\n            <Select\n              className=\"select _margin-bottom\"\n              classNamePrefix=\"select\"\n              placeholder={lang.PRESETS_PLACEHOLDER}\n              options={presets}\n              value={currentPreset}\n              onChange={this.props.selectPreset}\n              noOptionsMessage={() => lang.EMPTY}\n            />\n            {currentPreset && (\n              <div className=\"buttons-presets _margin-bottom\">\n                <div className=\"_flex-fill\" />\n                <button\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\n                  onClick={this.props.openPreset}\n                  disabled={isLoading}\n                >\n                  <FaFolderOpen /> {lang.OPEN}\n                </button>\n                <button\n                  className=\"btn btn-sm btn-dark btn-icon _margin-right\"\n                  onClick={this.onRewritePreset}\n                  disabled={isLoading}\n                >\n                  <FaSave /> {lang.OVERWRITE}\n                </button>\n                <button\n                  className=\"btn btn-sm btn-dark btn-icon\"\n                  onClick={this.props.deletePreset}\n                  disabled={isLoading}\n                >\n                  <FaTrashAlt /> {lang.DELETE}\n                </button>\n              </div>\n            )}\n            {!isAddingNew && (\n              <div className=\"buttons-presets _margin-bottom\">\n                <div className=\"_flex-fill\" />\n\n                <button\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left _self-align-end\"\n                  onClick={() => this.setState({ isAddingNew: true })}\n                  disabled={isLoading}\n                >\n                  <FaPlus /> {lang.ADD}\n                </button>\n              </div>\n            )}\n            {isAddingNew && (\n              <div className=\"adding-new _margin-bottom\">\n                <Input\n                  value={name}\n                  placeholder={lang.PRESET_NAME_PLACEHOLDER}\n                  className=\"form-control\"\n                  onChange={(name) => this.setState({ name })}\n                />\n                <button\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\n                  onClick={this.onSavePreset}\n                  disabled={!name || isLoading}\n                >\n                  <FaSave /> {lang.SAVE}\n                </button>\n                <button\n                  className=\"btn btn-sm btn-dark btn-icon _margin-left\"\n                  onClick={() => this.setState({ isAddingNew: false })}\n                  disabled={isLoading}\n                >\n                  {lang.CANCEL}\n                </button>\n              </div>\n            )}\n          </div>\n        </Overlay>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PresetsControl);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport numeral from 'numeral';\nimport { FaExclamationTriangle, FaAngleDoubleUp } from 'react-icons/fa';\nimport Tooltip from 'react-responsive-ui/modules/Tooltip';\n\nimport { routes } from 'legacy-code/constants/routes';\nimport { DEBUG } from 'legacy-code/constants/env';\n\nimport Flag from 'legacy-code/components/Shared/Flag';\nimport Grade from 'legacy-code/components/Shared/Grade';\nimport Overlay from 'legacy-code/components/Shared/Overlay/Overlay';\n\nimport { getTimeAgo as getShortTimeAgo } from 'legacy-code/components/SocketTracker/helpers';\n\nimport { tooltipFormatter } from 'legacy-code/utils/leaderboards';\nimport { getExp } from 'legacy-code/utils/exp';\nimport { colorsArray } from 'legacy-code/utils/colors';\nimport { useLanguage } from 'utils/context/translation';\nimport { ResultScreenshotLink } from 'components/ResultScreenshotLink/ResultScreenshotLink';\n\nconst Result = ({\n  // shared\n  res,\n  chart,\n  placeDifference,\n  // leaderboard\n  showPpChange,\n  highlightIndex,\n  // socket\n  leftProfile = {},\n  rightProfile = {},\n  isSocketView = false,\n  bestGradeScore = false,\n  notBestGradeResult = false,\n}) => {\n  const lang = useLanguage();\n  const region = useSelector((state) => state.results.profiles[res.playerId]?.region);\n  const isCurrentPlayer = useSelector((state) => res.playerId === state.user.data?.player?.id);\n\n  // Rating info for nickname column:\n  let ratingInfoBlock = null;\n  if (DEBUG) {\n    // In debug mode we show all info\n    ratingInfoBlock = (\n      <>\n        <span className=\"debug-elo-info\"> {res.pp && `${res.pp}pp`}</span>\n      </>\n    );\n  } else if (showPpChange && res.pp) {\n    // In non-debug mode we show relevant info for selected protagonist\n    ratingInfoBlock = (\n      <>\n        {' / '}\n        <span>{res.pp}pp</span>\n      </>\n    );\n  }\n\n  const flag = region ? <Flag region={region} /> : null;\n\n  const exp = getExp(res, chart);\n  const playerRoute = routes.profile.getPath({ id: res.playerId });\n\n  return (\n    <tr\n      key={res.id}\n      className={classNames({\n        empty: !res.accuracy,\n        latest:\n          new Date(chart.latestAddedScoreDate) - new Date(res.dateAdded) < 12 * 60 * 60 * 1000,\n        left: res.nickname === leftProfile.name,\n        right: res.nickname === rightProfile.name,\n      })}\n      style={\n        highlightIndex > -1\n          ? {\n              background: colorsArray[highlightIndex] + '3A',\n              outline: `1px solid ${colorsArray[highlightIndex]}A0`,\n            }\n          : {}\n      }\n    >\n      {!isSocketView && (\n        <td className=\"place\" style={isCurrentPlayer ? { fontWeight: 'bold', color: '#ddd' } : {}}>\n          {res.isSecondOccurenceInResults ? '' : res.topPlace && `#${res.topPlace}`}\n        </td>\n      )}\n      <td\n        className={classNames('nickname', bestGradeScore && 'opacity')}\n        style={highlightIndex > -1 || isCurrentPlayer ? { fontWeight: 'bold' } : {}}\n      >\n        <div className=\"nickname-container\">\n          {flag}\n          <span className=\"nickname-text\">\n            <Link exact to={playerRoute}>\n              {res.nickname}\n            </Link>\n            {!!placeDifference && (\n              <span className=\"change-holder up\">\n                <span>{placeDifference}</span>\n                <FaAngleDoubleUp />\n              </span>\n            )}\n            {ratingInfoBlock}\n          </span>\n          {!isSocketView && (\n            <div className=\"mods-container\">\n              {isSocketView &&\n                res.mods &&\n                res.mods\n                  .split(' ')\n                  .filter((mod) => mod.includes('AV'))\n                  .map((avMod) => (\n                    <div className=\"mod av-mod\">\n                      <div className=\"av-text\">AV</div>\n                      <div className=\"av-number\">{avMod.replace('AV', '')}</div>\n                    </div>\n                  ))}\n              {isSocketView &&\n                res.mods &&\n                res.mods\n                  .split(' ')\n                  .filter((mod) => mod.endsWith('X'))\n                  .map((xMod) => (\n                    <div className=\"mod x-mod\">\n                      <div className=\"x-number\">{xMod}</div>\n                    </div>\n                  ))}\n              {res.isRank && <div className=\"mod vj\">{res.mods ? 'R' : 'R?'}</div>}\n              {res.isHJ && <div className=\"mod hj\">HJ</div>}\n            </div>\n          )}\n        </div>\n      </td>\n      <td className={classNames('score', bestGradeScore && 'opacity')}>\n        <Overlay\n          overlayClassName=\"score-overlay-outer\"\n          overlayItem={\n            <span className=\"score-span\">\n              {res.scoreIncrease > res.score * 0.8 && '*'}\n              {numeral(res.score).format('0,0')}\n            </span>\n          }\n          placement=\"top\"\n        >\n          <div className=\"score-overlay\">\n            <div>\n              <ResultScreenshotLink resultId={res.id} />\n            </div>\n            {DEBUG && (\n              <>\n                <div>\n                  <span className=\"_grey\">result id: </span>\n                  {res.id}\n                </div>\n                <div>\n                  <span className=\"_grey\">player id: </span>\n                  {res.playerId}\n                </div>\n              </>\n            )}\n            <div>\n              <span className=\"_grey\">{lang.PLAYER}: </span>\n              <Link exact to={playerRoute}>\n                {res.nickname} ({res.nicknameArcade})\n              </Link>\n            </div>\n            {exp ? (\n              <div className=\"important\">\n                <span className=\"_grey\">{lang.EXP}: </span>+{numeral(exp).format('0,0')}\n              </div>\n            ) : null}\n            {res.pp ? (\n              <div className=\"important\">\n                <span className=\"_grey\">{lang.PP}: </span>\n                <span>{res.pp}pp</span>\n              </div>\n            ) : null}\n            {!res.isExactDate && (\n              <div className=\"warning\">\n                <FaExclamationTriangle />\n                {lang.MY_BEST_SCORE_WARNING}\n              </div>\n            )}\n            {res.isExactDate && (\n              <>\n                {res.mods && (\n                  <div>\n                    <span className=\"_grey\">{lang.MODS}: </span>\n                    {res.mods}\n                  </div>\n                )}\n                {res.combo != null && (\n                  <div className=\"mobile-only\">\n                    <span className=\"_grey\">{lang.COMBO}: </span>\n                    {res.combo}\n                  </div>\n                )}\n                {res.calories != null && (\n                  <div>\n                    <span className=\"_grey\">{lang.CCAL}: </span>\n                    {res.calories}\n                  </div>\n                )}\n                {res.scoreIncrease != null && (\n                  <div>\n                    <span className=\"_grey\">{lang.SCORE_INCREASE}: </span>+\n                    {numeral(res.scoreIncrease).format('0,0')}\n                  </div>\n                )}\n                {res.originalChartMix && (\n                  <div>\n                    <div className=\"warning\">\n                      <FaExclamationTriangle />\n                      {lang.ORIGINAL_MIX} {res.originalChartMix}\n                    </div>\n                    {res.originalChartLabel && (\n                      <div>\n                        <span className=\"_grey\">{lang.ORIGINAL_CHART} </span>\n                        {res.originalChartLabel}\n                      </div>\n                    )}\n                    {res.originalScore && (\n                      <div>\n                        <span className=\"_grey\">{lang.ORIGINAL_SCORE} </span>\n                        {res.originalScore}\n                      </div>\n                    )}\n                  </div>\n                )}\n                {res.scoreIncrease > res.score * 0.8 && lang.SIGHTREAD}\n              </>\n            )}\n          </div>\n        </Overlay>\n      </td>\n      <td className={classNames('grade', notBestGradeResult && 'opacity')}>\n        <div className=\"img-holder\">\n          <Grade grade={res.grade} />\n        </div>\n      </td>\n      {isSocketView && (\n        <td\n          className={classNames('mods', {\n            vj: res.isRank,\n            hj: res.isHJ,\n          })}\n        >\n          <div className=\"mods-container\">\n            {isSocketView &&\n              res.mods &&\n              res.mods\n                .filter((mod) => mod.includes('AV'))\n                .map((avMod) => (\n                  <div className=\"av-mod\">\n                    <div className=\"av-text\">AV</div>\n                    <div className=\"av-number\">{avMod.replace('AV', '')}</div>\n                  </div>\n                ))}\n            {isSocketView &&\n              res.mods &&\n              res.mods\n                .split(' ')\n                .filter((mod) => mod.endsWith('X'))\n                .map((xMod) => (\n                  <div className=\"x-mod\">\n                    <div className=\"x-number\">{xMod}</div>\n                  </div>\n                ))}\n            {res.isRank && <div className=\"inner\">{res.isExactDate ? 'R' : 'R?'}</div>}\n            {res.isHJ && <div className=\"inner\">HJ</div>}\n          </div>\n        </td>\n      )}\n      <td className={classNames('number', 'miss', bestGradeScore && 'opacity')}>{res.miss}</td>\n      <td className={classNames('number', 'bad', bestGradeScore && 'opacity')}>{res.bad}</td>\n      <td className={classNames('number', 'good', bestGradeScore && 'opacity')}>{res.good}</td>\n      <td className={classNames('number', 'great', bestGradeScore && 'opacity')}>{res.great}</td>\n      <td className={classNames('number', 'perfect', bestGradeScore && 'opacity')}>\n        {res.perfect}\n      </td>\n      <td className={classNames('combo', 'desktop-only', bestGradeScore && 'opacity')}>\n        {res.combo && `${res.combo}x`}\n      </td>\n      <td className={classNames('accuracy', bestGradeScore && 'opacity')}>\n        {res.accuracy ? (\n          <Tooltip\n            content={`Phoenix score: ${Math.floor(res.accuracyRaw * 10000)}`}\n            tooltipClassName=\"pumpking-tooltip\"\n          >\n            {res.accuracy === 100 ? 100 : res.accuracy.toFixed(2)}%\n          </Tooltip>\n        ) : null}\n      </td>\n      <td\n        className={classNames('date', {\n          latest: res.isLatestScore,\n          opacity: bestGradeScore,\n        })}\n      >\n        {isSocketView ? (\n          getShortTimeAgo(lang, res.dateObject)\n        ) : (\n          <Tooltip content={tooltipFormatter(lang, res)} tooltipClassName=\"pumpking-tooltip\">\n            {getShortTimeAgo(lang, res.dateObject)}\n            {res.isExactDate ? '' : '?'}\n          </Tooltip>\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default Result;\n","import React, { useState } from 'react';\nimport { BsArrowsExpand } from 'react-icons/bs';\n\nimport './results-collapser.scss';\nimport { useLanguage } from 'utils/context/translation';\n\nexport const ResultsCollapser = ({ children, count }) => {\n  const [collapsed, setCollapsed] = useState(true);\n  const lang = useLanguage();\n\n  if (collapsed && count > 1) {\n    return (\n      <tr className=\"results-collapser\" onClick={() => setCollapsed(false)}>\n        <td colSpan=\"20\">\n          <div>\n            <button>\n              {count && lang.SHOW_MORE_RESULTS ? (\n                <>{lang.SHOW_MORE_RESULTS(count)}</>\n              ) : (\n                <BsArrowsExpand />\n              )}\n            </button>\n          </div>\n        </td>\n      </tr>\n    );\n  }\n\n  return <>{children}</>;\n};\n","import React from 'react';\n\nexport const FilteredDataContext = React.createContext([]);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport _ from 'lodash/fp';\nimport { FaYoutube, FaGlobeAmericas } from 'react-icons/fa';\nimport classNames from 'classnames';\nimport queryString from 'query-string';\n\nimport { routes } from 'legacy-code/constants/routes';\n\nimport Result from './Result';\nimport { ChartLabel } from './ChartLabel';\nimport { ResultsCollapser } from './ResultsCollapser';\n\nimport { useLanguage } from 'utils/context/translation';\nimport { FilteredDataContext } from '../Contexts/FilteredDataContext';\n\nconst Chart = React.forwardRef(\n  (\n    {\n      playersHiddenStatus: propPlayersHiddenStatus,\n      showHiddenPlayers = false,\n      showProtagonistPpChange = false,\n      uniqueSelectedNames = [],\n      protagonistName = null,\n      // socket stuff\n      leftProfile = {},\n      rightProfile = {},\n      isSocketView = false,\n      chartIndex,\n      chart: forcedChart,\n    },\n    ref\n  ) => {\n    const currentPlayerId = useSelector((state) => state.user.data?.player?.id);\n    const statePlayersHiddenStatus = useSelector(\n      (state) => state.preferences.data.playersHiddenStatus\n    );\n    const playersHiddenStatus = propPlayersHiddenStatus || statePlayersHiddenStatus || {};\n\n    const filteredData = useContext(FilteredDataContext);\n    const chart = forcedChart || filteredData[chartIndex];\n    const [isHidingPlayers, setHidingPlayers] = useState(!showHiddenPlayers);\n\n    const lang = useLanguage();\n\n    useEffect(() => {\n      setHidingPlayers(!showHiddenPlayers);\n    }, [showHiddenPlayers]);\n\n    let topPlace = 1;\n    const occuredNicknames = [];\n    let hiddenPlayersCount = 0;\n    const results = chart.results\n      .map((res, index, array) => {\n        const isProtagonist = res.nickname === protagonistName;\n        const isPlayerHidden =\n          !isProtagonist && isHidingPlayers && (playersHiddenStatus[res.playerId] || false);\n        const isSecondOccurenceInResults = occuredNicknames.includes(res.nickname);\n        occuredNicknames.push(res.nickname);\n\n        let placeDifference = 0;\n        if (res.scoreIncrease && res.dateAdded === chart.latestAddedScoreDate) {\n          const prevScore = res.score - res.scoreIncrease;\n          const newIndex = _.findLastIndex((res) => res.score > prevScore, array);\n          placeDifference = newIndex - index;\n        }\n\n        if (index === 0) {\n          topPlace = 1;\n        } else if (\n          !isSecondOccurenceInResults &&\n          res.score !== _.get([index - 1, 'score'], array)\n        ) {\n          topPlace += 1;\n        }\n\n        if (isPlayerHidden) {\n          hiddenPlayersCount++;\n        }\n\n        return {\n          ...res,\n          topPlace,\n          isSecondOccurenceInResults,\n          isPlayerHidden,\n          highlightIndex: uniqueSelectedNames.indexOf(res.nickname),\n          isProtagonist: res.nickname === protagonistName,\n          placeDifference,\n          isLatestScore: res.dateAdded === chart.latestAddedScoreDate,\n        };\n      })\n      .filter((res, index) => {\n        return !(res.isPlayerHidden || (res.isUnknownPlayer && index !== 0));\n      })\n      .map((res, index, array) => {\n        // Collapse results that are not within 2 places of a highlighted result\n        const isResultImportant = (r) =>\n          r.playerId === currentPlayerId || r.isLatestScore || r.highlightIndex > -1;\n        const highlightRange = 2;\n        const isHighlighted = isResultImportant(res);\n        const isBeforeHighlighted = array\n          .slice(index + 1, index + 1 + highlightRange)\n          .some(isResultImportant);\n        const isAfterHighlighted = array\n          .slice(index - highlightRange, index)\n          .some(isResultImportant);\n        return {\n          ...res,\n          isCollapsible: !isHighlighted && !isBeforeHighlighted && !isAfterHighlighted,\n        };\n      });\n\n    const resultGroups = results.reduce((acc, res) => {\n      if (!acc.length) {\n        acc.push({\n          isGroupCollapsible: res.isCollapsible,\n          results: [res],\n        });\n      } else if (acc[acc.length - 1].isGroupCollapsible !== res.isCollapsible) {\n        acc.push({\n          isGroupCollapsible: res.isCollapsible,\n          results: [res],\n        });\n      } else {\n        acc[acc.length - 1].results.push(res);\n      }\n      return acc;\n    }, []);\n\n    // TODO: remove check from sharedCharts when SocketTracker works off results data instead of topPerSong\n\n    return (\n      <div className=\"song-block\" ref={ref}>\n        <div className=\"song-name\">\n          <ChartLabel type={chart.chartType} level={chart.chartLevel} />\n          {isSocketView ? (\n            <div className=\"song-name-text\">\n              {chart.difficulty ? `(${chart.difficulty.toFixed(1)}) ` : ''}\n              {chart.song}\n            </div>\n          ) : (\n            <div className=\"song-name-text\">\n              <NavLink\n                exact\n                to={routes.leaderboard.sharedChart.getPath({ sharedChartId: chart.sharedChartId })}\n              >\n                {chart.song}\n              </NavLink>{' '}\n              <span className=\"_grey-text\">\n                {chart.difficulty ? `(${chart.difficulty.toFixed(1)}) ` : ''}\n              </span>\n            </div>\n          )}\n          {!isSocketView && (\n            <div className=\"youtube-link\">\n              <a\n                href={`https://youtube.com/results?${queryString.stringify({\n                  search_query: `${chart.song} ${chart.chartLabel}`.replace(/( -)|(- )/g, ' '),\n                })}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <FaYoutube />\n              </a>\n            </div>\n          )}\n          <div className=\"_flex-fill\" />\n          <div className=\"right-side-block\">\n            {hiddenPlayersCount > 0 && (\n              <div\n                className={classNames('players-hidden-count _grey-text', {\n                  '_on-hover': !isSocketView,\n                })}\n              >\n                {lang.HIDDEN}: {hiddenPlayersCount}\n              </div>\n            )}\n            {(hiddenPlayersCount > 0 || !isHidingPlayers) && !isSocketView && (\n              <div\n                className=\"globe-icon _on-hover\"\n                onClick={() => setHidingPlayers(!isHidingPlayers)}\n              >\n                <FaGlobeAmericas />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"charts\">\n          {!_.isEmpty(results) && (\n            <div className=\"chart\">\n              <div className=\"results\">\n                <table>\n                  <tbody>\n                    {resultGroups.map((group) => {\n                      const groupResults = group.results.map((res) => {\n                        const showPpChange = res.isProtagonist && showProtagonistPpChange;\n                        return (\n                          <React.Fragment key={res.isRank + '_' + res.nickname}>\n                            <Result\n                              chart={chart}\n                              res={res}\n                              placeDifference={res.placeDifference}\n                              showPpChange={showPpChange}\n                              highlightIndex={res.highlightIndex}\n                              leftProfile={leftProfile}\n                              rightProfile={rightProfile}\n                              isSocketView={isSocketView}\n                              notBestGradeResult={!!res.bestGradeResult}\n                            />\n                            {res.bestGradeResult && (\n                              <Result\n                                chart={chart}\n                                res={res.bestGradeResult}\n                                placeDifference={res.placeDifference}\n                                showPpChange={showPpChange}\n                                highlightIndex={res.highlightIndex}\n                                leftProfile={leftProfile}\n                                rightProfile={rightProfile}\n                                isSocketView={isSocketView}\n                                bestGradeScore={true}\n                              />\n                            )}\n                          </React.Fragment>\n                        );\n                      });\n                      if (group.isGroupCollapsible) {\n                        return (\n                          <ResultsCollapser count={groupResults.length}>\n                            {groupResults}\n                          </ResultsCollapser>\n                        );\n                      } else {\n                        return <>{groupResults}</>;\n                      }\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Chart;\n","var characterMap = {\r\n\t\"À\": \"A\",\r\n\t\"Á\": \"A\",\r\n\t\"Â\": \"A\",\r\n\t\"Ã\": \"A\",\r\n\t\"Ä\": \"A\",\r\n\t\"Å\": \"A\",\r\n\t\"Ấ\": \"A\",\r\n\t\"Ắ\": \"A\",\r\n\t\"Ẳ\": \"A\",\r\n\t\"Ẵ\": \"A\",\r\n\t\"Ặ\": \"A\",\r\n\t\"Æ\": \"AE\",\r\n\t\"Ầ\": \"A\",\r\n\t\"Ằ\": \"A\",\r\n\t\"Ȃ\": \"A\",\r\n\t\"Ç\": \"C\",\r\n\t\"Ḉ\": \"C\",\r\n\t\"È\": \"E\",\r\n\t\"É\": \"E\",\r\n\t\"Ê\": \"E\",\r\n\t\"Ë\": \"E\",\r\n\t\"Ế\": \"E\",\r\n\t\"Ḗ\": \"E\",\r\n\t\"Ề\": \"E\",\r\n\t\"Ḕ\": \"E\",\r\n\t\"Ḝ\": \"E\",\r\n\t\"Ȇ\": \"E\",\r\n\t\"Ì\": \"I\",\r\n\t\"Í\": \"I\",\r\n\t\"Î\": \"I\",\r\n\t\"Ï\": \"I\",\r\n\t\"Ḯ\": \"I\",\r\n\t\"Ȋ\": \"I\",\r\n\t\"Ð\": \"D\",\r\n\t\"Ñ\": \"N\",\r\n\t\"Ò\": \"O\",\r\n\t\"Ó\": \"O\",\r\n\t\"Ô\": \"O\",\r\n\t\"Õ\": \"O\",\r\n\t\"Ö\": \"O\",\r\n\t\"Ø\": \"O\",\r\n\t\"Ố\": \"O\",\r\n\t\"Ṍ\": \"O\",\r\n\t\"Ṓ\": \"O\",\r\n\t\"Ȏ\": \"O\",\r\n\t\"Ù\": \"U\",\r\n\t\"Ú\": \"U\",\r\n\t\"Û\": \"U\",\r\n\t\"Ü\": \"U\",\r\n\t\"Ý\": \"Y\",\r\n\t\"à\": \"a\",\r\n\t\"á\": \"a\",\r\n\t\"â\": \"a\",\r\n\t\"ã\": \"a\",\r\n\t\"ä\": \"a\",\r\n\t\"å\": \"a\",\r\n\t\"ấ\": \"a\",\r\n\t\"ắ\": \"a\",\r\n\t\"ẳ\": \"a\",\r\n\t\"ẵ\": \"a\",\r\n\t\"ặ\": \"a\",\r\n\t\"æ\": \"ae\",\r\n\t\"ầ\": \"a\",\r\n\t\"ằ\": \"a\",\r\n\t\"ȃ\": \"a\",\r\n\t\"ç\": \"c\",\r\n\t\"ḉ\": \"c\",\r\n\t\"è\": \"e\",\r\n\t\"é\": \"e\",\r\n\t\"ê\": \"e\",\r\n\t\"ë\": \"e\",\r\n\t\"ế\": \"e\",\r\n\t\"ḗ\": \"e\",\r\n\t\"ề\": \"e\",\r\n\t\"ḕ\": \"e\",\r\n\t\"ḝ\": \"e\",\r\n\t\"ȇ\": \"e\",\r\n\t\"ì\": \"i\",\r\n\t\"í\": \"i\",\r\n\t\"î\": \"i\",\r\n\t\"ï\": \"i\",\r\n\t\"ḯ\": \"i\",\r\n\t\"ȋ\": \"i\",\r\n\t\"ð\": \"d\",\r\n\t\"ñ\": \"n\",\r\n\t\"ò\": \"o\",\r\n\t\"ó\": \"o\",\r\n\t\"ô\": \"o\",\r\n\t\"õ\": \"o\",\r\n\t\"ö\": \"o\",\r\n\t\"ø\": \"o\",\r\n\t\"ố\": \"o\",\r\n\t\"ṍ\": \"o\",\r\n\t\"ṓ\": \"o\",\r\n\t\"ȏ\": \"o\",\r\n\t\"ù\": \"u\",\r\n\t\"ú\": \"u\",\r\n\t\"û\": \"u\",\r\n\t\"ü\": \"u\",\r\n\t\"ý\": \"y\",\r\n\t\"ÿ\": \"y\",\r\n\t\"Ā\": \"A\",\r\n\t\"ā\": \"a\",\r\n\t\"Ă\": \"A\",\r\n\t\"ă\": \"a\",\r\n\t\"Ą\": \"A\",\r\n\t\"ą\": \"a\",\r\n\t\"Ć\": \"C\",\r\n\t\"ć\": \"c\",\r\n\t\"Ĉ\": \"C\",\r\n\t\"ĉ\": \"c\",\r\n\t\"Ċ\": \"C\",\r\n\t\"ċ\": \"c\",\r\n\t\"Č\": \"C\",\r\n\t\"č\": \"c\",\r\n\t\"C̆\": \"C\",\r\n\t\"c̆\": \"c\",\r\n\t\"Ď\": \"D\",\r\n\t\"ď\": \"d\",\r\n\t\"Đ\": \"D\",\r\n\t\"đ\": \"d\",\r\n\t\"Ē\": \"E\",\r\n\t\"ē\": \"e\",\r\n\t\"Ĕ\": \"E\",\r\n\t\"ĕ\": \"e\",\r\n\t\"Ė\": \"E\",\r\n\t\"ė\": \"e\",\r\n\t\"Ę\": \"E\",\r\n\t\"ę\": \"e\",\r\n\t\"Ě\": \"E\",\r\n\t\"ě\": \"e\",\r\n\t\"Ĝ\": \"G\",\r\n\t\"Ǵ\": \"G\",\r\n\t\"ĝ\": \"g\",\r\n\t\"ǵ\": \"g\",\r\n\t\"Ğ\": \"G\",\r\n\t\"ğ\": \"g\",\r\n\t\"Ġ\": \"G\",\r\n\t\"ġ\": \"g\",\r\n\t\"Ģ\": \"G\",\r\n\t\"ģ\": \"g\",\r\n\t\"Ĥ\": \"H\",\r\n\t\"ĥ\": \"h\",\r\n\t\"Ħ\": \"H\",\r\n\t\"ħ\": \"h\",\r\n\t\"Ḫ\": \"H\",\r\n\t\"ḫ\": \"h\",\r\n\t\"Ĩ\": \"I\",\r\n\t\"ĩ\": \"i\",\r\n\t\"Ī\": \"I\",\r\n\t\"ī\": \"i\",\r\n\t\"Ĭ\": \"I\",\r\n\t\"ĭ\": \"i\",\r\n\t\"Į\": \"I\",\r\n\t\"į\": \"i\",\r\n\t\"İ\": \"I\",\r\n\t\"ı\": \"i\",\r\n\t\"Ĳ\": \"IJ\",\r\n\t\"ĳ\": \"ij\",\r\n\t\"Ĵ\": \"J\",\r\n\t\"ĵ\": \"j\",\r\n\t\"Ķ\": \"K\",\r\n\t\"ķ\": \"k\",\r\n\t\"Ḱ\": \"K\",\r\n\t\"ḱ\": \"k\",\r\n\t\"K̆\": \"K\",\r\n\t\"k̆\": \"k\",\r\n\t\"Ĺ\": \"L\",\r\n\t\"ĺ\": \"l\",\r\n\t\"Ļ\": \"L\",\r\n\t\"ļ\": \"l\",\r\n\t\"Ľ\": \"L\",\r\n\t\"ľ\": \"l\",\r\n\t\"Ŀ\": \"L\",\r\n\t\"ŀ\": \"l\",\r\n\t\"Ł\": \"l\",\r\n\t\"ł\": \"l\",\r\n\t\"Ḿ\": \"M\",\r\n\t\"ḿ\": \"m\",\r\n\t\"M̆\": \"M\",\r\n\t\"m̆\": \"m\",\r\n\t\"Ń\": \"N\",\r\n\t\"ń\": \"n\",\r\n\t\"Ņ\": \"N\",\r\n\t\"ņ\": \"n\",\r\n\t\"Ň\": \"N\",\r\n\t\"ň\": \"n\",\r\n\t\"ŉ\": \"n\",\r\n\t\"N̆\": \"N\",\r\n\t\"n̆\": \"n\",\r\n\t\"Ō\": \"O\",\r\n\t\"ō\": \"o\",\r\n\t\"Ŏ\": \"O\",\r\n\t\"ŏ\": \"o\",\r\n\t\"Ő\": \"O\",\r\n\t\"ő\": \"o\",\r\n\t\"Œ\": \"OE\",\r\n\t\"œ\": \"oe\",\r\n\t\"P̆\": \"P\",\r\n\t\"p̆\": \"p\",\r\n\t\"Ŕ\": \"R\",\r\n\t\"ŕ\": \"r\",\r\n\t\"Ŗ\": \"R\",\r\n\t\"ŗ\": \"r\",\r\n\t\"Ř\": \"R\",\r\n\t\"ř\": \"r\",\r\n\t\"R̆\": \"R\",\r\n\t\"r̆\": \"r\",\r\n\t\"Ȓ\": \"R\",\r\n\t\"ȓ\": \"r\",\r\n\t\"Ś\": \"S\",\r\n\t\"ś\": \"s\",\r\n\t\"Ŝ\": \"S\",\r\n\t\"ŝ\": \"s\",\r\n\t\"Ş\": \"S\",\r\n\t\"Ș\": \"S\",\r\n\t\"ș\": \"s\",\r\n\t\"ş\": \"s\",\r\n\t\"Š\": \"S\",\r\n\t\"š\": \"s\",\r\n\t\"Ţ\": \"T\",\r\n\t\"ţ\": \"t\",\r\n\t\"ț\": \"t\",\r\n\t\"Ț\": \"T\",\r\n\t\"Ť\": \"T\",\r\n\t\"ť\": \"t\",\r\n\t\"Ŧ\": \"T\",\r\n\t\"ŧ\": \"t\",\r\n\t\"T̆\": \"T\",\r\n\t\"t̆\": \"t\",\r\n\t\"Ũ\": \"U\",\r\n\t\"ũ\": \"u\",\r\n\t\"Ū\": \"U\",\r\n\t\"ū\": \"u\",\r\n\t\"Ŭ\": \"U\",\r\n\t\"ŭ\": \"u\",\r\n\t\"Ů\": \"U\",\r\n\t\"ů\": \"u\",\r\n\t\"Ű\": \"U\",\r\n\t\"ű\": \"u\",\r\n\t\"Ų\": \"U\",\r\n\t\"ų\": \"u\",\r\n\t\"Ȗ\": \"U\",\r\n\t\"ȗ\": \"u\",\r\n\t\"V̆\": \"V\",\r\n\t\"v̆\": \"v\",\r\n\t\"Ŵ\": \"W\",\r\n\t\"ŵ\": \"w\",\r\n\t\"Ẃ\": \"W\",\r\n\t\"ẃ\": \"w\",\r\n\t\"X̆\": \"X\",\r\n\t\"x̆\": \"x\",\r\n\t\"Ŷ\": \"Y\",\r\n\t\"ŷ\": \"y\",\r\n\t\"Ÿ\": \"Y\",\r\n\t\"Y̆\": \"Y\",\r\n\t\"y̆\": \"y\",\r\n\t\"Ź\": \"Z\",\r\n\t\"ź\": \"z\",\r\n\t\"Ż\": \"Z\",\r\n\t\"ż\": \"z\",\r\n\t\"Ž\": \"Z\",\r\n\t\"ž\": \"z\",\r\n\t\"ſ\": \"s\",\r\n\t\"ƒ\": \"f\",\r\n\t\"Ơ\": \"O\",\r\n\t\"ơ\": \"o\",\r\n\t\"Ư\": \"U\",\r\n\t\"ư\": \"u\",\r\n\t\"Ǎ\": \"A\",\r\n\t\"ǎ\": \"a\",\r\n\t\"Ǐ\": \"I\",\r\n\t\"ǐ\": \"i\",\r\n\t\"Ǒ\": \"O\",\r\n\t\"ǒ\": \"o\",\r\n\t\"Ǔ\": \"U\",\r\n\t\"ǔ\": \"u\",\r\n\t\"Ǖ\": \"U\",\r\n\t\"ǖ\": \"u\",\r\n\t\"Ǘ\": \"U\",\r\n\t\"ǘ\": \"u\",\r\n\t\"Ǚ\": \"U\",\r\n\t\"ǚ\": \"u\",\r\n\t\"Ǜ\": \"U\",\r\n\t\"ǜ\": \"u\",\r\n\t\"Ứ\": \"U\",\r\n\t\"ứ\": \"u\",\r\n\t\"Ṹ\": \"U\",\r\n\t\"ṹ\": \"u\",\r\n\t\"Ǻ\": \"A\",\r\n\t\"ǻ\": \"a\",\r\n\t\"Ǽ\": \"AE\",\r\n\t\"ǽ\": \"ae\",\r\n\t\"Ǿ\": \"O\",\r\n\t\"ǿ\": \"o\",\r\n\t\"Þ\": \"TH\",\r\n\t\"þ\": \"th\",\r\n\t\"Ṕ\": \"P\",\r\n\t\"ṕ\": \"p\",\r\n\t\"Ṥ\": \"S\",\r\n\t\"ṥ\": \"s\",\r\n\t\"X́\": \"X\",\r\n\t\"x́\": \"x\",\r\n\t\"Ѓ\": \"Г\",\r\n\t\"ѓ\": \"г\",\r\n\t\"Ќ\": \"К\",\r\n\t\"ќ\": \"к\",\r\n\t\"A̋\": \"A\",\r\n\t\"a̋\": \"a\",\r\n\t\"E̋\": \"E\",\r\n\t\"e̋\": \"e\",\r\n\t\"I̋\": \"I\",\r\n\t\"i̋\": \"i\",\r\n\t\"Ǹ\": \"N\",\r\n\t\"ǹ\": \"n\",\r\n\t\"Ồ\": \"O\",\r\n\t\"ồ\": \"o\",\r\n\t\"Ṑ\": \"O\",\r\n\t\"ṑ\": \"o\",\r\n\t\"Ừ\": \"U\",\r\n\t\"ừ\": \"u\",\r\n\t\"Ẁ\": \"W\",\r\n\t\"ẁ\": \"w\",\r\n\t\"Ỳ\": \"Y\",\r\n\t\"ỳ\": \"y\",\r\n\t\"Ȁ\": \"A\",\r\n\t\"ȁ\": \"a\",\r\n\t\"Ȅ\": \"E\",\r\n\t\"ȅ\": \"e\",\r\n\t\"Ȉ\": \"I\",\r\n\t\"ȉ\": \"i\",\r\n\t\"Ȍ\": \"O\",\r\n\t\"ȍ\": \"o\",\r\n\t\"Ȑ\": \"R\",\r\n\t\"ȑ\": \"r\",\r\n\t\"Ȕ\": \"U\",\r\n\t\"ȕ\": \"u\",\r\n\t\"B̌\": \"B\",\r\n\t\"b̌\": \"b\",\r\n\t\"Č̣\": \"C\",\r\n\t\"č̣\": \"c\",\r\n\t\"Ê̌\": \"E\",\r\n\t\"ê̌\": \"e\",\r\n\t\"F̌\": \"F\",\r\n\t\"f̌\": \"f\",\r\n\t\"Ǧ\": \"G\",\r\n\t\"ǧ\": \"g\",\r\n\t\"Ȟ\": \"H\",\r\n\t\"ȟ\": \"h\",\r\n\t\"J̌\": \"J\",\r\n\t\"ǰ\": \"j\",\r\n\t\"Ǩ\": \"K\",\r\n\t\"ǩ\": \"k\",\r\n\t\"M̌\": \"M\",\r\n\t\"m̌\": \"m\",\r\n\t\"P̌\": \"P\",\r\n\t\"p̌\": \"p\",\r\n\t\"Q̌\": \"Q\",\r\n\t\"q̌\": \"q\",\r\n\t\"Ř̩\": \"R\",\r\n\t\"ř̩\": \"r\",\r\n\t\"Ṧ\": \"S\",\r\n\t\"ṧ\": \"s\",\r\n\t\"V̌\": \"V\",\r\n\t\"v̌\": \"v\",\r\n\t\"W̌\": \"W\",\r\n\t\"w̌\": \"w\",\r\n\t\"X̌\": \"X\",\r\n\t\"x̌\": \"x\",\r\n\t\"Y̌\": \"Y\",\r\n\t\"y̌\": \"y\",\r\n\t\"A̧\": \"A\",\r\n\t\"a̧\": \"a\",\r\n\t\"B̧\": \"B\",\r\n\t\"b̧\": \"b\",\r\n\t\"Ḑ\": \"D\",\r\n\t\"ḑ\": \"d\",\r\n\t\"Ȩ\": \"E\",\r\n\t\"ȩ\": \"e\",\r\n\t\"Ɛ̧\": \"E\",\r\n\t\"ɛ̧\": \"e\",\r\n\t\"Ḩ\": \"H\",\r\n\t\"ḩ\": \"h\",\r\n\t\"I̧\": \"I\",\r\n\t\"i̧\": \"i\",\r\n\t\"Ɨ̧\": \"I\",\r\n\t\"ɨ̧\": \"i\",\r\n\t\"M̧\": \"M\",\r\n\t\"m̧\": \"m\",\r\n\t\"O̧\": \"O\",\r\n\t\"o̧\": \"o\",\r\n\t\"Q̧\": \"Q\",\r\n\t\"q̧\": \"q\",\r\n\t\"U̧\": \"U\",\r\n\t\"u̧\": \"u\",\r\n\t\"X̧\": \"X\",\r\n\t\"x̧\": \"x\",\r\n\t\"Z̧\": \"Z\",\r\n\t\"z̧\": \"z\",\r\n};\r\n\r\nvar chars = Object.keys(characterMap).join('|');\r\nvar allAccents = new RegExp(chars, 'g');\r\nvar firstAccent = new RegExp(chars, '');\r\n\r\nvar removeAccents = function(string) {\t\r\n\treturn string.replace(allAccents, function(match) {\r\n\t\treturn characterMap[match];\r\n\t});\r\n};\r\n\r\nvar hasAccents = function(string) {\r\n\treturn !!string.match(firstAccent);\r\n};\r\n\r\nmodule.exports = removeAccents;\r\nmodule.exports.has = hasAccents;\r\nmodule.exports.remove = removeAccents;\r\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport removeAccents from 'remove-accents';\n\nvar rankings = {\n  CASE_SENSITIVE_EQUAL: 9,\n  EQUAL: 8,\n  STARTS_WITH: 7,\n  WORD_STARTS_WITH: 6,\n  STRING_CASE: 5,\n  STRING_CASE_ACRONYM: 4,\n  CONTAINS: 3,\n  ACRONYM: 2,\n  MATCHES: 1,\n  NO_MATCH: 0\n};\nvar caseRankings = {\n  CAMEL: 0.8,\n  PASCAL: 0.6,\n  KEBAB: 0.4,\n  SNAKE: 0.2,\n  NO_CASE: 0\n};\nmatchSorter.rankings = rankings;\nmatchSorter.caseRankings = caseRankings;\n/**\n * Takes an array of items and a value and returns a new array with the items that match the given value\n * @param {Array} items - the items to sort\n * @param {String} value - the value to use for ranking\n * @param {Object} options - Some options to configure the sorter\n * @return {Array} - the new sorted array\n */\n\nfunction matchSorter(items, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  // not performing any search/sort if value(search term) is empty\n  if (!value) return items;\n  var _options = options,\n      keys = _options.keys,\n      _options$threshold = _options.threshold,\n      threshold = _options$threshold === void 0 ? rankings.MATCHES : _options$threshold;\n  var matchedItems = items.reduce(reduceItemsToRanked, []);\n  return matchedItems.sort(sortRankedItems).map(function (_ref) {\n    var item = _ref.item;\n    return item;\n  });\n\n  function reduceItemsToRanked(matches, item, index) {\n    var _getHighestRanking = getHighestRanking(item, keys, value, options),\n        rankedItem = _getHighestRanking.rankedItem,\n        rank = _getHighestRanking.rank,\n        keyIndex = _getHighestRanking.keyIndex,\n        _getHighestRanking$ke = _getHighestRanking.keyThreshold,\n        keyThreshold = _getHighestRanking$ke === void 0 ? threshold : _getHighestRanking$ke;\n\n    if (rank >= keyThreshold) {\n      matches.push({\n        rankedItem: rankedItem,\n        item: item,\n        rank: rank,\n        index: index,\n        keyIndex: keyIndex\n      });\n    }\n\n    return matches;\n  }\n}\n/**\n * Gets the highest ranking for value for the given item based on its values for the given keys\n * @param {*} item - the item to rank\n * @param {Array} keys - the keys to get values from the item for the ranking\n * @param {String} value - the value to rank against\n * @param {Object} options - options to control the ranking\n * @return {{rank: Number, keyIndex: Number, keyThreshold: Number}} - the highest ranking\n */\n\n\nfunction getHighestRanking(item, keys, value, options) {\n  if (!keys) {\n    return {\n      // ends up being duplicate of 'item' in matches but consistent\n      rankedItem: item,\n      rank: getMatchRanking(item, value, options),\n      keyIndex: -1,\n      keyThreshold: options.threshold\n    };\n  }\n\n  var valuesToRank = getAllValuesToRank(item, keys);\n  return valuesToRank.reduce(function (_ref2, _ref3, i) {\n    var rank = _ref2.rank,\n        keyIndex = _ref2.keyIndex,\n        keyThreshold = _ref2.keyThreshold;\n    var itemValue = _ref3.itemValue,\n        attributes = _ref3.attributes;\n    var newRank = getMatchRanking(itemValue, value, options);\n    var minRanking = attributes.minRanking,\n        maxRanking = attributes.maxRanking,\n        threshold = attributes.threshold;\n\n    if (newRank < minRanking && newRank >= rankings.MATCHES) {\n      newRank = minRanking;\n    } else if (newRank > maxRanking) {\n      newRank = maxRanking;\n    }\n\n    if (newRank > rank) {\n      rank = newRank;\n      keyIndex = i;\n      keyThreshold = threshold;\n    }\n\n    return {\n      rankedItem: itemValue,\n      rank: rank,\n      keyIndex: keyIndex,\n      keyThreshold: keyThreshold\n    };\n  }, {\n    rank: rankings.NO_MATCH,\n    keyIndex: -1,\n    keyThreshold: options.threshold\n  });\n}\n/**\n * Gives a rankings score based on how well the two strings match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Object} options - options for the match (like keepDiacritics for comparison)\n * @returns {Number} the ranking for how well stringToRank matches testString\n */\n\n\nfunction getMatchRanking(testString, stringToRank, options) {\n  /* eslint complexity:[2, 12] */\n  testString = prepareValueForComparison(testString, options);\n  stringToRank = prepareValueForComparison(stringToRank, options); // too long\n\n  if (stringToRank.length > testString.length) {\n    return rankings.NO_MATCH;\n  } // case sensitive equals\n\n\n  if (testString === stringToRank) {\n    return rankings.CASE_SENSITIVE_EQUAL;\n  }\n\n  var caseRank = getCaseRanking(testString);\n  var isPartial = isPartialOfCase(testString, stringToRank, caseRank);\n  var isCasedAcronym = isCaseAcronym(testString, stringToRank, caseRank); // Lower casing before further comparison\n\n  testString = testString.toLowerCase();\n  stringToRank = stringToRank.toLowerCase(); // case insensitive equals\n\n  if (testString === stringToRank) {\n    return rankings.EQUAL + caseRank;\n  } // starts with\n\n\n  if (testString.indexOf(stringToRank) === 0) {\n    return rankings.STARTS_WITH + caseRank;\n  } // word starts with\n\n\n  if (testString.indexOf(\" \" + stringToRank) !== -1) {\n    return rankings.WORD_STARTS_WITH + caseRank;\n  } // is a part inside a cased string\n\n\n  if (isPartial) {\n    return rankings.STRING_CASE + caseRank;\n  } // is acronym for a cased string\n\n\n  if (caseRank > 0 && isCasedAcronym) {\n    return rankings.STRING_CASE_ACRONYM + caseRank;\n  } // contains\n\n\n  if (testString.indexOf(stringToRank) !== -1) {\n    return rankings.CONTAINS + caseRank;\n  } else if (stringToRank.length === 1) {\n    // If the only character in the given stringToRank\n    //   isn't even contained in the testString, then\n    //   it's definitely not a match.\n    return rankings.NO_MATCH;\n  } // acronym\n\n\n  if (getAcronym(testString).indexOf(stringToRank) !== -1) {\n    return rankings.ACRONYM + caseRank;\n  } // will return a number between rankings.MATCHES and\n  // rankings.MATCHES + 1 depending  on how close of a match it is.\n\n\n  return getClosenessRanking(testString, stringToRank);\n}\n/**\n * Generates an acronym for a string.\n *\n * @param {String} string the string for which to produce the acronym\n * @returns {String} the acronym\n */\n\n\nfunction getAcronym(string) {\n  var acronym = '';\n  var wordsInString = string.split(' ');\n  wordsInString.forEach(function (wordInString) {\n    var splitByHyphenWords = wordInString.split('-');\n    splitByHyphenWords.forEach(function (splitByHyphenWord) {\n      acronym += splitByHyphenWord.substr(0, 1);\n    });\n  });\n  return acronym;\n}\n/**\n * Returns a score base on the case of the testString\n * @param {String} testString - the string to test against\n * @returns {Number} the number of the ranking,\n * based on the case between 0 and 1 for how the testString matches the case\n */\n\n\nfunction getCaseRanking(testString) {\n  var containsUpperCase = testString.toLowerCase() !== testString;\n  var containsDash = testString.indexOf('-') >= 0;\n  var containsUnderscore = testString.indexOf('_') >= 0;\n\n  if (!containsUpperCase && !containsUnderscore && containsDash) {\n    return caseRankings.KEBAB;\n  }\n\n  if (!containsUpperCase && containsUnderscore && !containsDash) {\n    return caseRankings.SNAKE;\n  }\n\n  if (containsUpperCase && !containsDash && !containsUnderscore) {\n    var startsWithUpperCase = testString[0].toUpperCase() === testString[0];\n\n    if (startsWithUpperCase) {\n      return caseRankings.PASCAL;\n    }\n\n    return caseRankings.CAMEL;\n  }\n\n  return caseRankings.NO_CASE;\n}\n/**\n * Returns whether the stringToRank is one of the case parts in the testString (works with any string case)\n * @example\n * // returns true\n * isPartialOfCase('helloWorld', 'world', caseRankings.CAMEL)\n * @example\n * // returns false\n * isPartialOfCase('helloWorld', 'oworl', caseRankings.CAMEL)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @param {Number} caseRanking - the ranking score based on case of testString\n * @returns {Boolean} whether the stringToRank is one of the case parts in the testString\n */\n\n\nfunction isPartialOfCase(testString, stringToRank, caseRanking) {\n  var testIndex = testString.toLowerCase().indexOf(stringToRank.toLowerCase());\n\n  switch (caseRanking) {\n    case caseRankings.SNAKE:\n      return testString[testIndex - 1] === '_';\n\n    case caseRankings.KEBAB:\n      return testString[testIndex - 1] === '-';\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      return testIndex !== -1 && testString[testIndex] === testString[testIndex].toUpperCase();\n\n    default:\n      return false;\n  }\n}\n/**\n * Check if stringToRank is an acronym for a partial case\n * @example\n * // returns true\n * isCaseAcronym('super_duper_file', 'sdf', caseRankings.SNAKE)\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the acronym to test\n * @param {Number} caseRank - the ranking of the case\n * @returns {Boolean} whether the stringToRank is an acronym for the testString\n */\n\n\nfunction isCaseAcronym(testString, stringToRank, caseRank) {\n  var splitValue = null;\n\n  switch (caseRank) {\n    case caseRankings.SNAKE:\n      splitValue = '_';\n      break;\n\n    case caseRankings.KEBAB:\n      splitValue = '-';\n      break;\n\n    case caseRankings.PASCAL:\n    case caseRankings.CAMEL:\n      splitValue = /(?=[A-Z])/;\n      break;\n\n    default:\n      splitValue = null;\n  }\n\n  var splitTestString = testString.split(splitValue);\n  return stringToRank.toLowerCase().split('').reduce(function (correct, char, charIndex) {\n    var splitItem = splitTestString[charIndex];\n    return correct && splitItem && splitItem[0].toLowerCase() === char;\n  }, true);\n}\n/**\n * Returns a score based on how spread apart the\n * characters from the stringToRank are within the testString.\n * A number close to rankings.MATCHES represents a loose match. A number close\n * to rankings.MATCHES + 1 represents a tighter match.\n * @param {String} testString - the string to test against\n * @param {String} stringToRank - the string to rank\n * @returns {Number} the number between rankings.MATCHES and\n * rankings.MATCHES + 1 for how well stringToRank matches testString\n */\n\n\nfunction getClosenessRanking(testString, stringToRank) {\n  var matchingInOrderCharCount = 0;\n  var charNumber = 0;\n\n  function findMatchingCharacter(matchChar, string, index) {\n    for (var j = index; j < string.length; j++) {\n      var stringChar = string[j];\n\n      if (stringChar === matchChar) {\n        matchingInOrderCharCount += 1;\n        return j + 1;\n      }\n    }\n\n    return -1;\n  }\n\n  function getRanking(spread) {\n    var inOrderPercentage = matchingInOrderCharCount / stringToRank.length;\n    var ranking = rankings.MATCHES + inOrderPercentage * (1 / spread);\n    return ranking;\n  }\n\n  var firstIndex = findMatchingCharacter(stringToRank[0], testString, 0);\n\n  if (firstIndex < 0) {\n    return rankings.NO_MATCH;\n  }\n\n  charNumber = firstIndex;\n\n  for (var i = 1; i < stringToRank.length; i++) {\n    var matchChar = stringToRank[i];\n    charNumber = findMatchingCharacter(matchChar, testString, charNumber);\n    var found = charNumber > -1;\n\n    if (!found) {\n      return rankings.NO_MATCH;\n    }\n  }\n\n  var spread = charNumber - firstIndex;\n  return getRanking(spread);\n}\n/**\n * Sorts items that have a rank, index, and keyIndex\n * @param {Object} a - the first item to sort\n * @param {Object} b - the second item to sort\n * @return {Number} -1 if a should come first, 1 if b should come first\n * Note: will never return 0\n */\n\n\nfunction sortRankedItems(a, b) {\n  var aFirst = -1;\n  var bFirst = 1;\n  var aRankedItem = a.rankedItem,\n      aRank = a.rank,\n      aKeyIndex = a.keyIndex;\n  var bRankedItem = b.rankedItem,\n      bRank = b.rank,\n      bKeyIndex = b.keyIndex;\n\n  if (aRank === bRank) {\n    if (aKeyIndex === bKeyIndex) {\n      return String(aRankedItem).localeCompare(bRankedItem);\n    } else {\n      return aKeyIndex < bKeyIndex ? aFirst : bFirst;\n    }\n  } else {\n    return aRank > bRank ? aFirst : bFirst;\n  }\n}\n/**\n * Prepares value for comparison by stringifying it, removing diacritics (if specified)\n * @param {String} value - the value to clean\n * @param {Object} options - {keepDiacritics: whether to remove diacritics}\n * @return {String} the prepared value\n */\n\n\nfunction prepareValueForComparison(value, _ref4) {\n  var keepDiacritics = _ref4.keepDiacritics;\n  value = \"\" + value; // toString\n\n  if (!keepDiacritics) {\n    value = removeAccents(value);\n  }\n\n  return value;\n}\n/**\n * Gets value for key in item at arbitrarily nested keypath\n * @param {Object} item - the item\n * @param {Object|Function} key - the potentially nested keypath or property callback\n * @return {Array} - an array containing the value(s) at the nested keypath\n */\n\n\nfunction getItemValues(item, key) {\n  if (typeof key === 'object') {\n    key = key.key;\n  }\n\n  var value;\n\n  if (typeof key === 'function') {\n    value = key(item); // eslint-disable-next-line no-negated-condition\n  } else if (key.indexOf('.') !== -1) {\n    // handle nested keys\n    value = key.split('.').reduce(function (itemObj, nestedKey) {\n      return itemObj ? itemObj[nestedKey] : null;\n    }, item);\n  } else {\n    value = item[key];\n  } // concat because `value` can be a string or an array\n  // eslint-disable-next-line\n\n\n  return value != null ? [].concat(value) : null;\n}\n/**\n * Gets all the values for the given keys in the given item and returns an array of those values\n * @param {Object} item - the item from which the values will be retrieved\n * @param {Array} keys - the keys to use to retrieve the values\n * @return {Array} objects with {itemValue, attributes}\n */\n\n\nfunction getAllValuesToRank(item, keys) {\n  return keys.reduce(function (allVals, key) {\n    var values = getItemValues(item, key);\n\n    if (values) {\n      values.forEach(function (itemValue) {\n        allVals.push({\n          itemValue: itemValue,\n          attributes: getKeyAttributes(key)\n        });\n      });\n    }\n\n    return allVals;\n  }, []);\n}\n/**\n * Gets all the attributes for the given key\n * @param {Object|String} key - the key from which the attributes will be retrieved\n * @return {Object} object containing the key's attributes\n */\n\n\nfunction getKeyAttributes(key) {\n  if (typeof key === 'string') {\n    key = {\n      key: key\n    };\n  }\n\n  return _extends({\n    maxRanking: Infinity,\n    minRanking: -Infinity\n  }, key);\n}\n\nexport default matchSorter;\nexport { rankings };\n","import _ from 'lodash/fp';\nimport { createSelector } from 'reselect';\nimport matchSorter from 'match-sorter';\n\nimport {\n  SORT,\n  CHART_MIN_MAX,\n  DURATION_DEFAULT,\n  RANK_FILTER,\n} from 'legacy-code/constants/leaderboard';\nimport { defaultFilter } from 'legacy-code/reducers/results';\n\nconst filterCharts = (filter, rows) => {\n  const range = _.getOr(CHART_MIN_MAX, 'range', filter);\n  const type = _.getOr(null, 'type', filter);\n  const duration = _.getOr(DURATION_DEFAULT, 'duration', filter);\n\n  return _.filter((row) => {\n    if (duration !== DURATION_DEFAULT && !duration.includes(row.duration)) {\n      return false;\n    }\n    return (\n      row.chartLevel >= range[0] &&\n      row.chartLevel <= range[1] &&\n      (!type || row.chartType.startsWith(type))\n    );\n  }, rows);\n};\n\nconst getFilteredData = (data, filter = defaultFilter, preferences) => {\n  if (data.length === 0) {\n    return [];\n  }\n  const start = performance.now();\n  const playersHiddenStatus = preferences.playersHiddenStatus;\n  const showHidden = filter.showHiddenFromPreferences;\n  const names = _.map('value', filter.players);\n  const namesOr = _.map('value', filter.playersOr);\n  const namesNot = _.map('value', filter.playersNot);\n  const sortingType = _.get('value', filter.sortingType);\n  const rankFilter = _.get('value', filter.rank) || RANK_FILTER.SHOW_ALL;\n  const protagonist = [\n    SORT.PROTAGONIST,\n    SORT.PP_ASC,\n    SORT.PP_DESC,\n    SORT.NEW_SCORES_PLAYER,\n  ].includes(sortingType)\n    ? _.get('value', filter.protagonist)\n    : null;\n  const excludeAntagonists = _.map('value', filter.excludeAntagonists);\n\n  const defaultSorting = [\n    _.orderBy(\n      [\n        (song) =>\n          _.max(\n            _.map(\n              (res) =>\n                showHidden || !playersHiddenStatus[res.playerId]\n                  ? res.dateAddedObject.getTime()\n                  : 0,\n              song.results\n            )\n          ),\n      ],\n      ['desc']\n    ),\n  ];\n  const newScoresProtagonistSorting = !protagonist\n    ? defaultSorting\n    : [\n        _.orderBy(\n          [\n            (song) =>\n              _.max(\n                _.map(\n                  (res) => (res.nickname === protagonist ? res.dateAddedObject.getTime() : 0),\n                  song.results\n                )\n              ),\n          ],\n          ['desc']\n        ),\n      ];\n  const protagonistSorting = [\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\n    _.map((row) => {\n      const protIndex = _.findIndex({ nickname: protagonist }, row.results);\n      const protScore = row.results[protIndex].score;\n      const enemies = _.flow([\n        _.take(protIndex),\n        _.uniqBy('nickname'),\n        _.remove((res) => excludeAntagonists.includes(res.nickname) || res.score === protScore),\n      ])(row.results);\n      const distance = Math.sqrt(\n        _.reduce((dist, enemy) => dist + (enemy.score / protScore - 0.99) ** 2, 0, enemies)\n      );\n      return {\n        ...row,\n        distanceFromProtagonist: distance,\n      };\n    }),\n    _.orderBy(['distanceFromProtagonist'], ['desc']),\n  ];\n  const getPpSorting = (direction = 'desc') => [\n    _.filter((row) => _.map('nickname', row.results).includes(protagonist)),\n    _.orderBy((row) => {\n      const result = _.find({ nickname: protagonist }, row.results);\n      return result.pp || 0;\n    }, direction),\n  ];\n\n  const getDiffSorting = (direction = 'desc') => [\n    _.orderBy((row) => row.difficulty ?? Number(row.chartLevel), direction),\n  ];\n\n  const sortingFunctions =\n    {\n      [SORT.DEFAULT]: defaultSorting,\n      [SORT.NEW_SCORES_PLAYER]: newScoresProtagonistSorting,\n      [SORT.PROTAGONIST]: protagonistSorting,\n      [SORT.PP_ASC]: getPpSorting('asc'),\n      [SORT.PP_DESC]: getPpSorting('desc'),\n      [SORT.EASIEST_SONGS]: getDiffSorting('asc'),\n      [SORT.HARDEST_SONGS]: getDiffSorting('desc'),\n    }[sortingType] || defaultSorting;\n\n  const result = _.flow(\n    _.compact([\n      _.map((row) => {\n        let latestScoreDate = null;\n        let latestAddedScoreDate = null;\n        const occuredIds = [];\n        const results = row.results.filter((res, index) => {\n          const isVisibleWithRankFilter =\n            !rankFilter || rankFilter === RANK_FILTER.SHOW_ALL\n              ? true\n              : rankFilter === RANK_FILTER.SHOW_ONLY_RANK\n              ? res.isRank\n              : rankFilter === RANK_FILTER.SHOW_ONLY_NORANK\n              ? !res.isRank\n              : rankFilter === RANK_FILTER.SHOW_BEST\n              ? !occuredIds.includes(res.playerId)\n              : true;\n          rankFilter === RANK_FILTER.SHOW_BEST && occuredIds.push(res.playerId);\n\n          const isVisible = (!res.isUnknownPlayer || index === 0) && isVisibleWithRankFilter;\n          if (isVisible) {\n            if (!latestScoreDate || latestScoreDate < res.date) {\n              latestScoreDate = res.date;\n            }\n            if (!latestAddedScoreDate || latestAddedScoreDate < res.dateAdded) {\n              latestAddedScoreDate = res.dateAdded;\n            }\n          }\n          return isVisible;\n        }, row.results);\n        return {\n          ...row,\n          latestScoreDate,\n          latestAddedScoreDate,\n          results,\n          songFullName: `${row.song} ${row.chartType}${row.chartLevel}`,\n        };\n      }),\n      filter.chartRange && ((items) => filterCharts(filter.chartRange, items)),\n      (names.length || namesOr.length || namesNot.length) &&\n        _.filter((row) => {\n          const rowNames = _.map('nickname', row.results);\n          return (\n            (!names.length || _.every((name) => rowNames.includes(name), names)) &&\n            (!namesOr.length || _.some((name) => rowNames.includes(name), namesOr)) &&\n            (!namesNot.length || !_.some((name) => rowNames.includes(name), namesNot))\n          );\n        }),\n      _.filter((row) => _.size(row.results)),\n      ...sortingFunctions,\n      filter.song &&\n        ((items) => matchSorter(items, filter.song.trim(), { keys: ['songFullName'] })),\n    ])\n  )(data);\n  console.log('Sorting took', performance.now() - start, 'ms');\n  return result;\n};\n\nexport const filteredDataSelector = createSelector(\n  (state) => state.results.data,\n  (state) => state.results.filter,\n  (state) => state.preferences.data,\n  getFilteredData\n);\n\nexport const sharedChartDataSelector = createSelector(\n  (state) => state.results.data,\n  (state, props) => props.params.sharedChartId,\n  (data, sharedChartId) => {\n    // eslint-disable-next-line eqeqeq\n    const charts = data.filter((chart) => chart.sharedChartId == sharedChartId);\n    // console.log(chart);\n    return charts.map((chart) => ({\n      ...chart,\n      latestScoreDate: _.max(_.map('date', chart.results)),\n      latestAddedScoreDate: _.max(_.map('dateAdded', chart.results)),\n    }));\n  }\n);\n","import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport _ from 'lodash/fp';\nimport Select from 'react-select';\nimport classNames from 'classnames';\nimport { FaArrowLeft, FaRedoAlt, FaSearch, FaPlusCircle } from 'react-icons/fa';\nimport { NavLink, useNavigate, useParams } from 'react-router-dom';\n\n// styles\nimport './leaderboard.scss';\n\n// components\nimport ToggleButton from 'legacy-code/components/Shared/ToggleButton/ToggleButton';\nimport Loader from 'legacy-code/components/Shared/Loader';\nimport Input from 'legacy-code/components/Shared/Input/Input';\nimport Toggle from 'legacy-code/components/Shared/Toggle/Toggle';\nimport CollapsibleBar from 'legacy-code/components/Shared/CollapsibleBar';\nimport ChartFilter from './ChartFilter';\nimport PresetsControl from './PresetsControl';\nimport Chart from './Chart';\n\n// constants\nimport { routes } from 'legacy-code/constants/routes';\nimport { RANK_FILTER, SORT } from 'legacy-code/constants/leaderboard';\n\n// reducers\nimport { fetchChartsData, postChartsProcessing } from 'legacy-code/reducers/charts';\nimport {\n  defaultFilter,\n  resetFilter as resetFilterAction,\n  setFilter as setFilterAction,\n} from 'legacy-code/reducers/results';\nimport { openPreset, selectPreset } from 'legacy-code/reducers/presets';\nimport { filteredDataSelector, sharedChartDataSelector } from 'legacy-code/reducers/selectors';\n\n// utils\nimport { colorsArray } from 'legacy-code/utils/colors';\nimport { Language } from 'utils/context/translation';\nimport { storageKeys, setItem } from 'legacy-code/utils/storage/versionedStorage';\n\nimport { usePlayers } from 'hooks/usePlayers';\nimport { useUser } from 'hooks/useUser';\n\nimport { FilteredDataContext } from '../Contexts/FilteredDataContext';\n\nconst INITIAL_COUNT = 10;\n\n// code\nconst getSortingOptions = _.memoize((lang) => [\n  {\n    label: lang.NEW_TO_OLD_SCORES,\n    value: SORT.DEFAULT,\n  },\n  {\n    label: lang.NEW_TO_OLD_SCORES_OF_A_PLAYER,\n    value: SORT.NEW_SCORES_PLAYER,\n  },\n  // {\n  //   label: lang.SCORE_DIFFERENCE,\n  //   value: SORT.PROTAGONIST,\n  // },\n  {\n    label: lang.WORST_TO_BEST_BY_PP,\n    value: SORT.PP_ASC,\n  },\n  {\n    label: lang.BEST_TO_WORST_BY_PP,\n    value: SORT.PP_DESC,\n  },\n  {\n    label: lang.EASY_TO_HARD_CHARTS,\n    value: SORT.EASIEST_SONGS,\n  },\n  {\n    label: lang.HARD_TO_EASY_CHARTS,\n    value: SORT.HARDEST_SONGS,\n  },\n]);\n\nconst getRankOptions = _.memoize((lang) => [\n  {\n    label: lang.SHOW_ALL_SCORES,\n    value: RANK_FILTER.SHOW_ALL,\n  },\n  {\n    label: lang.BEST_SCORE,\n    value: RANK_FILTER.SHOW_BEST,\n  },\n  {\n    label: lang.RANK_ONLY,\n    value: RANK_FILTER.SHOW_ONLY_RANK,\n  },\n  {\n    label: lang.ONLY_NO_RANK,\n    value: RANK_FILTER.SHOW_ONLY_NORANK,\n  },\n]);\n\nconst usePlayersOptions = () => {\n  const players = usePlayers();\n  const user = useUser();\n\n  return useMemo(() => {\n    return {\n      isLoading: user.isLoading || players.isLoading,\n      options:\n        !user.data || !players.data\n          ? []\n          : _.flow(\n              _.map(({ nickname, arcade_name, id }) => ({\n                label: `${nickname} (${arcade_name})`,\n                value: nickname,\n                isCurrentPlayer: user.data.id === id,\n              })),\n              _.sortBy((it) => (it.isCurrentPlayer ? '!' : _.toLower(it.label)))\n            )(players.data),\n    };\n  }, [players, user]);\n};\n\nconst Leaderboard = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const isChartView = !!params.sharedChartId;\n\n  const { options: players, isLoading: isLoadingPlayers } = usePlayersOptions();\n  const canAddResults = useSelector((state) => state.user.data?.player?.can_add_results_manually);\n  const filteredData = useSelector((state) =>\n    isChartView ? sharedChartDataSelector(state, { params }) : filteredDataSelector(state)\n  );\n  const stateFilter = useSelector((state) => state.results.filter);\n  const filter = isChartView ? defaultFilter : stateFilter;\n  const error = useSelector((state) => state.charts.error || state.tracklist.error);\n  const isLoading = useSelector(\n    (state) => state.charts.isLoading || state.tracklist.isLoading || state.results.isLoading\n  );\n  const presets = useSelector((state) => state.presets.presets);\n\n  const [showItemsCount, setShowItemsCount] = useState(INITIAL_COUNT);\n  const lang = useContext(Language);\n\n  const setFilter = _.curry((name, value) => {\n    const newFilter = { ...filter, [name]: value };\n    dispatch(setFilterAction(newFilter));\n    setShowItemsCount(INITIAL_COUNT);\n    setItem(storageKeys.filter, newFilter);\n  });\n\n  const resetFilter = () => {\n    dispatch(resetFilterAction());\n    setItem(storageKeys.filter, defaultFilter);\n  };\n\n  const onRefresh = async () => {\n    setShowItemsCount(INITIAL_COUNT);\n    if (!isLoading) {\n      await dispatch(fetchChartsData());\n      dispatch(postChartsProcessing());\n    }\n  };\n\n  const onTypeSongName = _.debounce(300, (value) => {\n    setFilter('song', value);\n  });\n\n  const renderSimpleSearch = () => {\n    return (\n      <Language.Consumer>\n        {(lang) => (\n          <div className=\"simple-search\">\n            <div className=\"song-name _margin-right _margin-bottom\">\n              <Input\n                value={filter.song || ''}\n                placeholder={lang.SONG_NAME_PLACEHOLDER}\n                className=\"form-control\"\n                onChange={onTypeSongName}\n              />\n            </div>\n            <div className=\"chart-range _margin-right _margin-bottom\">\n              <ChartFilter filterValue={filter.chartRange} onChange={setFilter('chartRange')} />\n            </div>\n            <div className=\"_flex-fill\" />\n            <div className=\"_flex-row _margin-bottom\">\n              <PresetsControl />\n              <button className=\"btn btn-sm btn-dark btn-icon _margin-right\" onClick={resetFilter}>\n                <FaRedoAlt /> {lang.RESET_FILTERS}\n              </button>\n              <button\n                disabled={isLoading}\n                className=\"btn btn-sm btn-dark btn-icon\"\n                onClick={onRefresh}\n              >\n                <FaSearch /> {lang.REFRESH}\n              </button>\n            </div>\n          </div>\n        )}\n      </Language.Consumer>\n    );\n  };\n\n  const renderFilters = () => {\n    return (\n      <Language.Consumer>\n        {(lang) => (\n          <div className=\"filters\">\n            <div className=\"people-filters\">\n              <label className=\"label\">{lang.SHOW_CHARTS_PLAYED_BY}</label>\n              <div className=\"players-block\">\n                <div className=\"_margin-right\">\n                  <label className=\"label\">{lang.EACH_OF_THESE}</label>\n                  <Select\n                    closeMenuOnSelect={false}\n                    className=\"select players\"\n                    classNamePrefix=\"select\"\n                    placeholder={lang.PLAYERS_PLACEHOLDER}\n                    isMulti\n                    options={players}\n                    isLoading={isLoadingPlayers}\n                    value={_.getOr(null, 'players', filter)}\n                    onChange={setFilter('players')}\n                  />\n                </div>\n                <div className=\"_margin-right\">\n                  <label className=\"label\">{lang.AND_ANY_OF_THESE}</label>\n                  <Select\n                    closeMenuOnSelect={false}\n                    className=\"select players\"\n                    classNamePrefix=\"select\"\n                    placeholder={lang.PLAYERS_PLACEHOLDER}\n                    isMulti\n                    options={players}\n                    isLoading={isLoadingPlayers}\n                    value={_.getOr(null, 'playersOr', filter)}\n                    onChange={setFilter('playersOr')}\n                  />\n                </div>\n                <div className=\"_margin-right\">\n                  <label className=\"label\">{lang.AND_NONE_OF_THESE}</label>\n                  <Select\n                    closeMenuOnSelect={false}\n                    className=\"select players\"\n                    classNamePrefix=\"select\"\n                    placeholder={lang.PLAYERS_PLACEHOLDER}\n                    isMulti\n                    options={players}\n                    isLoading={isLoadingPlayers}\n                    value={_.getOr(null, 'playersNot', filter)}\n                    onChange={setFilter('playersNot')}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"people-filters\">\n              <div className=\"players-block\">\n                <div className=\"_margin-right\">\n                  <label className=\"label\">{lang.SHOW_RANK}</label>\n                  <Select\n                    closeMenuOnSelect={false}\n                    className=\"select\"\n                    classNamePrefix=\"select\"\n                    placeholder=\"...\"\n                    options={getRankOptions(lang)}\n                    value={_.getOr(null, 'rank', filter) || RANK_FILTER.SHOW_ALL}\n                    onChange={setFilter('rank')}\n                  />\n                </div>\n              </div>\n            </div>\n            <div>\n              <Toggle\n                checked={_.getOr(false, 'showHiddenFromPreferences', filter)}\n                onChange={setFilter('showHiddenFromPreferences')}\n              >\n                {lang.SHOW_HIDDEN_PLAYERS}\n              </Toggle>\n            </div>\n          </div>\n        )}\n      </Language.Consumer>\n    );\n  };\n\n  const renderSortings = () => {\n    return (\n      <div className=\"sortings\">\n        <div>\n          <label className=\"label\">{lang.SORTING_LABEL}</label>\n          <Select\n            placeholder={lang.SORTING_PLACEHOLDER}\n            className=\"select\"\n            classNamePrefix=\"select\"\n            isClearable={false}\n            options={getSortingOptions(lang)}\n            value={_.getOr(getSortingOptions(lang)[0], 'sortingType', filter)}\n            onChange={setFilter('sortingType')}\n          />\n        </div>\n        {[SORT.PROTAGONIST, SORT.PP_ASC, SORT.PP_DESC, SORT.NEW_SCORES_PLAYER].includes(\n          _.get('sortingType.value', filter)\n        ) && (\n          <div>\n            <label className=\"label\">{lang.PLAYER_LABEL}</label>\n            <Select\n              className={classNames('select players', {\n                'red-border': !_.get('protagonist', filter),\n              })}\n              classNamePrefix=\"select\"\n              placeholder={lang.PLAYERS_PLACEHOLDER}\n              options={players}\n              isLoading={isLoadingPlayers}\n              value={_.getOr(null, 'protagonist', filter)}\n              onChange={setFilter('protagonist')}\n            />\n          </div>\n        )}\n        {[SORT.PROTAGONIST].includes(_.get('sortingType.value', filter)) && (\n          <div>\n            <label className=\"label\">{lang.EXCLUDE_FROM_COMPARISON}</label>\n            <Select\n              closeMenuOnSelect={false}\n              className=\"select players\"\n              classNamePrefix=\"select\"\n              placeholder={lang.PLAYERS_PLACEHOLDER}\n              options={players}\n              isLoading={isLoadingPlayers}\n              isMulti\n              value={_.getOr([], 'excludeAntagonists', filter)}\n              onChange={setFilter('excludeAntagonists')}\n            />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const canShowMore = filteredData.length > showItemsCount;\n  // const visibleData = _.slice(0, showItemsCount, filteredData);\n\n  const sortingType = _.get('sortingType.value', filter);\n  const showProtagonistPpChange = [SORT.PP_ASC, SORT.PP_DESC].includes(sortingType);\n  const highlightProtagonist = [\n    SORT.PROTAGONIST,\n    SORT.PP_ASC,\n    SORT.PP_DESC,\n    SORT.NEW_SCORES_PLAYER,\n  ].includes(sortingType);\n  const protagonistName = filter?.protagonist?.value;\n  const uniqueSelectedNames = useMemo(\n    () =>\n      _.slice(\n        0,\n        colorsArray.length,\n        _.uniq(\n          _.compact([\n            highlightProtagonist && protagonistName,\n            ..._.map('value', filter.players),\n            ..._.map('value', filter.playersOr),\n          ])\n        )\n      ),\n    [filter.players, filter.playersOr, highlightProtagonist, protagonistName]\n  );\n\n  const renderVisibleData = useCallback(\n    (chartIndex) => {\n      return (\n        <Chart\n          showHiddenPlayers={filter.showHiddenFromPreferences}\n          key={filteredData[chartIndex].sharedChartId}\n          chartIndex={chartIndex}\n          showProtagonistPpChange={showProtagonistPpChange}\n          uniqueSelectedNames={uniqueSelectedNames}\n          protagonistName={protagonistName}\n          isChartView={isChartView}\n        />\n      );\n    },\n    [\n      filter.showHiddenFromPreferences,\n      protagonistName,\n      showProtagonistPpChange,\n      uniqueSelectedNames,\n      filteredData,\n      isChartView,\n    ]\n  );\n\n  return (\n    <FilteredDataContext.Provider value={filteredData}>\n      <div className=\"leaderboard-page\">\n        <div className=\"content\">\n          {isChartView && (\n            <div className=\"simple-search\">\n              <button className=\"btn btn-sm btn-dark btn-icon\" onClick={() => navigate(-1)}>\n                <FaArrowLeft /> {lang.BACK_BUTTON}\n              </button>\n              <div className=\"_flex-fill\" />\n              {canAddResults && (\n                <NavLink exact to={routes.leaderboard.sharedChart.addResult.getPath(params)}>\n                  <button className=\"btn btn-sm btn-dark btn-icon\">\n                    <FaPlusCircle /> Add result\n                  </button>\n                </NavLink>\n              )}\n            </div>\n          )}\n          {!isChartView && (\n            <>\n              <div className=\"search-block\">\n                {renderSimpleSearch()}\n                <CollapsibleBar title={lang.FILTERS}>{renderFilters()}</CollapsibleBar>\n                <CollapsibleBar title={lang.SORTING}>{renderSortings()}</CollapsibleBar>\n              </div>\n              {!!presets.length && (\n                <div className=\"presets-buttons\">\n                  <span>{lang.PRESETS}:</span>\n                  {presets.map((preset) => (\n                    <ToggleButton\n                      key={preset.name}\n                      text={preset.name}\n                      className=\"btn btn-sm btn-dark _margin-right\"\n                      active={_.get('filter', preset) === filter}\n                      onToggle={() => {\n                        dispatch(selectPreset(preset));\n                        dispatch(openPreset());\n                      }}\n                    ></ToggleButton>\n                  ))}\n                </div>\n              )}\n            </>\n          )}\n          <div className=\"top-list\">\n            {isLoading && <Loader />}\n            {_.isEmpty(filteredData) && !isLoading && (error ? error.message : lang.NO_RESULTS)}\n            {!isLoading &&\n              Array(showItemsCount < filteredData.length ? showItemsCount : filteredData.length)\n                .fill(() => undefined)\n                .map((_, chartIndex) => renderVisibleData(chartIndex))}\n            {!isLoading && canShowMore && (\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => setShowItemsCount(showItemsCount + 10)}\n              >\n                {lang.SHOW_MORE}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </FilteredDataContext.Provider>\n  );\n};\n\nexport default Leaderboard;\n"],"names":["Input","React","props","_","prevProps","e","newValue","type","value","numericValue","className","jsx","classNames","__publicField","toBe","CollapsibleBar","PureComponent","children","title","open","jsxs","state","FaChevronRight","ChartFilter","filterValue","onChangeEx","range","CHART_MIN_MAX","duration","DURATION_DEFAULT","lang","useLanguage","buttonText","t","onChange","Overlay","ToggleButton","active","Range","r","FaCaretLeft","newMin","FaCaretRight","newMax","DURATION","mapStateToProps","mapDispatchToProps","loadPresets","savePreset","openPreset","deletePreset","selectPreset","PresetsControl","selected","currentPreset","name","presets","isLoading","isAddingNew","FaLayerGroup","Select","FaFolderOpen","FaSave","FaTrashAlt","FaPlus","Language","PresetsControl$1","connect","Result","res","chart","placeDifference","showPpChange","highlightIndex","leftProfile","rightProfile","isSocketView","bestGradeScore","notBestGradeResult","region","useSelector","_a","isCurrentPlayer","_b","ratingInfoBlock","DEBUG","Fragment","flag","Flag","exp","getExp","playerRoute","routes","colorsArray","Link","FaAngleDoubleUp","mod","avMod","xMod","numeral","ResultScreenshotLink","FaExclamationTriangle","Grade","Tooltip","getShortTimeAgo","tooltipFormatter","ResultsCollapser","count","collapsed","setCollapsed","useState","BsArrowsExpand","FilteredDataContext","Chart","propPlayersHiddenStatus","showHiddenPlayers","showProtagonistPpChange","uniqueSelectedNames","protagonistName","chartIndex","forcedChart","ref","currentPlayerId","statePlayersHiddenStatus","playersHiddenStatus","filteredData","useContext","isHidingPlayers","setHidingPlayers","useEffect","topPlace","occuredNicknames","hiddenPlayersCount","results","index","array","isPlayerHidden","isSecondOccurenceInResults","prevScore","isResultImportant","isHighlighted","isBeforeHighlighted","isAfterHighlighted","resultGroups","acc","ChartLabel","NavLink","queryString","FaYoutube","FaGlobeAmericas","group","groupResults","characterMap","chars","allAccents","firstAccent","removeAccents","string","match","hasAccents","removeAccentsModule","rankings","caseRankings","matchSorter","items","options","_options","keys","_options$threshold","threshold","matchedItems","reduceItemsToRanked","sortRankedItems","_ref","item","matches","_getHighestRanking","getHighestRanking","rankedItem","rank","keyIndex","_getHighestRanking$ke","keyThreshold","getMatchRanking","valuesToRank","getAllValuesToRank","_ref2","_ref3","i","itemValue","attributes","newRank","minRanking","maxRanking","testString","stringToRank","prepareValueForComparison","caseRank","getCaseRanking","isPartial","isPartialOfCase","isCasedAcronym","isCaseAcronym","getAcronym","getClosenessRanking","acronym","wordsInString","wordInString","splitByHyphenWords","splitByHyphenWord","containsUpperCase","containsDash","containsUnderscore","startsWithUpperCase","caseRanking","testIndex","splitValue","splitTestString","correct","char","charIndex","splitItem","matchingInOrderCharCount","charNumber","findMatchingCharacter","matchChar","j","stringChar","getRanking","spread","inOrderPercentage","ranking","firstIndex","found","a","b","aFirst","bFirst","aRankedItem","aRank","aKeyIndex","bRankedItem","bRank","bKeyIndex","_ref4","keepDiacritics","getItemValues","key","itemObj","nestedKey","allVals","values","getKeyAttributes","_extends","filterCharts","filter","rows","row","getFilteredData","data","defaultFilter","preferences","start","showHidden","names","namesOr","namesNot","sortingType","rankFilter","RANK_FILTER","protagonist","SORT","excludeAntagonists","defaultSorting","song","newScoresProtagonistSorting","protagonistSorting","protIndex","protScore","enemies","distance","dist","enemy","getPpSorting","direction","getDiffSorting","sortingFunctions","result","latestScoreDate","latestAddedScoreDate","occuredIds","isVisibleWithRankFilter","isVisible","rowNames","filteredDataSelector","createSelector","sharedChartDataSelector","sharedChartId","INITIAL_COUNT","getSortingOptions","getRankOptions","usePlayersOptions","players","usePlayers","user","useUser","useMemo","nickname","arcade_name","id","it","Leaderboard","dispatch","useDispatch","params","useParams","navigate","useNavigate","isChartView","isLoadingPlayers","canAddResults","stateFilter","error","showItemsCount","setShowItemsCount","setFilter","newFilter","setFilterAction","setItem","storageKeys","resetFilter","resetFilterAction","onRefresh","fetchChartsData","postChartsProcessing","onTypeSongName","renderSimpleSearch","FaRedoAlt","FaSearch","renderFilters","Toggle","renderSortings","canShowMore","highlightProtagonist","renderVisibleData","useCallback","FaArrowLeft","FaPlusCircle","preset","Loader"],"mappings":"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","x_google_ignoreList":[8,9]}