{"version":3,"file":"Ranking-1f8fc6de.js","sources":["../../src/legacy-code/components/Ranking/RankingList.jsx","../../src/legacy-code/components/Ranking/RankingFaq.jsx","../../src/legacy-code/components/Ranking/Ranking.jsx"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash/fp';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport { GiQueenCrown } from 'react-icons/gi';\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom';\n\nimport { routes } from 'legacy-code/constants/routes';\n\nimport Grade from 'legacy-code/components/Shared/Grade';\nimport Loader from 'legacy-code/components/Shared/Loader';\nimport Flag from 'legacy-code/components/Shared/Flag';\nimport Toggle from 'legacy-code/components/Shared/Toggle/Toggle';\n\nimport { updatePreferences } from 'legacy-code/reducers/preferences';\n\nimport { getRankImg } from 'legacy-code/utils/exp';\nimport { useLanguage } from 'legacy-code/utils/context/translation';\n\nexport default function RankingList({ ranking, isLoading, preferences }) {\n  const dispatch = useDispatch();\n  const lang = useLanguage();\n\n  return (\n    <div className=\"ranking-list\">\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <table>\n          <thead>\n            <tr>\n              <th className=\"place\">{lang.RANK}</th>\n              <th className=\"change\"></th>\n              <th className=\"exp-rank\">{lang.EXP}</th>\n              <th className=\"name\">{lang.NAME}</th>\n              <th className=\"name name-piu\">{lang.AMPASS}</th>\n              {/*<th className=\"rating\">{lang.ELO}</th>*/}\n              <th className=\"rating\">pp</th>\n              <th className=\"rating-change-cell\"></th>\n              {/* <th className=\"total-score\">total score</th> */}\n              <th className=\"grades sss\">\n                <Grade grade=\"SSS\" />\n              </th>\n              <th className=\"grades ss\">\n                <Grade grade=\"SS\" />\n              </th>\n              <th className=\"grades s\">\n                <Grade grade=\"S\" />\n              </th>\n              <th className=\"grades a\">\n                <Grade grade=\"A+\" />\n              </th>\n              <th className=\"grades b\">\n                <Grade grade=\"B\" />\n              </th>\n              <th className=\"grades c\">\n                <Grade grade=\"C\" />\n              </th>\n              <th className=\"grades d\">\n                <Grade grade=\"D\" />\n              </th>\n              <th className=\"grades f\">\n                <Grade grade=\"F\" />\n              </th>\n              <th className=\"playcount\">{lang.SCORES_count}</th>\n              {/* <th className=\"calories\">kcal</th> */}\n              <th className=\"accuracy\">{lang.ACCURACY}</th>\n              <th className=\"hide-col\"> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {ranking.map((player, playerIndex) => {\n              const isHidden = preferences.playersHiddenStatus[player.id];\n              if (isHidden && !preferences.showHiddenPlayersInRanking) {\n                return null;\n              }\n\n              const ppDifference =\n                (Math.floor(player.pp * 10) - Math.floor(player.prevRating * 10)) / 10 || 0;\n\n              return (\n                <tr\n                  className={classNames('player', { 'hidden-player': isHidden })}\n                  key={player.name}\n                >\n                  <td className=\"place\">\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\n                  </td>\n                  <td className=\"change\">\n                    {player.change > 0 && (\n                      <div className=\"change-holder up\">\n                        <span>{player.change}</span>\n                        <FaAngleDoubleUp />\n                      </div>\n                    )}\n                    {player.change < 0 && (\n                      <div className=\"change-holder down\">\n                        <span>{-player.change}</span>\n                        <FaAngleDoubleDown />\n                      </div>\n                    )}\n                    {!!player.change && _.isString(player.change) && (\n                      <div className=\"change-holder text\">\n                        <span>{player.change}</span>\n                      </div>\n                    )}\n                  </td>\n                  <td className=\"exp-rank\">{getRankImg(player.expRank)}</td>\n                  <td className=\"name\">\n                    <div className=\"name-container\">\n                      <Flag region={player.region} />\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\n                        {player.name}\n                      </NavLink>\n                    </div>\n                  </td>\n                  <td className=\"name name-piu\">\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\n                      {player.nameArcade}\n                    </NavLink>\n                  </td>\n                  {/*<td className=\"rating\">{player.rating}</td>*/}\n                  <td className=\"rating secondary\">{Math.floor(player.pp)}</td>\n                  <td className=\"rating-change-cell\">\n                    {player.prevRating && ppDifference !== 0 && (\n                      <span\n                        className={classNames('rating-change', {\n                          down: player.prevRating > player.pp,\n                          up: player.prevRating < player.pp,\n                        })}\n                      >\n                        {player.prevRating < player.pp ? '+' : ''}\n                        {ppDifference.toFixed(1)}\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"grades sss\">{player.grades.SSS}</td>\n                  <td className=\"grades ss\">{player.grades.SS}</td>\n                  <td className=\"grades s\">{player.grades.S}</td>\n                  <td className=\"grades a\">{player.grades.A}</td>\n                  <td className=\"grades b\">{player.grades.B}</td>\n                  <td className=\"grades c\">{player.grades.C}</td>\n                  <td className=\"grades d\">{player.grades.D}</td>\n                  <td className=\"grades f\">{player.grades.F}</td>\n                  <td className=\"playcount\">{player.count}</td>\n                  <td className=\"accuracy\">\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\n                  </td>\n                  <td className=\"hide-col\">\n                    <Toggle\n                      onChange={() => {\n                        dispatch(\n                          updatePreferences(\n                            _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\n                          )\n                        );\n                      }}\n                      checked={!isHidden}\n                    />\n                    {/* <CheckBox\n                      onChange={() => {\n                        dispatch(updatePreferences(\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\n                        ));\n                      }}\n                      isChecked={isHidden}\n                    /> */}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function RankingFaq() {\n  return (\n    <div className=\"faq\">\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Как считается рейтинг?</div>\n        <div className=\"answer\">\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\n          отрыв от противника не даст так много очков как большой отрыв).\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\n        <div className=\"answer\">\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\n          из шахмат. Основные отличия:\n          <br />\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\n          того, как ты сыграешь чарт.\n          <br />\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\n          набирать больше очков.\n          <br />\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\n          <br />\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\n          примерно уровне по скиллу.\n          <br />\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\n          интереса, плюс используется как стартовое значение Эло.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\n          чарте играет много игроков?\n        </div>\n        <div className=\"answer\">\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\n        </div>\n      </div>\n\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Как считается сумма рр?</div>\n        <div className=\"answer\">\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\n          топовые результаты (и поднимать свой скилл).\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\n        <div className=\"answer\">\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\n          без ранка, используется тот, где больше очков.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\n        <div className=\"answer\">\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\n          используются для определения изначального рейтинга.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\n        </div>\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\n          количество грейдов в таблице?\n        </div>\n        <div className=\"answer\">\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FaSearch, FaQuestionCircle } from 'react-icons/fa';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { createSelector } from 'reselect';\nimport _ from 'lodash/fp';\n\n// styles\nimport './ranking.scss';\n\n// components\nimport RankingList from './RankingList';\nimport RankingFaq from './RankingFaq';\n\n// reducers\nimport { fetchChartsData } from 'legacy-code/reducers/charts';\nimport { updatePreferences } from 'legacy-code/reducers/preferences';\n\n// utils\nimport { useLanguage } from 'legacy-code/utils/context/translation';\n\n// code\nconst rankingSelector = createSelector(\n  (state) => state.results.profiles,\n  _.flow(_.values, _.orderBy('pp', ['desc']))\n);\n\nconst Ranking = () => {\n  const dispatch = useDispatch();\n  const lang = useLanguage();\n  const isLoading = useSelector(\n    (state) => state.charts.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading\n  );\n  const error = useSelector((state) => state.charts.error || state.tracklist.error);\n  const ranking = useSelector(rankingSelector);\n  const preferences = useSelector((state) => state.preferences.data);\n\n  const onChangeHidingPlayers = () => {\n    dispatch(\n      updatePreferences(\n        _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\n      )\n    );\n  };\n\n  const onRefresh = () => {\n    !isLoading && dispatch(fetchChartsData());\n  };\n\n  return (\n    <div className=\"ranking-page\">\n      <div className=\"content\">\n        {error && error.message}\n        <div className=\"top-controls\">\n          <div className=\"_flex-fill\" />\n          <Routes>\n            <Route\n              index\n              element={\n                <>\n                  <button\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\n                    onClick={onChangeHidingPlayers}\n                  >\n                    {preferences.showHiddenPlayersInRanking ? lang.HIDE_UNSELECTED : lang.SHOW_ALL}\n                  </button>\n                  <Link to=\"faq\">\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\n                      <FaQuestionCircle /> faq\n                    </button>\n                  </Link>\n                  <button\n                    disabled={isLoading}\n                    className=\"btn btn-sm btn-dark btn-icon\"\n                    onClick={onRefresh}\n                  >\n                    <FaSearch /> {lang.UPDATE}\n                  </button>\n                </>\n              }\n            />\n            <Route\n              path=\"faq\"\n              element={\n                <Link to=\"..\">\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\n                </Link>\n              }\n            />\n          </Routes>\n        </div>\n        <Routes>\n          <Route\n            index\n            element={\n              <RankingList ranking={ranking} isLoading={isLoading} preferences={preferences} />\n            }\n          />\n          <Route path=\"faq\" element={<RankingFaq />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default Ranking;\n"],"names":["RankingList","ranking","isLoading","preferences","dispatch","useDispatch","lang","useLanguage","jsxs","_","Loader","jsx","Grade","player","playerIndex","isHidden","ppDifference","classNames","GiQueenCrown","FaAngleDoubleUp","FaAngleDoubleDown","getRankImg","Flag","NavLink","routes","Toggle","updatePreferences","RankingFaq","rankingSelector","createSelector","state","Ranking","useSelector","error","onChangeHidingPlayers","onRefresh","fetchChartsData","Routes","Route","Fragment","Link","FaQuestionCircle","FaSearch"],"mappings":"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"}