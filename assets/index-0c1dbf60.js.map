{"version":3,"file":"index-0c1dbf60.js","sources":["../../../../node_modules/relative-time-format/modules/LocaleDataStore.js","../../../../node_modules/relative-time-format/modules/resolveLocale.js","../../../../node_modules/relative-time-format/modules/RelativeTimeFormat.js","../../../../node_modules/javascript-time-ago/modules/cache.js","../../../../node_modules/javascript-time-ago/modules/gradation/helpers.js","../../../../node_modules/javascript-time-ago/modules/gradation/canonical.js","../../../../node_modules/javascript-time-ago/modules/gradation/convenient.js","../../../../node_modules/javascript-time-ago/modules/grade.js","../../../../node_modules/javascript-time-ago/modules/locale.js","../../../../node_modules/javascript-time-ago/modules/style/time.js","../../../../node_modules/javascript-time-ago/modules/style/twitter.js","../../../../node_modules/javascript-time-ago/modules/style/default.js","../../../../node_modules/javascript-time-ago/modules/LocaleDataStore.js","../../../../node_modules/javascript-time-ago/modules/JavascriptTimeAgo.js","../../../../node_modules/relative-time-format/locale/ru/quantify.js","../../../../node_modules/relative-time-format/locale/ru/index.js","../../../../node_modules/javascript-time-ago/locale/ru/index.js"],"sourcesContent":["// Fallback locale.\n// (when not a single one of the supplied \"preferred\" locales is available)\nvar defaultLocale = 'en'; // For all locales added\n// their relative time formatter messages will be stored here.\n\nvar localesData = {};\nexport function getDefaultLocale() {\n  return defaultLocale;\n}\nexport function setDefaultLocale(locale) {\n  defaultLocale = locale;\n} // export function isLocaleDataAvailable(locale) {\n//  return localesData.hasOwnProperty(locale)\n// }\n\nexport function getLocaleData(locale) {\n  return localesData[locale];\n}\nexport function addLocaleData(localeData) {\n  if (!localeData) {\n    throw new Error('No locale data passed');\n  } // This locale data is stored in a global variable\n  // and later used when calling `.format(time)`.\n\n\n  localesData[localeData.locale] = localeData;\n}\n//# sourceMappingURL=LocaleDataStore.js.map","import { getLocaleData } from './LocaleDataStore';\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * @param  {string} locale\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocale(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocale(\"xx-Latn\")\r\n */\n\nexport default function resolveLocale(locale) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var localeMatcher = options.localeMatcher || 'lookup';\n\n  switch (localeMatcher) {\n    case 'lookup':\n      return resolveLocaleLookup(locale);\n    // \"best fit\" locale matching is not supported.\n    // https://github.com/catamphetamine/relative-time-format/issues/2\n\n    case 'best fit':\n      // return resolveLocaleBestFit(locale)\n      return resolveLocaleLookup(locale);\n\n    default:\n      throw new RangeError(\"Invalid \\\"localeMatcher\\\" option: \".concat(localeMatcher));\n  }\n}\n/**\r\n * Resolves a locale to a supported one (if any).\r\n * Starts from the most specific locale and gradually\r\n * falls back to less specific ones.\r\n * This is a basic implementation of the \"lookup\" algorithm.\r\n * https://tools.ietf.org/html/rfc4647#section-3.4\r\n * @param  {string} locale\r\n * @return {string} [locale]\r\n * @example\r\n * // Returns \"sr\"\r\n * resolveLocaleLookup(\"sr-Cyrl-BA\")\r\n * // Returns `undefined`\r\n * resolveLocaleLookup(\"xx-Latn\")\r\n */\n\nexport function resolveLocaleLookup(locale) {\n  if (getLocaleData(locale)) {\n    return locale;\n  } // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\n\n\n  var parts = locale.split('-');\n\n  while (locale.length > 1) {\n    parts.pop();\n    locale = parts.join('-');\n\n    if (getLocaleData(locale)) {\n      return locale;\n    }\n  }\n}\n//# sourceMappingURL=resolveLocale.js.map","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getDefaultLocale, setDefaultLocale, getLocaleData, addLocaleData } from './LocaleDataStore';\nimport resolveLocale from './resolveLocale'; // Valid time units.\n\nexport var UNITS = [\"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\", \"year\"]; // Valid values for the `numeric` option.\n\nvar NUMERIC_VALUES = [\"auto\", \"always\"]; // Valid values for the `style` option.\n\nvar STYLE_VALUES = [\"long\", \"short\", \"narrow\"];\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\n\nvar RelativeTimeFormat =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\n  function RelativeTimeFormat() {\n    var locales = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, RelativeTimeFormat);\n\n    _defineProperty(this, \"numeric\", \"always\");\n\n    _defineProperty(this, \"style\", \"long\");\n\n    _defineProperty(this, \"localeMatcher\", \"lookup\");\n\n    var numeric = options.numeric,\n        style = options.style,\n        localeMatcher = options.localeMatcher; // Set `numeric` option.\n\n    if (numeric) {\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\n        throw new RangeError(\"Invalid \\\"numeric\\\" option: \".concat(numeric));\n      }\n\n      this.numeric = numeric;\n    } // Set `style` option.\n\n\n    if (style) {\n      if (STYLE_VALUES.indexOf(style) < 0) {\n        throw new RangeError(\"Invalid \\\"style\\\" option: \".concat(style));\n      }\n\n      this.style = style;\n    } // Set `localeMatcher` option.\n\n\n    if (localeMatcher) {\n      this.localeMatcher = localeMatcher;\n    } // Set `locale`.\n    // Convert `locales` to an array.\n\n\n    if (typeof locales === 'string') {\n      locales = [locales];\n    } // Add default locale.\n\n\n    locales.push(getDefaultLocale()); // Choose the most appropriate locale.\n\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\n      localeMatcher: this.localeMatcher\n    })[0];\n\n    if (!this.locale) {\n      throw new TypeError(\"No supported locale was found\");\n    }\n\n    this.locale = resolveLocale(this.locale, {\n      localeMatcher: this.localeMatcher\n    }); // Use `Intl.NumberFormat` for formatting numbers (when available).\n\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\n      this.numberFormat = new Intl.NumberFormat(this.locale);\n    }\n  }\n  /**\r\n   * Formats time `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\n\n\n  _createClass(RelativeTimeFormat, [{\n    key: \"format\",\n    value: function format(value, unit) {\n      return this.getRule(value, unit).replace('{0}', this.formatNumber(Math.abs(value)));\n    }\n    /**\r\n     * Formats time `value` in `units` (either in past or in future).\r\n     * @param {number} value - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {Object[]} The parts (`{ type, value }`).\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Version 1.\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"day\", value: \"100\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     * //\r\n     * // Version 2.\r\n     * // Returns [\r\n     * //   { type: \"literal\", value: \"in \" },\r\n     * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n     * //   { type: \"literal\", value: \" days\" }\r\n     * // ]\r\n     * rtf.formatToParts(100, \"day\")\r\n     */\n\n  }, {\n    key: \"formatToParts\",\n    value: function formatToParts(value, unit) {\n      var rule = this.getRule(value, unit);\n      var valueIndex = rule.indexOf(\"{0}\"); // \"yesterday\"/\"today\"/\"tomorrow\".\n\n      if (valueIndex < 0) {\n        return [{\n          type: \"literal\",\n          value: rule\n        }];\n      }\n\n      var parts = [];\n\n      if (valueIndex > 0) {\n        parts.push({\n          type: \"literal\",\n          value: rule.slice(0, valueIndex)\n        });\n      }\n\n      parts.push({\n        unit: unit,\n        type: \"integer\",\n        value: this.formatNumber(Math.abs(value))\n      });\n\n      if (valueIndex + \"{0}\".length < rule.length - 1) {\n        parts.push({\n          type: \"literal\",\n          value: rule.slice(valueIndex + \"{0}\".length)\n        });\n      }\n\n      return parts;\n    }\n    /**\r\n     * Returns formatting rule for `value` in `units` (either in past or in future).\r\n     * @param {number} value - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @return {string}\r\n     * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n     * @example\r\n     * // Returns \"{0} days ago\"\r\n     * getRule(-2, \"day\")\r\n     */\n\n  }, {\n    key: \"getRule\",\n    value: function getRule(value, unit) {\n      if (UNITS.indexOf(unit) < 0) {\n        throw new RangeError(\"Unknown time unit: \".concat(unit, \".\"));\n      } // Get locale-specific time interval formatting rules\n      // of a given `style` for the given value of measurement `unit`.\n      //\n      // E.g.:\n      //\n      // ```json\n      // {\n      //  \"past\": {\n      //    \"one\": \"a second ago\",\n      //    \"other\": \"{0} seconds ago\"\n      //  },\n      //  \"future\": {\n      //    \"one\": \"in a second\",\n      //    \"other\": \"in {0} seconds\"\n      //  }\n      // }\n      // ```\n      //\n\n\n      var unitRules = getLocaleData(this.locale)[this.style][unit]; // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\n\n      if (this.numeric === \"auto\") {\n        // \"yesterday\", \"the day before yesterday\", etc.\n        if (value === -2 || value === -1) {\n          var message = unitRules[\"previous\".concat(value === -1 ? '' : '-' + Math.abs(value))];\n\n          if (message) {\n            return message;\n          }\n        } // \"tomorrow\", \"the day after tomorrow\", etc.\n        else if (value === 1 || value === 2) {\n            var _message = unitRules[\"next\".concat(value === 1 ? '' : '-' + Math.abs(value))];\n\n            if (_message) {\n              return _message;\n            }\n          } // \"today\"\n          else if (value === 0) {\n              if (unitRules.current) {\n                return unitRules.current;\n              }\n            }\n      } // Choose either \"past\" or \"future\" based on time `value` sign.\n      // If there's only \"other\" then it's being collapsed.\n      // (the resulting bundle size optimization technique)\n\n\n      var quantifierRules = unitRules[value <= 0 ? \"past\" : \"future\"]; // Bundle size optimization technique.\n\n      if (typeof quantifierRules === \"string\") {\n        return quantifierRules;\n      } // Quantify `value`.\n\n\n      var quantify = getLocaleData(this.locale).quantify;\n      var quantifier = quantify && quantify(Math.abs(value)); // There seems to be no such locale in CLDR\n      // for which `quantify` is missing\n      // and still `past` and `future` messages\n      // contain something other than \"other\".\n\n      /* istanbul ignore next */\n\n      quantifier = quantifier || 'other'; // \"other\" rule is supposed to be always present.\n      // If only \"other\" rule is present then \"rules\" is not an object and is a string.\n\n      return quantifierRules[quantifier] || quantifierRules.other;\n    }\n    /**\r\n     * Formats a number into a string.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber(number) {\n      return this.numberFormat ? this.numberFormat.format(number) : String(number);\n    }\n    /**\r\n     * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"resolvedOptions\",\n    value: function resolvedOptions() {\n      return {\n        locale: this.locale,\n        style: this.style,\n        numeric: this.numeric\n      };\n    }\n  }]);\n\n  return RelativeTimeFormat;\n}();\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\n\n\nexport { RelativeTimeFormat as default };\n\nRelativeTimeFormat.supportedLocalesOf = function (locales) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Convert `locales` to an array.\n  if (typeof locales === 'string') {\n    locales = [locales];\n  }\n\n  return locales.filter(function (locale) {\n    return resolveLocale(locale, options);\n  });\n};\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\n\n\nRelativeTimeFormat.addLocale = addLocaleData;\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\n\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale;\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\n\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale;\n/**\r\n * Extracts language from an IETF BCP 47 language tag.\r\n * @param {string} languageTag - IETF BCP 47 language tag.\r\n * @return {string}\r\n * @example\r\n * // Returns \"he\"\r\n * getLanguageFromLanguageTag(\"he-IL-u-ca-hebrew-tz-jeruslm\")\r\n * // Returns \"ar\"\r\n * getLanguageFromLanguageTag(\"ar-u-nu-latn\")\r\n */\n// export function getLanguageFromLanguageTag(languageTag) {\n//   const hyphenIndex = languageTag.indexOf('-')\n//   if (hyphenIndex > 0) {\n//     return languageTag.slice(0, hyphenIndex)\n//   }\n//   return languageTag\n// }\n//# sourceMappingURL=RelativeTimeFormat.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\r\n * A basic in-memory cache.\r\n *\r\n * import Cache from 'javascript-time-ago/Cache'\r\n * const cache = new Cache()\r\n * const object = cache.get('key1', 'key2', ...) || cache.put('key1', 'key2', ..., createObject())\r\n */\nvar Cache =\n/*#__PURE__*/\nfunction () {\n  function Cache() {\n    _classCallCheck(this, Cache);\n\n    _defineProperty(this, \"cache\", {});\n  }\n\n  _createClass(Cache, [{\n    key: \"get\",\n    value: function get() {\n      var cache = this.cache;\n\n      for (var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n        keys[_key] = arguments[_key];\n      }\n\n      for (var _i = 0; _i < keys.length; _i++) {\n        var key = keys[_i];\n\n        if (_typeof(cache) !== 'object') {\n          return;\n        }\n\n        cache = cache[key];\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"put\",\n    value: function put() {\n      for (var _len2 = arguments.length, keys = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        keys[_key2] = arguments[_key2];\n      }\n\n      var value = keys.pop();\n      var lastKey = keys.pop();\n      var cache = this.cache;\n\n      for (var _i2 = 0; _i2 < keys.length; _i2++) {\n        var key = keys[_i2];\n\n        if (_typeof(cache[key]) !== 'object') {\n          cache[key] = {};\n        }\n\n        cache = cache[key];\n      }\n\n      return cache[lastKey] = value;\n    }\n  }]);\n\n  return Cache;\n}();\n\nexport { Cache as default };\n//# sourceMappingURL=cache.js.map","export var minute = 60; // in seconds\n\nexport var hour = 60 * minute; // in seconds\n\nexport var day = 24 * hour; // in seconds\n// https://www.quora.com/What-is-the-average-number-of-days-in-a-month\n\nexport var month = 30.44 * day; // in seconds\n// \"400 years have 146097 days (taking into account leap year rules)\"\n\nexport var year = 146097 / 400 * day; // in seconds\n\n/**\r\n * Returns a step of gradation corresponding to the unit.\r\n * @param  {Object[]} gradation\r\n * @param  {string} unit\r\n * @return {?Object}\r\n */\n\nexport function getStep(gradation, unit) {\n  for (var _iterator = gradation, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var step = _ref;\n\n    if (step.unit === unit) {\n      return step;\n    }\n  }\n}\n/**\r\n * Converts value to a `Date`\r\n * @param {(number|Date)} value\r\n * @return {Date}\r\n */\n\nexport function getDate(value) {\n  return value instanceof Date ? value : new Date(value);\n}\n//# sourceMappingURL=helpers.js.map","import { day, month, year } from './helpers'; // just now\n// 1 second ago\n// 2 seconds ago\n// …\n// 59 seconds ago\n// 1 minute ago\n// 2 minutes ago\n// …\n// 59 minutes ago\n// 1 hour ago\n// 2 hours ago\n// …\n// 24 hours ago\n// 1 day ago\n// 2 days ago\n// …\n// 7 days ago\n// 1 week ago\n// 2 weeks ago\n// …\n// 3 weeks ago\n// 1 month ago\n// 2 months ago\n// …\n// 11 months ago\n// 1 year ago\n// 2 years ago\n// …\n\nexport default [{\n  factor: 1,\n  unit: 'now'\n}, {\n  threshold: 0.5,\n  factor: 1,\n  unit: 'second'\n}, {\n  threshold: 59.5,\n  factor: 60,\n  unit: 'minute'\n}, {\n  threshold: 59.5 * 60,\n  factor: 60 * 60,\n  unit: 'hour'\n}, {\n  threshold: 23.5 * 60 * 60,\n  factor: day,\n  unit: 'day'\n}, {\n  threshold: 6.5 * day,\n  factor: 7 * day,\n  unit: 'week'\n}, {\n  threshold: 3.5 * 7 * day,\n  factor: month,\n  unit: 'month'\n}, {\n  threshold: 11.5 * month,\n  factor: year,\n  unit: 'year'\n}];\n//# sourceMappingURL=canonical.js.map","import { day, month, year } from './helpers'; // just now\n// 1 minute ago\n// 2 minutes ago\n// 5 minutes ago\n// 10 minutes ago\n// 15 minutes ago\n// 20 minutes ago\n// an hour ago\n// 2 hours ago\n// …\n// 20 hours ago\n// a day ago\n// 2 days ago\n// 5 days ago\n// a week ago\n// 2 weeks ago\n// 3 weeks ago\n// a month ago\n// 2 months ago\n// 4 months ago\n// a year ago\n// 2 years ago\n// …\n\nexport default [{\n  factor: 1,\n  unit: 'now'\n}, {\n  threshold: 1,\n  threshold_for_now: 45,\n  factor: 1,\n  unit: 'second'\n}, {\n  threshold: 45,\n  factor: 60,\n  unit: 'minute'\n}, {\n  threshold: 2.5 * 60,\n  factor: 60,\n  granularity: 5,\n  unit: 'minute'\n}, {\n  threshold: 22.5 * 60,\n  factor: 30 * 60,\n  unit: 'half-hour'\n}, {\n  threshold: 42.5 * 60,\n  threshold_for_minute: 52.5 * 60,\n  factor: 60 * 60,\n  unit: 'hour'\n}, {\n  threshold: 20.5 / 24 * day,\n  factor: day,\n  unit: 'day'\n}, {\n  threshold: 5.5 * day,\n  factor: 7 * day,\n  unit: 'week'\n}, {\n  threshold: 3.5 * 7 * day,\n  factor: month,\n  unit: 'month'\n}, {\n  threshold: 10.5 * month,\n  factor: year,\n  unit: 'year'\n}];\n//# sourceMappingURL=convenient.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { convenient } from './gradation';\n/**\r\n * Takes seconds `elapsed` and measures them against\r\n * `gradation` to return the suitable `gradation` step.\r\n *\r\n * @param {number} elapsed - Time interval (in seconds)\r\n *\r\n * @param {string[]} units - A list of allowed time units\r\n *                           (e.g. ['second', 'minute', 'hour', …])\r\n *\r\n * @param {Object} [gradation] - Time scale gradation steps.\r\n *\r\n *                               E.g.:\r\n *                               [\r\n *                                 { unit: 'second', factor: 1 },\r\n *                                 { unit: 'minute', factor: 60, threshold: 60 },\r\n *                                 { format(), threshold: 24 * 60 * 60 },\r\n *                                 …\r\n *                               ]\r\n *\r\n * @return {?Object} `gradation` step.\r\n */\n\nexport default function grade(elapsed, now, units) {\n  var gradation = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : convenient;\n  // Leave only allowed time measurement units.\n  // E.g. omit \"quarter\" unit.\n  gradation = getAllowedSteps(gradation, units); // If no steps of gradation fit the conditions\n  // then return nothing.\n\n  if (gradation.length === 0) {\n    return;\n  } // Find the most appropriate gradation step\n\n\n  var i = findGradationStep(elapsed, now, gradation);\n  var step = gradation[i]; // If time elapsed is too small and even\n  // the first gradation step doesn't suit it\n  // then return nothing.\n\n  if (i === -1) {\n    return;\n  } // Apply granularity to the time amount\n  // (and fall back to the previous step\n  //  if the first level of granularity\n  //  isn't met by this amount)\n\n\n  if (step.granularity) {\n    // Recalculate the elapsed time amount based on granularity\n    var amount = Math.round(elapsed / step.factor / step.granularity) * step.granularity; // If the granularity for this step\n    // is too high, then fallback\n    // to the previous step of gradation.\n    // (if there is any previous step of gradation)\n\n    if (amount === 0 && i > 0) {\n      return gradation[i - 1];\n    }\n  }\n\n  return step;\n}\n/**\r\n * Gets threshold for moving from `fromStep` to `next_step`.\r\n * @param  {Object} fromStep - From step.\r\n * @param  {Object} next_step - To step.\r\n * @param  {number} now - The current timestamp.\r\n * @return {number}\r\n * @throws Will throw if no threshold is found.\r\n */\n\nfunction getThreshold(fromStep, toStep, now) {\n  var threshold; // Allows custom thresholds when moving\n  // from a specific step to a specific step.\n\n  if (fromStep && (fromStep.id || fromStep.unit)) {\n    threshold = toStep[\"threshold_for_\".concat(fromStep.id || fromStep.unit)];\n  } // If no custom threshold is set for this transition\n  // then use the usual threshold for the next step.\n\n\n  if (threshold === undefined) {\n    threshold = toStep.threshold;\n  } // Convert threshold to a number.\n\n\n  if (typeof threshold === 'function') {\n    threshold = threshold(now);\n  } // Throw if no threshold is found.\n\n\n  if (fromStep && typeof threshold !== 'number') {\n    // Babel transforms `typeof` into some \"branches\"\n    // so istanbul will show this as \"branch not covered\".\n\n    /* istanbul ignore next */\n    var type = _typeof(threshold);\n\n    throw new Error(\"Each step of a gradation must have a threshold defined except for the first one. Got \\\"\".concat(threshold, \"\\\", \").concat(type, \". Step: \").concat(JSON.stringify(toStep)));\n  }\n\n  return threshold;\n}\n/**\r\n * @param  {number} elapsed - Time elapsed (in seconds).\r\n * @param  {number} now - Current timestamp.\r\n * @param  {Object} gradation - Gradation.\r\n * @param  {number} i - Gradation step currently being tested.\r\n * @return {number} Gradation step index.\r\n */\n\n\nfunction findGradationStep(elapsed, now, gradation) {\n  var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  // If the threshold for moving from previous step\n  // to this step is too high then return the previous step.\n  if (elapsed < getThreshold(gradation[i - 1], gradation[i], now)) {\n    return i - 1;\n  } // If it's the last step of gradation then return it.\n\n\n  if (i === gradation.length - 1) {\n    return i;\n  } // Move to the next step.\n\n\n  return findGradationStep(elapsed, now, gradation, i + 1);\n}\n/**\r\n * Leaves only allowed gradation steps.\r\n * @param  {Object[]} gradation\r\n * @param  {string[]} units - Allowed time units.\r\n * @return {Object[]}\r\n */\n\n\nfunction getAllowedSteps(gradation, units) {\n  return gradation.filter(function (_ref) {\n    var unit = _ref.unit;\n\n    // If this step has a `unit` defined\n    // then this `unit` must be in the list of `units` allowed.\n    if (unit) {\n      return units.indexOf(unit) >= 0;\n    } // A gradation step is not required to specify a `unit`.\n    // E.g. for Twitter gradation it specifies `format()` instead.\n\n\n    return true;\n  });\n}\n//# sourceMappingURL=grade.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n// Chooses the most appropriate locale\n// (one of the registered ones)\n// based on the list of preferred `locales` supplied by the user.\n//\n// @param {string[]} locales - the list of preferable locales (in [IETF format](https://en.wikipedia.org/wiki/IETF_language_tag)).\n// @param {Function} isLocaleDataAvailable - tests if a locale is available.\n//\n// @returns {string} The most suitable locale\n//\n// @example\n// // Returns 'en'\n// chooseLocale(['en-US'], undefined, (locale) => locale === 'ru' || locale === 'en')\n//\nexport default function chooseLocale(locales, isLocaleDataAvailable) {\n  // This is not an intelligent algorythm,\n  // but it will do for this library's case.\n  // `sr-Cyrl-BA` -> `sr-Cyrl` -> `sr`.\n  for (var _iterator = locales, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n    var _ref;\n\n    if (_isArray) {\n      if (_i >= _iterator.length) break;\n      _ref = _iterator[_i++];\n    } else {\n      _i = _iterator.next();\n      if (_i.done) break;\n      _ref = _i.value;\n    }\n\n    var locale = _ref;\n\n    if (isLocaleDataAvailable(locale)) {\n      return locale;\n    }\n\n    var parts = locale.split('-');\n\n    while (parts.length > 1) {\n      parts.pop();\n      locale = parts.join('-');\n\n      if (isLocaleDataAvailable(locale)) {\n        return locale;\n      }\n    }\n  }\n\n  throw new Error(\"No locale data has been registered for any of the locales: \".concat(locales.join(', ')));\n}\n/**\r\n * Whether can use `Intl.DateTimeFormat` for these `locales`.\r\n * Returns the first suitable one.\r\n * @param  {(string|string[])} locales\r\n * @return {?string} The first locale that can be used.\r\n */\n\nexport function intlDateTimeFormatSupportedLocale(locales) {\n  /* istanbul ignore else */\n  if (intlDateTimeFormatSupported()) {\n    return Intl.DateTimeFormat.supportedLocalesOf(locales)[0];\n  }\n}\n/**\r\n * Whether can use `Intl.DateTimeFormat`.\r\n * @return {boolean}\r\n */\n\nexport function intlDateTimeFormatSupported() {\n  // Babel transforms `typeof` into some \"branches\"\n  // so istanbul will show this as \"branch not covered\".\n\n  /* istanbul ignore next */\n  var isIntlAvailable = (typeof Intl === \"undefined\" ? \"undefined\" : _typeof(Intl)) === 'object';\n  return isIntlAvailable && typeof Intl.DateTimeFormat === 'function';\n}\n//# sourceMappingURL=locale.js.map","import { convenient } from '../gradation'; // Similar to the default style but with \"ago\" omitted.\n//\n// just now\n// 5 minutes\n// 10 minutes\n// 15 minutes\n// 20 minutes\n// an hour\n// 2 hours\n// …\n// 20 hours\n// 1 day\n// 2 days\n// a week\n// 2 weeks\n// 3 weeks\n// a month\n// 2 months\n// 3 months\n// 4 months\n// a year\n// 2 years\n//\n\nexport default {\n  gradation: convenient,\n  flavour: 'long-time',\n  units: ['now', 'minute', 'hour', 'day', 'week', 'month', 'year']\n};\n//# sourceMappingURL=time.js.map","function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { canonical, day, hour, getStep, getDate } from '../gradation';\nimport { intlDateTimeFormatSupported } from '../locale'; // A cache for `Intl.DateTimeFormat` twitter formatters\n// for various locales (is a global variable).\n\nvar formatters = {}; // Twitter style relative time formatting.\n// (\"1m\", \"2h\", \"Mar 3\", \"Apr 4, 2012\").\n// Seconds, minutes and hours are shown relatively,\n// and other intervals can be shown using full date format.\n\nexport default {\n  // Twitter gradation is derived from \"canonical\" gradation\n  // adjusting its \"minute\" `threshold` to be 45.\n  gradation: [// Minutes\n  _objectSpread({}, getStep(canonical, 'minute'), {\n    threshold: 45\n  }), // Hours\n  getStep(canonical, 'hour'), // If `date` and `now` happened the same year,\n  // then only output month and day.\n  {\n    threshold: day - 0.5 * hour,\n    format: function format(value, locale) {\n      // Whether can use `Intl.DateTimeFormat`.\n      // If `Intl` is not available,\n      // or the locale is not supported,\n      // then don't override the default labels.\n\n      /* istanbul ignore if */\n      if (!intlDateTimeFormatSupported()) {\n        return;\n      }\n      /* istanbul ignore else */\n\n\n      if (!formatters[locale]) {\n        formatters[locale] = {};\n      }\n      /* istanbul ignore else */\n\n\n      if (!formatters[locale].this_year) {\n        // \"Apr 11\" (MMMd)\n        formatters[locale].this_year = new Intl.DateTimeFormat(locale, {\n          month: 'short',\n          day: 'numeric'\n        });\n      } // Output month and day.\n\n\n      return formatters[locale].this_year.format(getDate(value));\n    }\n  }, // If `date` and `now` happened in defferent years,\n  // then output day, month and year.\n  {\n    threshold: function threshold(now) {\n      // Jan 1st of the next year.\n      var nextYear = new Date(new Date(now).getFullYear() + 1, 0);\n      return (nextYear.getTime() - now) / 1000;\n    },\n    format: function format(value, locale) {\n      // Whether can use `Intl.DateTimeFormat`.\n      // If `Intl` is not available,\n      // or the locale is not supported,\n      // then don't override the default labels.\n\n      /* istanbul ignore if */\n      if (!intlDateTimeFormatSupported()) {\n        return;\n      }\n      /* istanbul ignore if */\n\n\n      if (!formatters[locale]) {\n        formatters[locale] = {};\n      }\n      /* istanbul ignore else */\n\n\n      if (!formatters[locale].other) {\n        // \"Apr 11, 2017\" (yMMMd)\n        formatters[locale].other = new Intl.DateTimeFormat(locale, {\n          year: 'numeric',\n          month: 'short',\n          day: 'numeric'\n        });\n      } // Output day, month and year.\n\n\n      return formatters[locale].other.format(getDate(value));\n    }\n  }],\n  flavour: ['tiny', 'short-time', 'narrow', 'short']\n};\n//# sourceMappingURL=twitter.js.map","import { convenient } from '../gradation';\nexport default {\n  gradation: convenient,\n  flavour: ['long-convenient', 'long'],\n  units: ['now', 'minute', 'hour', 'day', 'week', 'month', 'year']\n};\n//# sourceMappingURL=default.js.map","// Fallback locale.\n// (when not a single one of the supplied \"preferred\" locales is available)\nvar defaultLocale = 'en'; // For all locales added\n// their relative time formatter messages will be stored here.\n\nvar localesData = {};\nexport function getLocaleData(locale) {\n  return localesData[locale];\n}\nexport function addLocaleData(localeData) {\n  if (!localeData) {\n    throw new Error('[javascript-time-ago] No locale data passed.');\n  } // This locale data is stored in a global variable\n  // and later used when calling `.format(time)`.\n\n\n  localesData[localeData.locale] = localeData;\n}\n//# sourceMappingURL=LocaleDataStore.js.map","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport RelativeTimeFormat from 'relative-time-format';\nimport Cache from './cache';\nimport grade from './grade';\nimport chooseLocale from './locale';\nimport { twitterStyle, timeStyle, defaultStyle } from './style';\nimport { addLocaleData, getLocaleData as _getLocaleData } from './LocaleDataStore'; // const EXTRA_STYLES = [\n// \t'long-convenient',\n// \t'long-time',\n// \t'short-convenient',\n// \t'short-time',\n// \t'tiny'\n// ]\n// Valid time units.\n\nvar UNITS = ['now', // The rest are the same as in `Intl.RelativeTimeFormat`.\n'second', 'minute', 'hour', 'day', 'week', 'month', 'quarter', 'year'];\n\nvar JavascriptTimeAgo =\n/*#__PURE__*/\nfunction () {\n  /**\r\n   * @param {(string|string[])} locales=[] - Preferred locales (or locale).\r\n   */\n  function JavascriptTimeAgo() {\n    var locales = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    _classCallCheck(this, JavascriptTimeAgo);\n\n    // Convert `locales` to an array.\n    if (typeof locales === 'string') {\n      locales = [locales];\n    } // Choose the most appropriate locale\n    // (one of the previously added ones)\n    // based on the list of preferred `locales` supplied by the user.\n\n\n    this.locale = chooseLocale(locales.concat(RelativeTimeFormat.getDefaultLocale()), _getLocaleData); // Use `Intl.NumberFormat` for formatting numbers (when available).\n\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\n      this.numberFormat = new Intl.NumberFormat(this.locale);\n    } // Cache `Intl.RelativeTimeFormat` instance.\n\n\n    this.relativeTimeFormatCache = new Cache();\n  } // Formats the relative date/time.\n  //\n  // @return {string} Returns the formatted relative date/time.\n  //\n  // @param {(Object|string)} [style] - Relative date/time formatting style.\n  //\n  // @param {string[]} [style.units] - A list of allowed time units\n  //                                  (e.g. ['second', 'minute', 'hour', …])\n  //\n  // @param {Function} [style.custom] - `function ({ elapsed, time, date, now })`.\n  //                                    If this function returns a value, then\n  //                                    the `.format()` call will return that value.\n  //                                    Otherwise it has no effect.\n  //\n  // @param {string} [style.flavour] - e.g. \"long\", \"short\", \"tiny\", etc.\n  //\n  // @param {Object[]} [style.gradation] - Time scale gradation steps.\n  //\n  // @param {string} style.gradation[].unit - Time interval measurement unit.\n  //                                          (e.g. ['second', 'minute', 'hour', …])\n  //\n  // @param {Number} style.gradation[].factor - Time interval measurement unit factor.\n  //                                            (e.g. `60` for 'minute')\n  //\n  // @param {Number} [style.gradation[].granularity] - A step for the unit's \"amount\" value.\n  //                                                   (e.g. `5` for '0 minutes', '5 minutes', etc)\n  //\n  // @param {Number} [style.gradation[].threshold] - Time interval measurement unit threshold.\n  //                                                 (e.g. `45` seconds for 'minute').\n  //                                                 There can also be specific `threshold_[unit]`\n  //                                                 thresholds for fine-tuning.\n  //\n\n\n  _createClass(JavascriptTimeAgo, [{\n    key: \"format\",\n    value: function format(input) {\n      var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultStyle;\n\n      if (typeof style === 'string') {\n        switch (style) {\n          case 'twitter':\n            style = twitterStyle;\n            break;\n\n          case 'time':\n            style = timeStyle;\n            break;\n\n          default:\n            style = defaultStyle;\n        }\n      }\n\n      var _getDateAndTimeBeingF = getDateAndTimeBeingFormatted(input),\n          date = _getDateAndTimeBeingF.date,\n          time = _getDateAndTimeBeingF.time; // Get locale messages for this formatting flavour\n\n\n      var _this$getLocaleData = this.getLocaleData(style.flavour),\n          flavour = _this$getLocaleData.flavour,\n          localeData = _this$getLocaleData.localeData; // Can pass a custom `now`, e.g. for testing purposes.\n      // Technically it doesn't belong to `style`\n      // but since this is an undocumented internal feature,\n      // taking it from the `style` argument will do (for now).\n\n\n      var now = style.now || Date.now(); // how much time elapsed (in seconds)\n\n      var elapsed = (now - time) / 1000; // in seconds\n      // `custom` – A function of `{ elapsed, time, date, now, locale }`.\n      // If this function returns a value, then the `.format()` call will return that value.\n      // Otherwise the relative date/time is formatted as usual.\n      // This feature is currently not used anywhere and is here\n      // just for providing the ultimate customization point\n      // in case anyone would ever need that. Prefer using\n      // `gradation[step].format(value, locale)` instead.\n      //\n      // I guess `custom` is deprecated and will be removed\n      // in some future major version release.\n      //\n\n      if (style.custom) {\n        var custom = style.custom({\n          now: now,\n          date: date,\n          time: time,\n          elapsed: elapsed,\n          locale: this.locale\n        });\n\n        if (custom !== undefined) {\n          return custom;\n        }\n      } // Available time interval measurement units.\n\n\n      var units = getTimeIntervalMeasurementUnits(localeData, style.units); // If no available time unit is suitable, just output an empty string.\n\n      if (units.length === 0) {\n        console.error(\"Units \\\"\".concat(units.join(', '), \"\\\" were not found in locale data for \\\"\").concat(this.locale, \"\\\".\"));\n        return '';\n      } // Choose the appropriate time measurement unit\n      // and get the corresponding rounded time amount.\n\n\n      var step = grade(Math.abs(elapsed), now, units, style.gradation); // If no time unit is suitable, just output an empty string.\n      // E.g. when \"now\" unit is not available\n      // and \"second\" has a threshold of `0.5`\n      // (e.g. the \"canonical\" grading scale).\n\n      if (!step) {\n        return '';\n      }\n\n      if (step.format) {\n        return step.format(date || time, this.locale);\n      }\n\n      var unit = step.unit,\n          factor = step.factor,\n          granularity = step.granularity;\n      var amount = Math.abs(elapsed) / factor; // Apply granularity to the time amount\n      // (and fallback to the previous step\n      //  if the first level of granularity\n      //  isn't met by this amount)\n\n      if (granularity) {\n        // Recalculate the elapsed time amount based on granularity\n        amount = Math.round(amount / granularity) * granularity;\n      } // `Intl.RelativeTimeFormat` doesn't operate in \"now\" units.\n\n\n      if (unit === 'now') {\n        return getNowMessage(localeData, -1 * Math.sign(elapsed));\n      }\n\n      switch (flavour) {\n        case 'long':\n        case 'short':\n        case 'narrow':\n          // Format `value` using `Intl.RelativeTimeFormat`.\n          return this.getFormatter(flavour).format(-1 * Math.sign(elapsed) * Math.round(amount), unit);\n\n        default:\n          // Format `value`.\n          // (mimicks `Intl.RelativeTimeFormat` with the addition of extra styles)\n          return this.formatValue(-1 * Math.sign(elapsed) * Math.round(amount), unit, localeData);\n      }\n    }\n    /**\r\n     * Mimicks what `Intl.RelativeTimeFormat` does for additional locale styles.\r\n     * @param  {number} value\r\n     * @param  {string} unit\r\n     * @param  {object} localeData — Relative time messages for the flavor.\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(value, unit, localeData) {\n      return this.getRule(value, unit, localeData).replace('{0}', this.formatNumber(Math.abs(value)));\n    }\n    /**\r\n     * Returns formatting rule for `value` in `units` (either in past or in future).\r\n     * @param {number} value - Time interval value.\r\n     * @param {string} unit - Time interval measurement unit.\r\n     * @param  {object} localeData — Relative time messages for the flavor.\r\n     * @return {string}\r\n     * @example\r\n     * // Returns \"{0} days ago\"\r\n     * getRule(-2, \"day\")\r\n     */\n\n  }, {\n    key: \"getRule\",\n    value: function getRule(value, unit, localeData) {\n      var unitRules = localeData[unit]; // Bundle size optimization technique.\n\n      if (typeof unitRules === 'string') {\n        return unitRules;\n      } // Choose either \"past\" or \"future\" based on time `value` sign.\n      // If \"past\" is same as \"future\" then they're stored as \"other\".\n      // If there's only \"other\" then it's being collapsed.\n\n\n      var quantifierRules = unitRules[value <= 0 ? 'past' : 'future'] || unitRules; // Bundle size optimization technique.\n\n      if (typeof quantifierRules === 'string') {\n        return quantifierRules;\n      } // Quantify `value`.\n\n\n      var quantify = _getLocaleData(this.locale).quantify;\n\n      var quantifier = quantify && quantify(Math.abs(value)); // There seems to be no such locale in CLDR\n      // for which `quantify` is missing\n      // and still `past` and `future` messages\n      // contain something other than \"other\".\n\n      /* istanbul ignore next */\n\n      quantifier = quantifier || 'other'; // \"other\" rule is supposed to always be present.\n      // If only \"other\" rule is present then \"rules\" is not an object and is a string.\n\n      return quantifierRules[quantifier] || quantifierRules.other;\n    }\n    /**\r\n     * Formats a number into a string.\r\n     * Uses `Intl.NumberFormat` when available.\r\n     * @param  {number} number\r\n     * @return {string}\r\n     */\n\n  }, {\n    key: \"formatNumber\",\n    value: function formatNumber(number) {\n      return this.numberFormat ? this.numberFormat.format(number) : String(number);\n    }\n    /**\r\n     * Returns an `Intl.RelativeTimeFormat` for a given `flavor`.\r\n     * @param {string} flavor\r\n     * @return {object} `Intl.RelativeTimeFormat` instance\r\n     */\n\n  }, {\n    key: \"getFormatter\",\n    value: function getFormatter(flavor) {\n      // `Intl.RelativeTimeFormat` instance creation is assumed a\n      // lengthy operation so the instances are cached and reused.\n      return this.relativeTimeFormatCache.get(this.locale, flavor) || this.relativeTimeFormatCache.put(this.locale, flavor, new RelativeTimeFormat(this.locale, {\n        style: flavor\n      }));\n    }\n    /**\r\n     * Gets locale messages for this formatting flavour\r\n     *\r\n     * @param {(string|string[])} flavour - Relative date/time formatting flavour.\r\n     *                                      If it's an array then all flavours are tried in order.\r\n     *\r\n     * @returns {Object} Returns an object of shape { flavour, localeData }\r\n     */\n\n  }, {\n    key: \"getLocaleData\",\n    value: function getLocaleData() {\n      var flavour = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      // Get relative time formatting rules for this locale\n      var localeData = _getLocaleData(this.locale); // Convert `flavour` to an array.\n\n\n      if (typeof flavour === 'string') {\n        flavour = [flavour];\n      } // \"long\" flavour is the default one.\n      // (it's always present)\n\n\n      flavour = flavour.concat('long'); // Find a suitable flavour.\n\n      for (var _iterator = flavour, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var _ = _ref;\n\n        if (localeData[_]) {\n          return {\n            flavour: _,\n            localeData: localeData[_]\n          };\n        }\n      } // Can't happen - \"long\" flavour is always present.\n      // throw new Error(`None of the flavours - ${flavour.join(', ')} - was found for locale \"${this.locale}\".`)\n\n    }\n  }]);\n\n  return JavascriptTimeAgo;\n}();\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\n\n\nexport { JavascriptTimeAgo as default };\nJavascriptTimeAgo.getDefaultLocale = RelativeTimeFormat.getDefaultLocale;\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\n\nJavascriptTimeAgo.setDefaultLocale = RelativeTimeFormat.setDefaultLocale;\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\n\nJavascriptTimeAgo.addLocale = function (localeData) {\n  addLocaleData(localeData);\n  RelativeTimeFormat.addLocale(localeData);\n};\n/**\r\n * (legacy alias)\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n * @deprecated\r\n */\n\n\nJavascriptTimeAgo.locale = JavascriptTimeAgo.addLocale; // Normalizes `.format()` `time` argument.\n\nfunction getDateAndTimeBeingFormatted(input) {\n  if (input.constructor === Date) {\n    return {\n      date: input,\n      time: input.getTime()\n    };\n  }\n\n  if (typeof input === 'number') {\n    return {\n      time: input // `date` is not required for formatting\n      // relative times unless \"twitter\" preset is used.\n      // date : new Date(input)\n\n    };\n  } // For some weird reason istanbul doesn't see this `throw` covered.\n\n  /* istanbul ignore next */\n\n\n  throw new Error(\"Unsupported relative time formatter input: \".concat(_typeof(input), \", \").concat(input));\n} // Get available time interval measurement units.\n\n\nfunction getTimeIntervalMeasurementUnits(localeData, restrictedSetOfUnits) {\n  // All available time interval measurement units.\n  var units = Object.keys(localeData); // If only a specific set of available\n  // time measurement units can be used.\n\n  if (restrictedSetOfUnits) {\n    // Reduce available time interval measurement units\n    // based on user's preferences.\n    units = restrictedSetOfUnits.filter(function (_) {\n      return units.indexOf(_) >= 0;\n    });\n  } // Stock `Intl.RelativeTimeFormat` locale data doesn't have \"now\" units.\n  // So either \"now\" is present in extended locale data\n  // or it's taken from \".second.current\".\n\n\n  if ((!restrictedSetOfUnits || restrictedSetOfUnits.indexOf('now') >= 0) && units.indexOf('now') < 0) {\n    if (localeData.second.current) {\n      units.unshift('now');\n    }\n  }\n\n  return units;\n}\n\nfunction getNowMessage(localeData, value) {\n  // Specific \"now\" message form extended locale data (if present).\n  if (localeData.now) {\n    // Bundle size optimization technique.\n    if (typeof localeData.now === 'string') {\n      return localeData.now;\n    } // Not handling `value === 0` as `localeData.now.current` here\n    // because it wouldn't make sense: \"now\" is a moment,\n    // so one can't possibly differentiate between a\n    // \"previous\" moment, a \"current\" moment and a \"next moment\".\n    // It can only be differentiated between \"past\" and \"future\".\n\n\n    if (value <= 0) {\n      return localeData.now.past;\n    } else {\n      return localeData.now.future;\n    }\n  } // Use \".second.current\" as \"now\" message.\n\n\n  return localeData.second.current; // If this function was called then\n  // it means that either \"now\" unit messages are\n  // available or \".second.current\" message is present.\n}\n//# sourceMappingURL=JavascriptTimeAgo.js.map","module.exports=function(e){var i=String(e).split(\".\"),n=i[0],r=!i[1],s=n.slice(-1),t=n.slice(-2);return r&&1==s&&11!=t?\"one\":r&&2<=s&&s<=4&&(t<12||14<t)?\"few\":r&&0==s||r&&5<=s&&s<=9||r&&11<=t&&t<=14?\"many\":\"other\"}","module.exports = {\n\tlocale: 'ru',\n\tlong: require('./long.json'),\n\tshort: require('./short.json'),\n\tnarrow: require('./narrow.json'),\n\tquantify: require('./quantify')\n}","var locale = require('relative-time-format/locale/ru')\n\nmodule.exports = {\n\tlocale: locale.locale,\n\t// Standard styles.\n\tlong: locale.long,\n\tshort: locale.short,\n\tnarrow: locale.narrow,\n\t// Additional styles.\n\t'short-time': require('../../locale-more-styles/ru/short-time.json'),\n\t'short-convenient': require('../../locale-more-styles/ru/short-convenient.json'),\n\t'long-time': require('../../locale-more-styles/ru/long-time.json'),\n\t'long-convenient': require('../../locale-more-styles/ru/long-convenient.json'),\n\t'tiny': require('../../locale-more-styles/ru/tiny.json'),\n\t// Quantifier.\n\tquantify: locale.quantify\n}"],"names":["defaultLocale","localesData","getDefaultLocale","setDefaultLocale","locale","getLocaleData","addLocaleData","localeData","resolveLocale","options","localeMatcher","resolveLocaleLookup","parts","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","descriptor","_createClass","protoProps","staticProps","_defineProperty","obj","key","value","UNITS","NUMERIC_VALUES","STYLE_VALUES","RelativeTimeFormat","locales","numeric","style","unit","rule","valueIndex","unitRules","message","_message","quantifierRules","quantify","quantifier","number","_typeof","Cache","cache","_len","keys","_key","_i","_len2","_key2","lastKey","_i2","minute","hour","day","month","year","getStep","gradation","_iterator","_isArray","_ref","step","getDate","canonical","convenient","grade","elapsed","now","units","getAllowedSteps","findGradationStep","amount","getThreshold","fromStep","toStep","threshold","type","chooseLocale","isLocaleDataAvailable","intlDateTimeFormatSupported","isIntlAvailable","timeStyle","_objectSpread","source","ownKeys","sym","formatters","twitterStyle","nextYear","defaultStyle","JavascriptTimeAgo","_getLocaleData","input","_getDateAndTimeBeingF","getDateAndTimeBeingFormatted","date","time","_this$getLocaleData","flavour","custom","getTimeIntervalMeasurementUnits","factor","granularity","getNowMessage","flavor","_","restrictedSetOfUnits","n","r","s","t","ru","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5"],"mappings":"wCAEA,IAAIA,EAAgB,KAGhBC,EAAc,CAAA,EACX,SAASC,GAAmB,CACjC,OAAOF,CACT,CACO,SAASG,EAAiBC,EAAQ,CACvCJ,EAAgBI,CAClB,CAIO,SAASC,EAAcD,EAAQ,CACpC,OAAOH,EAAYG,CAAM,CAC3B,CACO,SAASE,EAAcC,EAAY,CACxC,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,uBAAuB,EAKzCN,EAAYM,EAAW,MAAM,EAAIA,CACnC,CCZe,SAASC,EAAcJ,EAAQ,CAC5C,IAAIK,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAC9EC,EAAgBD,EAAQ,eAAiB,SAE7C,OAAQC,EAAa,CACnB,IAAK,SACH,OAAOC,EAAoBP,CAAM,EAInC,IAAK,WAEH,OAAOO,EAAoBP,CAAM,EAEnC,QACE,MAAM,IAAI,WAAW,mCAAqC,OAAOM,CAAa,CAAC,CAClF,CACH,CAgBO,SAASC,EAAoBP,EAAQ,CAC1C,GAAIC,EAAcD,CAAM,EACtB,OAAOA,EAMT,QAFIQ,EAAQR,EAAO,MAAM,GAAG,EAErBA,EAAO,OAAS,GAIrB,GAHAQ,EAAM,IAAG,EACTR,EAASQ,EAAM,KAAK,GAAG,EAEnBP,EAAcD,CAAM,EACtB,OAAOA,CAGb,CC/DA,SAASS,EAAgBC,EAAUC,EAAa,CAAE,GAAI,EAAED,aAAoBC,GAAgB,MAAM,IAAI,UAAU,mCAAmC,CAAM,CAEzJ,SAASC,EAAkBC,EAAQC,EAAO,CAAE,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CAAE,IAAIC,EAAaF,EAAMC,CAAC,EAAGC,EAAW,WAAaA,EAAW,YAAc,GAAOA,EAAW,aAAe,GAAU,UAAWA,IAAYA,EAAW,SAAW,IAAM,OAAO,eAAeH,EAAQG,EAAW,IAAKA,CAAU,EAAM,CAE7T,SAASC,GAAaN,EAAaO,EAAYC,EAAa,CAAE,OAAID,GAAYN,EAAkBD,EAAY,UAAWO,CAAU,EAAOC,GAAaP,EAAkBD,EAAaQ,CAAW,EAAUR,CAAc,CAEvN,SAASS,EAAgBC,EAAKC,EAAKC,EAAO,CAAE,OAAID,KAAOD,EAAO,OAAO,eAAeA,EAAKC,EAAK,CAAE,MAAOC,EAAO,WAAY,GAAM,aAAc,GAAM,SAAU,EAAM,CAAA,EAAYF,EAAIC,CAAG,EAAIC,EAAgBF,CAAM,CAK1M,IAAIG,GAAQ,CAAC,SAAU,SAAU,OAAQ,MAAO,OAAQ,QAAS,UAAW,MAAM,EAErFC,GAAiB,CAAC,OAAQ,QAAQ,EAElCC,GAAe,CAAC,OAAQ,QAAS,QAAQ,EAOzCC,EAEJ,UAAY,CAQV,SAASA,GAAqB,CAC5B,IAAIC,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAC9EvB,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAElFI,EAAgB,KAAMkB,CAAkB,EAExCP,EAAgB,KAAM,UAAW,QAAQ,EAEzCA,EAAgB,KAAM,QAAS,MAAM,EAErCA,EAAgB,KAAM,gBAAiB,QAAQ,EAE/C,IAAIS,EAAUxB,EAAQ,QAClByB,EAAQzB,EAAQ,MAChBC,EAAgBD,EAAQ,cAE5B,GAAIwB,EAAS,CACX,GAAIJ,GAAe,QAAQI,CAAO,EAAI,EACpC,MAAM,IAAI,WAAW,6BAA+B,OAAOA,CAAO,CAAC,EAGrE,KAAK,QAAUA,EAIjB,GAAIC,EAAO,CACT,GAAIJ,GAAa,QAAQI,CAAK,EAAI,EAChC,MAAM,IAAI,WAAW,2BAA6B,OAAOA,CAAK,CAAC,EAGjE,KAAK,MAAQA,EAqBf,GAjBIxB,IACF,KAAK,cAAgBA,GAKnB,OAAOsB,GAAY,WACrBA,EAAU,CAACA,CAAO,GAIpBA,EAAQ,KAAK9B,EAAgB,CAAE,EAE/B,KAAK,OAAS6B,EAAmB,mBAAmBC,EAAS,CAC3D,cAAe,KAAK,aAC1B,CAAK,EAAE,CAAC,EAEA,CAAC,KAAK,OACR,MAAM,IAAI,UAAU,+BAA+B,EAGrD,KAAK,OAASxB,EAAc,KAAK,OAAQ,CACvC,cAAe,KAAK,aAC1B,CAAK,EAEG,OAAO,KAAS,KAAe,KAAK,eACtC,KAAK,aAAe,IAAI,KAAK,aAAa,KAAK,MAAM,EAExD,CAeDa,OAAAA,GAAaU,EAAoB,CAAC,CAChC,IAAK,SACL,MAAO,SAAgBJ,EAAOQ,EAAM,CAClC,OAAO,KAAK,QAAQR,EAAOQ,CAAI,EAAE,QAAQ,MAAO,KAAK,aAAa,KAAK,IAAIR,CAAK,CAAC,CAAC,CACnF,CAyBL,EAAK,CACD,IAAK,gBACL,MAAO,SAAuBA,EAAOQ,EAAM,CACzC,IAAIC,EAAO,KAAK,QAAQT,EAAOQ,CAAI,EAC/BE,EAAaD,EAAK,QAAQ,KAAK,EAEnC,GAAIC,EAAa,EACf,MAAO,CAAC,CACN,KAAM,UACN,MAAOD,CACjB,CAAS,EAGH,IAAIxB,EAAQ,CAAA,EAEZ,OAAIyB,EAAa,GACfzB,EAAM,KAAK,CACT,KAAM,UACN,MAAOwB,EAAK,MAAM,EAAGC,CAAU,CACzC,CAAS,EAGHzB,EAAM,KAAK,CACT,KAAMuB,EACN,KAAM,UACN,MAAO,KAAK,aAAa,KAAK,IAAIR,CAAK,CAAC,CAChD,CAAO,EAEGU,EAAa,EAAeD,EAAK,OAAS,GAC5CxB,EAAM,KAAK,CACT,KAAM,UACN,MAAOwB,EAAK,MAAMC,EAAa,CAAY,CACrD,CAAS,EAGIzB,CACR,CAYL,EAAK,CACD,IAAK,UACL,MAAO,SAAiBe,EAAOQ,EAAM,CACnC,GAAIP,GAAM,QAAQO,CAAI,EAAI,EACxB,MAAM,IAAI,WAAW,sBAAsB,OAAOA,EAAM,GAAG,CAAC,EAqB9D,IAAIG,EAAYjC,EAAc,KAAK,MAAM,EAAE,KAAK,KAAK,EAAE8B,CAAI,EAE3D,GAAI,KAAK,UAAY,QAEnB,GAAIR,IAAU,IAAMA,IAAU,GAAI,CAChC,IAAIY,EAAUD,EAAU,WAAW,OAAOX,IAAU,GAAK,GAAK,IAAM,KAAK,IAAIA,CAAK,CAAC,CAAC,EAEpF,GAAIY,EACF,OAAOA,UAGFZ,IAAU,GAAKA,IAAU,EAAG,CACjC,IAAIa,EAAWF,EAAU,OAAO,OAAOX,IAAU,EAAI,GAAK,IAAM,KAAK,IAAIA,CAAK,CAAC,CAAC,EAEhF,GAAIa,EACF,OAAOA,UAGFb,IAAU,GACXW,EAAU,QACZ,OAAOA,EAAU,QAQ3B,IAAIG,EAAkBH,EAAUX,GAAS,EAAI,OAAS,QAAQ,EAE9D,GAAI,OAAOc,GAAoB,SAC7B,OAAOA,EAIT,IAAIC,EAAWrC,EAAc,KAAK,MAAM,EAAE,SACtCsC,EAAaD,GAAYA,EAAS,KAAK,IAAIf,CAAK,CAAC,EAOrD,OAAAgB,EAAaA,GAAc,QAGpBF,EAAgBE,CAAU,GAAKF,EAAgB,KACvD,CAQL,EAAK,CACD,IAAK,eACL,MAAO,SAAsBG,EAAQ,CACnC,OAAO,KAAK,aAAe,KAAK,aAAa,OAAOA,CAAM,EAAI,OAAOA,CAAM,CAC5E,CAOL,EAAK,CACD,IAAK,kBACL,MAAO,UAA2B,CAChC,MAAO,CACL,OAAQ,KAAK,OACb,MAAO,KAAK,MACZ,QAAS,KAAK,OACtB,CACK,CACF,CAAA,CAAC,EAEKb,CACT,IAmBAA,EAAmB,mBAAqB,SAAUC,EAAS,CACzD,IAAIvB,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAGlF,OAAI,OAAOuB,GAAY,WACrBA,EAAU,CAACA,CAAO,GAGbA,EAAQ,OAAO,SAAU5B,EAAQ,CACtC,OAAOI,EAAcJ,EAAQK,CAAO,CACxC,CAAG,CACH,EAOAsB,EAAmB,UAAYzB,EAM/ByB,EAAmB,iBAAmB5B,EAMtC4B,EAAmB,iBAAmB7B,EClVtC,SAAS2C,EAAQpB,EAAK,CAAE,OAAI,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAAYoB,EAAU,SAAiBpB,EAAK,CAAE,OAAO,OAAOA,CAAM,EAAWoB,EAAU,SAAiBpB,EAAK,CAAE,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAI,EAAaoB,EAAQpB,CAAG,CAAI,CAE/V,SAASZ,GAAgBC,EAAUC,EAAa,CAAE,GAAI,EAAED,aAAoBC,GAAgB,MAAM,IAAI,UAAU,mCAAmC,CAAM,CAEzJ,SAASC,EAAkBC,EAAQC,EAAO,CAAE,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CAAE,IAAIC,EAAaF,EAAMC,CAAC,EAAGC,EAAW,WAAaA,EAAW,YAAc,GAAOA,EAAW,aAAe,GAAU,UAAWA,IAAYA,EAAW,SAAW,IAAM,OAAO,eAAeH,EAAQG,EAAW,IAAKA,CAAU,EAAM,CAE7T,SAASC,GAAaN,EAAaO,EAAYC,EAAa,CAAE,OAAID,GAAYN,EAAkBD,EAAY,UAAWO,CAAU,EAAOC,GAAaP,EAAkBD,EAAaQ,CAAW,EAAUR,CAAc,CAEvN,SAASS,GAAgBC,EAAKC,EAAKC,EAAO,CAAE,OAAID,KAAOD,EAAO,OAAO,eAAeA,EAAKC,EAAK,CAAE,MAAOC,EAAO,WAAY,GAAM,aAAc,GAAM,SAAU,EAAM,CAAA,EAAYF,EAAIC,CAAG,EAAIC,EAAgBF,CAAM,CASjN,IAAIqB,GAEJ,UAAY,CACV,SAASA,GAAQ,CACfjC,GAAgB,KAAMiC,CAAK,EAE3BtB,GAAgB,KAAM,QAAS,CAAA,CAAE,CAClC,CAEDH,OAAAA,GAAayB,EAAO,CAAC,CACnB,IAAK,MACL,MAAO,UAAe,CAGpB,QAFIC,EAAQ,KAAK,MAERC,EAAO,UAAU,OAAQC,EAAO,IAAI,MAAMD,CAAI,EAAGE,EAAO,EAAGA,EAAOF,EAAME,IAC/ED,EAAKC,CAAI,EAAI,UAAUA,CAAI,EAG7B,QAASC,EAAK,EAAGA,EAAKF,EAAK,OAAQE,IAAM,CACvC,IAAIzB,EAAMuB,EAAKE,CAAE,EAEjB,GAAIN,EAAQE,CAAK,IAAM,SACrB,OAGFA,EAAQA,EAAMrB,CAAG,EAGnB,OAAOqB,CACR,CACL,EAAK,CACD,IAAK,MACL,MAAO,UAAe,CACpB,QAASK,EAAQ,UAAU,OAAQH,EAAO,IAAI,MAAMG,CAAK,EAAGC,EAAQ,EAAGA,EAAQD,EAAOC,IACpFJ,EAAKI,CAAK,EAAI,UAAUA,CAAK,EAO/B,QAJI1B,EAAQsB,EAAK,MACbK,EAAUL,EAAK,MACfF,EAAQ,KAAK,MAERQ,EAAM,EAAGA,EAAMN,EAAK,OAAQM,IAAO,CAC1C,IAAI7B,EAAMuB,EAAKM,CAAG,EAEdV,EAAQE,EAAMrB,CAAG,CAAC,IAAM,WAC1BqB,EAAMrB,CAAG,EAAI,IAGfqB,EAAQA,EAAMrB,CAAG,EAGnB,OAAOqB,EAAMO,CAAO,EAAI3B,CACzB,CACF,CAAA,CAAC,EAEKmB,CACT,EAAG,ECzEQU,GAAS,GAETC,EAAO,GAAKD,GAEZE,EAAM,GAAKD,EAGXE,EAAQ,MAAQD,EAGhBE,EAAO,OAAS,IAAMF,EAS1B,SAASG,EAAQC,EAAW3B,EAAM,CACvC,QAAS4B,EAAYD,EAAWE,EAAW,MAAM,QAAQD,CAAS,EAAGZ,EAAK,EAAGY,EAAYC,EAAWD,EAAYA,EAAU,OAAO,QAAQ,MAAO,CAC9I,IAAIE,EAEJ,GAAID,EAAU,CACZ,GAAIb,GAAMY,EAAU,OAAQ,MAC5BE,EAAOF,EAAUZ,GAAI,MAChB,CAEL,GADAA,EAAKY,EAAU,OACXZ,EAAG,KAAM,MACbc,EAAOd,EAAG,MAGZ,IAAIe,EAAOD,EAEX,GAAIC,EAAK,OAAS/B,EAChB,OAAO+B,EAGb,CAOO,SAASC,EAAQxC,EAAO,CAC7B,OAAOA,aAAiB,KAAOA,EAAQ,IAAI,KAAKA,CAAK,CACvD,CClBA,MAAAyC,EAAe,CAAC,CACd,OAAQ,EACR,KAAM,KACR,EAAG,CACD,UAAW,GACX,OAAQ,EACR,KAAM,QACR,EAAG,CACD,UAAW,KACX,OAAQ,GACR,KAAM,QACR,EAAG,CACD,UAAW,KAAO,GAClB,OAAQ,GAAK,GACb,KAAM,MACR,EAAG,CACD,UAAW,KAAO,GAAK,GACvB,OAAQV,EACR,KAAM,KACR,EAAG,CACD,UAAW,IAAMA,EACjB,OAAQ,EAAIA,EACZ,KAAM,MACR,EAAG,CACD,UAAW,IAAM,EAAIA,EACrB,OAAQC,EACR,KAAM,OACR,EAAG,CACD,UAAW,KAAOA,EAClB,OAAQC,EACR,KAAM,MACR,CAAC,ECpCDS,EAAe,CAAC,CACd,OAAQ,EACR,KAAM,KACR,EAAG,CACD,UAAW,EACX,kBAAmB,GACnB,OAAQ,EACR,KAAM,QACR,EAAG,CACD,UAAW,GACX,OAAQ,GACR,KAAM,QACR,EAAG,CACD,UAAW,IAAM,GACjB,OAAQ,GACR,YAAa,EACb,KAAM,QACR,EAAG,CACD,UAAW,KAAO,GAClB,OAAQ,GAAK,GACb,KAAM,WACR,EAAG,CACD,UAAW,KAAO,GAClB,qBAAsB,KAAO,GAC7B,OAAQ,GAAK,GACb,KAAM,MACR,EAAG,CACD,UAAW,KAAO,GAAKX,EACvB,OAAQA,EACR,KAAM,KACR,EAAG,CACD,UAAW,IAAMA,EACjB,OAAQ,EAAIA,EACZ,KAAM,MACR,EAAG,CACD,UAAW,IAAM,EAAIA,EACrB,OAAQC,EACR,KAAM,OACR,EAAG,CACD,UAAW,KAAOA,EAClB,OAAQC,EACR,KAAM,MACR,CAAC,EClED,SAASf,EAAQpB,EAAK,CAAE,OAAI,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAAYoB,EAAU,SAAiBpB,EAAK,CAAE,OAAO,OAAOA,CAAM,EAAWoB,EAAU,SAAiBpB,EAAK,CAAE,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAI,EAAaoB,EAAQpB,CAAG,CAAI,CAyBhV,SAAS6C,GAAMC,EAASC,EAAKC,EAAO,CACjD,IAAIX,EAAY,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAIO,EAMpF,GAHAP,EAAYY,GAAgBZ,EAAWW,CAAK,EAGxCX,EAAU,SAAW,EAKzB,KAAI3C,EAAIwD,EAAkBJ,EAASC,EAAKV,CAAS,EAC7CI,EAAOJ,EAAU3C,CAAC,EAItB,GAAIA,IAAM,GAQV,IAAI+C,EAAK,YAAa,CAEpB,IAAIU,EAAS,KAAK,MAAML,EAAUL,EAAK,OAASA,EAAK,WAAW,EAAIA,EAAK,YAKzE,GAAIU,IAAW,GAAKzD,EAAI,EACtB,OAAO2C,EAAU3C,EAAI,CAAC,EAI1B,OAAO+C,GACT,CAUA,SAASW,GAAaC,EAAUC,EAAQP,EAAK,CAC3C,IAAIQ,EAmBJ,GAhBIF,IAAaA,EAAS,IAAMA,EAAS,QACvCE,EAAYD,EAAO,iBAAiB,OAAOD,EAAS,IAAMA,EAAS,IAAI,CAAC,GAKtEE,IAAc,SAChBA,EAAYD,EAAO,WAIjB,OAAOC,GAAc,aACvBA,EAAYA,EAAUR,CAAG,GAIvBM,GAAY,OAAOE,GAAc,SAAU,CAK7C,IAAIC,EAAOpC,EAAQmC,CAAS,EAE5B,MAAM,IAAI,MAAM,yFAA0F,OAAOA,EAAW,KAAM,EAAE,OAAOC,EAAM,UAAU,EAAE,OAAO,KAAK,UAAUF,CAAM,CAAC,CAAC,EAG7L,OAAOC,CACT,CAUA,SAASL,EAAkBJ,EAASC,EAAKV,EAAW,CAClD,IAAI3C,EAAI,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,EAI5E,OAAIoD,EAAUM,GAAaf,EAAU3C,EAAI,CAAC,EAAG2C,EAAU3C,CAAC,EAAGqD,CAAG,EACrDrD,EAAI,EAITA,IAAM2C,EAAU,OAAS,EACpB3C,EAIFwD,EAAkBJ,EAASC,EAAKV,EAAW3C,EAAI,CAAC,CACzD,CASA,SAASuD,GAAgBZ,EAAWW,EAAO,CACzC,OAAOX,EAAU,OAAO,SAAUG,EAAM,CACtC,IAAI9B,EAAO8B,EAAK,KAIhB,OAAI9B,EACKsC,EAAM,QAAQtC,CAAI,GAAK,EAKzB,EACX,CAAG,CACH,CCzJA,SAASU,EAAQpB,EAAK,CAAE,OAAI,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAAYoB,EAAU,SAAiBpB,EAAK,CAAE,OAAO,OAAOA,CAAM,EAAWoB,EAAU,SAAiBpB,EAAK,CAAE,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAI,EAAaoB,EAAQpB,CAAG,CAAI,CAehV,SAASyD,GAAalD,EAASmD,EAAuB,CAInE,QAASpB,EAAY/B,EAASgC,EAAW,MAAM,QAAQD,CAAS,EAAGZ,EAAK,EAAGY,EAAYC,EAAWD,EAAYA,EAAU,OAAO,QAAQ,MAAO,CAC5I,IAAIE,EAEJ,GAAID,EAAU,CACZ,GAAIb,GAAMY,EAAU,OAAQ,MAC5BE,EAAOF,EAAUZ,GAAI,MAChB,CAEL,GADAA,EAAKY,EAAU,OACXZ,EAAG,KAAM,MACbc,EAAOd,EAAG,MAGZ,IAAI/C,EAAS6D,EAEb,GAAIkB,EAAsB/E,CAAM,EAC9B,OAAOA,EAKT,QAFIQ,EAAQR,EAAO,MAAM,GAAG,EAErBQ,EAAM,OAAS,GAIpB,GAHAA,EAAM,IAAG,EACTR,EAASQ,EAAM,KAAK,GAAG,EAEnBuE,EAAsB/E,CAAM,EAC9B,OAAOA,EAKb,MAAM,IAAI,MAAM,8DAA8D,OAAO4B,EAAQ,KAAK,IAAI,CAAC,CAAC,CAC1G,CAmBO,SAASoD,GAA8B,CAK5C,IAAIC,GAAmB,OAAO,KAAS,IAAc,YAAcxC,EAAQ,IAAI,KAAO,SACtF,OAAOwC,GAAmB,OAAO,KAAK,gBAAmB,UAC3D,CCpDA,MAAeC,GAAA,CACb,UAAWjB,EACX,QAAS,YACT,MAAO,CAAC,MAAO,SAAU,OAAQ,MAAO,OAAQ,QAAS,MAAM,CACjE,EC5BA,SAASkB,GAActE,EAAQ,CAAE,QAASE,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CAAE,IAAIqE,EAAS,UAAUrE,CAAC,GAAK,KAAO,UAAUA,CAAC,EAAI,CAAE,EAAMsE,EAAU,OAAO,KAAKD,CAAM,EAAO,OAAO,OAAO,uBAA0B,aAAcC,EAAUA,EAAQ,OAAO,OAAO,sBAAsBD,CAAM,EAAE,OAAO,SAAUE,EAAK,CAAE,OAAO,OAAO,yBAAyBF,EAAQE,CAAG,EAAE,UAAa,CAAA,CAAC,GAAKD,EAAQ,QAAQ,SAAU/D,EAAK,CAAEF,GAAgBP,EAAQS,EAAK8D,EAAO9D,CAAG,CAAC,CAAI,CAAA,EAAK,OAAOT,CAAS,CAEje,SAASO,GAAgBC,EAAKC,EAAKC,EAAO,CAAE,OAAID,KAAOD,EAAO,OAAO,eAAeA,EAAKC,EAAK,CAAE,MAAOC,EAAO,WAAY,GAAM,aAAc,GAAM,SAAU,EAAM,CAAA,EAAYF,EAAIC,CAAG,EAAIC,EAAgBF,CAAM,CAMjN,IAAIkE,EAAa,CAAA,EAKjB,MAAeC,GAAA,CAGb,UAAW,CACXL,GAAc,CAAA,EAAI1B,EAAQO,EAAW,QAAQ,EAAG,CAC9C,UAAW,EACf,CAAG,EACDP,EAAQO,EAAW,MAAM,EAEzB,CACE,UAAWV,EAAM,GAAMD,EACvB,OAAQ,SAAgB9B,EAAOvB,EAAQ,CAOrC,GAAKgF,EAA2B,EAMhC,OAAKO,EAAWvF,CAAM,IACpBuF,EAAWvF,CAAM,EAAI,IAKlBuF,EAAWvF,CAAM,EAAE,YAEtBuF,EAAWvF,CAAM,EAAE,UAAY,IAAI,KAAK,eAAeA,EAAQ,CAC7D,MAAO,QACP,IAAK,SACf,CAAS,GAIIuF,EAAWvF,CAAM,EAAE,UAAU,OAAO+D,EAAQxC,CAAK,CAAC,CAC1D,CACF,EAED,CACE,UAAW,SAAmB6C,EAAK,CAEjC,IAAIqB,EAAW,IAAI,KAAK,IAAI,KAAKrB,CAAG,EAAE,YAAa,EAAG,EAAG,CAAC,EAC1D,OAAQqB,EAAS,UAAYrB,GAAO,GACrC,EACD,OAAQ,SAAgB7C,EAAOvB,EAAQ,CAOrC,GAAKgF,EAA2B,EAMhC,OAAKO,EAAWvF,CAAM,IACpBuF,EAAWvF,CAAM,EAAI,IAKlBuF,EAAWvF,CAAM,EAAE,QAEtBuF,EAAWvF,CAAM,EAAE,MAAQ,IAAI,KAAK,eAAeA,EAAQ,CACzD,KAAM,UACN,MAAO,QACP,IAAK,SACf,CAAS,GAIIuF,EAAWvF,CAAM,EAAE,MAAM,OAAO+D,EAAQxC,CAAK,CAAC,CACtD,CACL,CAAG,EACD,QAAS,CAAC,OAAQ,aAAc,SAAU,OAAO,CACnD,EC9FemE,EAAA,CACb,UAAWzB,EACX,QAAS,CAAC,kBAAmB,MAAM,EACnC,MAAO,CAAC,MAAO,SAAU,OAAQ,MAAO,OAAQ,QAAS,MAAM,CACjE,ECAA,IAAIpE,EAAc,CAAA,EACX,SAASI,EAAcD,EAAQ,CACpC,OAAOH,EAAYG,CAAM,CAC3B,CACO,SAASE,GAAcC,EAAY,CACxC,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,8CAA8C,EAKhEN,EAAYM,EAAW,MAAM,EAAIA,CACnC,CCjBA,SAASsC,EAAQpB,EAAK,CAAE,OAAI,OAAO,QAAW,YAAc,OAAO,OAAO,UAAa,SAAYoB,EAAU,SAAiBpB,EAAK,CAAE,OAAO,OAAOA,CAAM,EAAWoB,EAAU,SAAiBpB,EAAK,CAAE,OAAOA,GAAO,OAAO,QAAW,YAAcA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAI,EAAaoB,EAAQpB,CAAG,CAAI,CAE/V,SAASZ,GAAgBC,EAAUC,EAAa,CAAE,GAAI,EAAED,aAAoBC,GAAgB,MAAM,IAAI,UAAU,mCAAmC,CAAM,CAEzJ,SAASC,EAAkBC,EAAQC,EAAO,CAAE,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAAK,CAAE,IAAIC,EAAaF,EAAMC,CAAC,EAAGC,EAAW,WAAaA,EAAW,YAAc,GAAOA,EAAW,aAAe,GAAU,UAAWA,IAAYA,EAAW,SAAW,IAAM,OAAO,eAAeH,EAAQG,EAAW,IAAKA,CAAU,EAAM,CAE7T,SAASC,GAAaN,EAAaO,EAAYC,EAAa,CAAE,OAAID,GAAYN,EAAkBD,EAAY,UAAWO,CAAU,EAAOC,GAAaP,EAAkBD,EAAaQ,CAAW,EAAUR,CAAc,CAmBpN,IAACgF,EAEJ,UAAY,CAIV,SAASA,GAAoB,CAC3B,IAAI/D,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAElFnB,GAAgB,KAAMkF,CAAiB,EAGnC,OAAO/D,GAAY,WACrBA,EAAU,CAACA,CAAO,GAMpB,KAAK,OAASkD,GAAalD,EAAQ,OAAOD,EAAmB,iBAAgB,CAAE,EAAGiE,CAAc,EAE5F,OAAO,KAAS,KAAe,KAAK,eACtC,KAAK,aAAe,IAAI,KAAK,aAAa,KAAK,MAAM,GAIvD,KAAK,wBAA0B,IAAIlD,EACpC,CAkCD,OAAAzB,GAAa0E,EAAmB,CAAC,CAC/B,IAAK,SACL,MAAO,SAAgBE,EAAO,CAC5B,IAAI/D,EAAQ,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI4D,EAEhF,GAAI,OAAO5D,GAAU,SACnB,OAAQA,EAAK,CACX,IAAK,UACHA,EAAQ0D,GACR,MAEF,IAAK,OACH1D,EAAQoD,GACR,MAEF,QACEpD,EAAQ4D,CACX,CAGH,IAAII,EAAwBC,GAA6BF,CAAK,EAC1DG,EAAOF,EAAsB,KAC7BG,EAAOH,EAAsB,KAG7BI,EAAsB,KAAK,cAAcpE,EAAM,OAAO,EACtDqE,EAAUD,EAAoB,QAC9B/F,EAAa+F,EAAoB,WAMjC9B,EAAMtC,EAAM,KAAO,KAAK,IAAG,EAE3BqC,GAAWC,EAAM6B,GAAQ,IAa7B,GAAInE,EAAM,OAAQ,CAChB,IAAIsE,EAAStE,EAAM,OAAO,CACxB,IAAKsC,EACL,KAAM4B,EACN,KAAMC,EACN,QAAS9B,EACT,OAAQ,KAAK,MACvB,CAAS,EAED,GAAIiC,IAAW,OACb,OAAOA,EAKX,IAAI/B,EAAQgC,GAAgClG,EAAY2B,EAAM,KAAK,EAEnE,GAAIuC,EAAM,SAAW,EACnB,eAAQ,MAAM,UAAW,OAAOA,EAAM,KAAK,IAAI,EAAG,uCAAyC,EAAE,OAAO,KAAK,OAAQ,IAAK,CAAC,EAChH,GAKT,IAAIP,EAAOI,GAAM,KAAK,IAAIC,CAAO,EAAGC,EAAKC,EAAOvC,EAAM,SAAS,EAK/D,GAAI,CAACgC,EACH,MAAO,GAGT,GAAIA,EAAK,OACP,OAAOA,EAAK,OAAOkC,GAAQC,EAAM,KAAK,MAAM,EAG9C,IAAIlE,EAAO+B,EAAK,KACZwC,EAASxC,EAAK,OACdyC,EAAczC,EAAK,YACnBU,EAAS,KAAK,IAAIL,CAAO,EAAImC,EAWjC,GANIC,IAEF/B,EAAS,KAAK,MAAMA,EAAS+B,CAAW,EAAIA,GAI1CxE,IAAS,MACX,OAAOyE,GAAcrG,EAAY,GAAK,KAAK,KAAKgE,CAAO,CAAC,EAG1D,OAAQgC,EAAO,CACb,IAAK,OACL,IAAK,QACL,IAAK,SAEH,OAAO,KAAK,aAAaA,CAAO,EAAE,OAAO,GAAK,KAAK,KAAKhC,CAAO,EAAI,KAAK,MAAMK,CAAM,EAAGzC,CAAI,EAE7F,QAGE,OAAO,KAAK,YAAY,GAAK,KAAK,KAAKoC,CAAO,EAAI,KAAK,MAAMK,CAAM,EAAGzC,EAAM5B,CAAU,CACzF,CACF,CASL,EAAK,CACD,IAAK,cACL,MAAO,SAAqBoB,EAAOQ,EAAM5B,EAAY,CACnD,OAAO,KAAK,QAAQoB,EAAOQ,EAAM5B,CAAU,EAAE,QAAQ,MAAO,KAAK,aAAa,KAAK,IAAIoB,CAAK,CAAC,CAAC,CAC/F,CAYL,EAAK,CACD,IAAK,UACL,MAAO,SAAiBA,EAAOQ,EAAM5B,EAAY,CAC/C,IAAI+B,EAAY/B,EAAW4B,CAAI,EAE/B,GAAI,OAAOG,GAAc,SACvB,OAAOA,EAMT,IAAIG,EAAkBH,EAAUX,GAAS,EAAI,OAAS,QAAQ,GAAKW,EAEnE,GAAI,OAAOG,GAAoB,SAC7B,OAAOA,EAIT,IAAIC,EAAWsD,EAAe,KAAK,MAAM,EAAE,SAEvCrD,EAAaD,GAAYA,EAAS,KAAK,IAAIf,CAAK,CAAC,EAOrD,OAAAgB,EAAaA,GAAc,QAGpBF,EAAgBE,CAAU,GAAKF,EAAgB,KACvD,CAQL,EAAK,CACD,IAAK,eACL,MAAO,SAAsBG,EAAQ,CACnC,OAAO,KAAK,aAAe,KAAK,aAAa,OAAOA,CAAM,EAAI,OAAOA,CAAM,CAC5E,CAOL,EAAK,CACD,IAAK,eACL,MAAO,SAAsBiE,EAAQ,CAGnC,OAAO,KAAK,wBAAwB,IAAI,KAAK,OAAQA,CAAM,GAAK,KAAK,wBAAwB,IAAI,KAAK,OAAQA,EAAQ,IAAI9E,EAAmB,KAAK,OAAQ,CACxJ,MAAO8E,CACR,CAAA,CAAC,CACH,CAUL,EAAK,CACD,IAAK,gBACL,MAAO,UAAyB,CAC9B,IAAIN,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAA,EAG9EhG,EAAayF,EAAe,KAAK,MAAM,EAGvC,OAAOO,GAAY,WACrBA,EAAU,CAACA,CAAO,GAKpBA,EAAUA,EAAQ,OAAO,MAAM,EAE/B,QAASxC,EAAYwC,EAASvC,EAAW,MAAM,QAAQD,CAAS,EAAGZ,EAAK,EAAGY,EAAYC,EAAWD,EAAYA,EAAU,OAAO,QAAQ,MAAO,CAC5I,IAAIE,EAEJ,GAAID,EAAU,CACZ,GAAIb,GAAMY,EAAU,OAAQ,MAC5BE,EAAOF,EAAUZ,GAAI,MAChB,CAEL,GADAA,EAAKY,EAAU,OACXZ,EAAG,KAAM,MACbc,EAAOd,EAAG,MAGZ,IAAI2D,EAAI7C,EAER,GAAI1D,EAAWuG,CAAC,EACd,MAAO,CACL,QAASA,EACT,WAAYvG,EAAWuG,CAAC,CACpC,EAKK,CACF,CAAA,CAAC,EAEKf,CACT,EAAI,EAQJA,EAAkB,iBAAmBhE,EAAmB,iBAMxDgE,EAAkB,iBAAmBhE,EAAmB,iBAMxDgE,EAAkB,UAAY,SAAUxF,EAAY,CAClDD,GAAcC,CAAU,EACxBwB,EAAmB,UAAUxB,CAAU,CACzC,EASAwF,EAAkB,OAASA,EAAkB,UAE7C,SAASI,GAA6BF,EAAO,CAC3C,GAAIA,EAAM,cAAgB,KACxB,MAAO,CACL,KAAMA,EACN,KAAMA,EAAM,QAAS,CAC3B,EAGE,GAAI,OAAOA,GAAU,SACnB,MAAO,CACL,KAAMA,CAIZ,EAME,MAAM,IAAI,MAAM,8CAA8C,OAAOpD,EAAQoD,CAAK,EAAG,IAAI,EAAE,OAAOA,CAAK,CAAC,CAC1G,CAGA,SAASQ,GAAgClG,EAAYwG,EAAsB,CAEzE,IAAItC,EAAQ,OAAO,KAAKlE,CAAU,EAGlC,OAAIwG,IAGFtC,EAAQsC,EAAqB,OAAO,SAAUD,EAAG,CAC/C,OAAOrC,EAAM,QAAQqC,CAAC,GAAK,CACjC,CAAK,IAME,CAACC,GAAwBA,EAAqB,QAAQ,KAAK,GAAK,IAAMtC,EAAM,QAAQ,KAAK,EAAI,GAC5FlE,EAAW,OAAO,SACpBkE,EAAM,QAAQ,KAAK,EAIhBA,CACT,CAEA,SAASmC,GAAcrG,EAAYoB,EAAO,CAExC,OAAIpB,EAAW,IAET,OAAOA,EAAW,KAAQ,SACrBA,EAAW,IAQhBoB,GAAS,EACJpB,EAAW,IAAI,KAEfA,EAAW,IAAI,OAKnBA,EAAW,OAAO,OAG3B,ynHC9bAmC,GAAe,SAAS,EAAE,CAAC,IAAIvB,EAAE,OAAO,CAAC,EAAE,MAAM,GAAG,EAAE6F,EAAE7F,EAAE,CAAC,EAAE8F,EAAE,CAAC9F,EAAE,CAAC,EAAE+F,EAAEF,EAAE,MAAM,EAAE,EAAEG,EAAEH,EAAE,MAAM,EAAE,EAAE,OAAOC,GAAMC,GAAH,GAAUC,GAAJ,GAAM,MAAMF,GAAG,GAAGC,GAAGA,GAAG,IAAIC,EAAE,IAAI,GAAGA,GAAG,MAAMF,GAAMC,GAAH,GAAMD,GAAG,GAAGC,GAAGA,GAAG,GAAGD,GAAG,IAAIE,GAAGA,GAAG,GAAG,OAAO,OAAO,ECArNC,GAAiB,CAChB,OAAQ,KACR,KAAMC,GACN,MAAOC,GACP,OAAQC,GACR,SAAUC,EACX,0qHCNA,IAAIpH,EAASiH,GAEbD,GAAiB,CAChB,OAAQhH,EAAO,OAEf,KAAMA,EAAO,KACb,MAAOA,EAAO,MACd,OAAQA,EAAO,OAEf,aAAckH,GACd,mBAAoBC,GACpB,YAAaC,GACb,kBAAmBC,GACnB,KAAQC,GAER,SAAUtH,EAAO,QAClB","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}