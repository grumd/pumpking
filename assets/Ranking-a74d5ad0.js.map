{"version":3,"file":"Ranking-a74d5ad0.js","sources":["../../src/hooks/usePreferencesMutation.ts","../../src/features/ranking/components/RankingFaq.jsx","../../src/components/ExpRankImg/expRanks.ts","../../src/components/ExpRankImg/ExpRankImg.tsx","../../src/features/ranking/components/RankingList.jsx","../../src/features/ranking/Ranking.jsx"],"sourcesContent":["import { useQueryClient } from '@tanstack/react-query';\nimport { getQueryKey } from '@trpc/react-query';\n\nimport { api } from 'utils/trpc';\n\nexport const usePreferencesMutation = () => {\n  const queryClient = useQueryClient();\n\n  const preferencesMutation = api.user.preferencesMutation.useMutation({\n    onSuccess: (newUser) => {\n      queryClient.setQueryData(getQueryKey(api.user.current, undefined, 'query'), newUser);\n      queryClient.invalidateQueries(getQueryKey(api.charts.search));\n    },\n  });\n\n  return preferencesMutation;\n};\n","import React from 'react';\n\nexport default function RankingFaq() {\n  return (\n    <div className=\"faq\">\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Как считается рейтинг?</div>\n        <div className=\"answer\">\n          A: Используется <a href=\"https://en.wikipedia.org/wiki/Elo_rating_system\">рейтинг Эло</a>,\n          широко используемый в шахматах и других играх, слегка модицированный под условия игры на\n          пампе. Средний рейтинг - 1000. Коэффициент К зависит от уровня чарта (более сложные чарты\n          сильнее влияют на рейтинг). Количество очков влияет на заработанный рейтинг (маленький\n          отрыв от противника не даст так много очков как большой отрыв).\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Что такое рр и чем оно отличается от эло?</div>\n        <div className=\"answer\">\n          A: РР (performance points) - система очков, взятая из osu!. Эло - система рейтинга, взятая\n          из шахмат. Основные отличия:\n          <br />\n          С эло твои очки зависят от других игроков на этом чарте, с рр твои очки зависят только от\n          того, как ты сыграешь чарт.\n          <br />\n          С эло можно потерять очки или заставить другого игрока их потерять, с рр можно только\n          набирать больше очков.\n          <br />\n          С эло намного проще кого-то обогнать, с рр люди редко меняются местами в рейтинге.\n          <br />\n          Эло показывает кто кого обыгрывает в последнее время, а рр показывает, кто на каком\n          примерно уровне по скиллу.\n          <br />\n          Сейчас рейтинг сортируется по Эло. РР выступает в качестве дополнительной инфы для\n          интереса, плюс используется как стартовое значение Эло.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">\n          Q: Система Эло используется для игр 1 на 1, как она используется на пампе, где на одном\n          чарте играет много игроков?\n        </div>\n        <div className=\"answer\">\n          A: Рекорды на одном чарте делятся на несколько игр 1 на 1. Если есть 3 игрока: A, B, C; то\n          считается, что было 3 отдельные игры: A vs B, A vs C, B vs C.\n        </div>\n      </div>\n\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Как считается сумма рр?</div>\n        <div className=\"answer\">\n          A: Сначала все скоры игрока сортируются по рр. Затем в общую сумму рр добавляется 100% от\n          лучшего скора, 95% от второго скора, 90% от третьего, 86% от 4-го и так далее. (Формула\n          коэффициента - 0.95^N). Таким образом, на общую сумму рр больше всего влияют самые лучшие\n          результаты человека за всё время, и чтобы поднять свой уровень рр, нужно получать новые\n          топовые результаты (и поднимать свой скилл).\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Учитываются ли рекорды на ранке в рейтинге?</div>\n        <div className=\"answer\">\n          A: Да. Как минимум потому что у нас есть много рекордов, взятых с машин бестов, и мы не\n          знаем наверняка, на ранке они или нет. Если у игрока в топе есть два скора - на ранке и\n          без ранка, используется тот, где больше очков.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Почему меня нет в рейтинге?</div>\n        <div className=\"answer\">\n          A: В таблицу попадают только те, у кого есть хотя бы 20 игр 1 на 1. Первые 20 игр\n          используются для определения изначального рейтинга.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">\n          Q: Почему суммарное количество оценок S-A-B не совпадает с общим количеством скоров?\n        </div>\n        <div className=\"answer\">A: Не для каждого результата известна оценка.</div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">\n          Q: Если у меня есть несколько рекордов на А, несколько на А+, как считается суммарное\n          количество грейдов в таблице?\n        </div>\n        <div className=\"answer\">\n          A: В каждой колонке учитываются обе буквы - и треснутые, и с удержанным лайфом. То есть и\n          А, и А+ идут в колонку А. Точно так же для B, C, D.\n        </div>\n      </div>\n      <div className=\"question-answer\">\n        <div className=\"question\">Q: Убери аккураси из таблицы!</div>\n        <div className=\"answer\">A: Грем, это секция для вопросов.</div>\n      </div>\n    </div>\n  );\n}\n","import css from './exp-rank-img.module.scss';\n\nexport const ranks = [\n  {\n    threshold: 0,\n    iconName: '0.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 1000,\n    iconName: '1.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 2000,\n    iconName: '2.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 3000,\n    iconName: '3.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 4000,\n    iconName: '4.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 5000,\n    iconName: '5.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 6250,\n    iconName: '6.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 7500,\n    iconName: '7.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 8750,\n    iconName: '8.png',\n    color: css.bronze,\n  },\n  {\n    threshold: 10000,\n    iconName: '9.png',\n    color: css.silver,\n  },\n  {\n    threshold: 12000,\n    iconName: '10.png',\n    color: css.silver,\n  },\n  {\n    threshold: 14000,\n    iconName: '11.png',\n    color: css.silver,\n  },\n  {\n    threshold: 16000,\n    iconName: '12.png',\n    color: css.silver,\n  },\n  {\n    threshold: 18000,\n    iconName: '13.png',\n    color: css.silver,\n  },\n  {\n    threshold: 22000,\n    iconName: '14.png',\n    color: css.silver,\n  },\n  {\n    threshold: 26000,\n    iconName: '15.png',\n    color: css.silver,\n  },\n  {\n    threshold: 30000,\n    iconName: '16.png',\n    color: css.silver,\n  },\n  {\n    threshold: 35000,\n    iconName: '17.png',\n    color: css.silver,\n  },\n  {\n    threshold: 40000,\n    iconName: '18.png',\n    color: css.gold,\n  },\n  {\n    threshold: 50000,\n    iconName: '19.png',\n    color: css.gold,\n  },\n  {\n    threshold: 60000,\n    iconName: '20.png',\n    color: css.gold,\n  },\n  {\n    threshold: 70000,\n    iconName: '21.png',\n    color: css.gold,\n  },\n  {\n    threshold: 80000,\n    iconName: '22.png',\n    color: css.gold,\n  },\n  {\n    threshold: 100000,\n    iconName: '23.png',\n    color: css.gold,\n  },\n  {\n    threshold: 120000,\n    iconName: '24.png',\n    color: css.gold,\n  },\n  {\n    threshold: 140000,\n    iconName: '25.png',\n    color: css.gold,\n  },\n  {\n    threshold: 160000,\n    iconName: '26.png',\n    color: css.gold,\n  },\n  {\n    threshold: 200000,\n    iconName: '27.png',\n    color: css.green,\n  },\n  {\n    threshold: 250000,\n    iconName: '28.png',\n    color: css.purple,\n  },\n  {\n    threshold: 300000,\n    iconName: '29.png',\n    color: css.purple,\n  },\n];\n","import css from './exp-rank-img.module.scss';\n\nimport { ranks } from './expRanks';\n\ninterface ExpRankImgProps {\n  exp: number | null;\n}\n\nexport const ExpRankImg = ({ exp }: ExpRankImgProps) => {\n  const rankIndex = exp ? ranks.findLastIndex((rank) => rank.threshold <= exp) : 0;\n  const rank = ranks[rankIndex];\n  if (!rank) return null;\n\n  const title = exp\n    ? `${Math.floor(exp)}` +\n      (rankIndex < ranks.length - 1\n        ? ` (${ranks[rankIndex + 1].threshold - Math.floor(exp)} to next rank)`\n        : '')\n    : 'N/A';\n\n  return (\n    <img\n      className={`${rank.color} ${css.expRank}`}\n      src={`/ranks/${rank.iconName}`}\n      title={title}\n      alt={`Exp: ${rank.threshold}`}\n    />\n  );\n};\n","import classNames from 'classnames';\nimport _ from 'lodash/fp';\nimport { GiQueenCrown } from 'react-icons/gi';\nimport { NavLink } from 'react-router-dom';\n\nimport { ExpRankImg } from 'components/ExpRankImg/ExpRankImg';\n\nimport { usePreferencesMutation } from 'hooks/usePreferencesMutation';\n\nimport Flag from 'legacy-code/components/Shared/Flag';\nimport Loader from 'legacy-code/components/Shared/Loader';\nimport Toggle from 'legacy-code/components/Shared/Toggle/Toggle';\nimport { routes } from 'legacy-code/constants/routes';\n\nimport { useLanguage } from 'utils/context/translation';\n\nexport default function RankingList({ ranking, isLoading, preferences }) {\n  const lang = useLanguage();\n  const preferencesMutation = usePreferencesMutation();\n\n  // TODO: rewrite in TS\n\n  return (\n    <div className=\"ranking-list\">\n      {_.isEmpty(ranking) && !isLoading && 'ничего не найдено'}\n      {isLoading && <Loader />}\n      {!isLoading && (\n        <table>\n          <thead>\n            <tr>\n              <th className=\"place\">{lang.RANK}</th>\n              {/* <th className=\"change\"></th> */}\n              <th>{lang.EXP}</th>\n              <th className=\"name\">{lang.NAME}</th>\n              <th className=\"name name-piu\">{lang.AMPASS}</th>\n              {/*<th className=\"rating\">{lang.ELO}</th>*/}\n              <th className=\"rating\">pp</th>\n              {/* <th className=\"rating-change-cell\"></th> */}\n              {/* <th className=\"total-score\">total score</th> */}\n              {/* <th className=\"grades sss\">\n                <Grade grade=\"SSS\" />\n              </th>\n              <th className=\"grades ss\">\n                <Grade grade=\"SS\" />\n              </th>\n              <th className=\"grades s\">\n                <Grade grade=\"S\" />\n              </th>\n              <th className=\"grades a\">\n                <Grade grade=\"A+\" />\n              </th>\n              <th className=\"grades b\">\n                <Grade grade=\"B\" />\n              </th>\n              <th className=\"grades c\">\n                <Grade grade=\"C\" />\n              </th>\n              <th className=\"grades d\">\n                <Grade grade=\"D\" />\n              </th>\n              <th className=\"grades f\">\n                <Grade grade=\"F\" />\n              </th> */}\n              <th className=\"playcount\">{lang.PLAYCOUNT}</th>\n              <th className=\"playcount\">{lang.SCORES_count}</th>\n              {/* <th className=\"calories\">kcal</th> */}\n              <th className=\"accuracy\">{lang.ACCURACY}</th>\n              <th className=\"hide-col\"> </th>\n            </tr>\n          </thead>\n          <tbody>\n            {ranking.map((player, playerIndex) => {\n              const isHidden = preferences?.playersHiddenStatus[player.id];\n              if (isHidden && !preferences?.showHiddenPlayersInRanking) {\n                return null;\n              }\n\n              // const ppDifference =\n              //   (Math.floor(player.pp * 10) - Math.floor(player.prevRating * 10)) / 10 || 0;\n\n              return (\n                <tr className={classNames('player', { 'hidden-player': isHidden })} key={player.id}>\n                  <td className=\"place\">\n                    {playerIndex === 0 ? <GiQueenCrown /> : `#${playerIndex + 1}`}\n                  </td>\n                  {/* <td className=\"change\">\n                    {player.change > 0 && (\n                      <div className=\"change-holder up\">\n                        <span>{player.change}</span>\n                        <FaAngleDoubleUp />\n                      </div>\n                    )}\n                    {player.change < 0 && (\n                      <div className=\"change-holder down\">\n                        <span>{-player.change}</span>\n                        <FaAngleDoubleDown />\n                      </div>\n                    )}\n                    {!!player.change && _.isString(player.change) && (\n                      <div className=\"change-holder text\">\n                        <span>{player.change}</span>\n                      </div>\n                    )}\n                  </td> */}\n                  <td>\n                    <ExpRankImg exp={player.exp} />\n                  </td>\n                  <td className=\"name\">\n                    <div className=\"name-container\">\n                      <Flag region={player.region} />\n                      <NavLink exact to={routes.profile.getPath({ id: player.id })}>\n                        {player.nickname}\n                      </NavLink>\n                    </div>\n                  </td>\n                  <td className=\"name name-piu\">\n                    <NavLink exact to={routes.profile.getPath({ id: player.id })}>\n                      {player.arcade_name}\n                    </NavLink>\n                  </td>\n                  {/*<td className=\"rating\">{player.rating}</td>*/}\n                  <td className=\"rating secondary\">{Math.floor(player.pp)}</td>\n                  {/* <td className=\"rating-change-cell\">\n                    {player.prevRating && ppDifference !== 0 && (\n                      <span\n                        className={classNames('rating-change', {\n                          down: player.prevRating > player.pp,\n                          up: player.prevRating < player.pp,\n                        })}\n                      >\n                        {player.prevRating < player.pp ? '+' : ''}\n                        {ppDifference.toFixed(1)}\n                      </span>\n                    )}\n                  </td> */}\n                  {/* <td className=\"grades sss\">{player.grades.SSS}</td>\n                  <td className=\"grades ss\">{player.grades.SS}</td>\n                  <td className=\"grades s\">{player.grades.S}</td>\n                  <td className=\"grades a\">{player.grades.A}</td>\n                  <td className=\"grades b\">{player.grades.B}</td>\n                  <td className=\"grades c\">{player.grades.C}</td>\n                  <td className=\"grades d\">{player.grades.D}</td>\n                  <td className=\"grades f\">{player.grades.F}</td> */}\n                  <td className=\"playcount\">{player.results_count}</td>\n                  <td className=\"playcount\">{player.best_results_count}</td>\n                  <td className=\"accuracy\">\n                    {player.accuracy ? `${player.accuracy.toFixed(2)}%` : ''}\n                  </td>\n                  <td className=\"hide-col\">\n                    <Toggle\n                      onChange={() => {\n                        preferencesMutation.mutate(\n                          _.set(['playersHiddenStatus', player.id], !isHidden, preferences)\n                        );\n                      }}\n                      checked={!isHidden}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n","import _ from 'lodash/fp';\nimport { FaQuestionCircle, FaSearch } from 'react-icons/fa';\nimport { Link, Route, Routes } from 'react-router-dom';\n\n// styles\nimport './ranking.scss';\n\nimport { usePreferencesMutation } from 'hooks/usePreferencesMutation';\nimport { useUser } from 'hooks/useUser';\n\nimport { useLanguage } from 'utils/context/translation';\nimport { api } from 'utils/trpc';\n\nimport RankingFaq from './components/RankingFaq';\nimport RankingList from './components/RankingList';\n\nconst Ranking = () => {\n  const lang = useLanguage();\n  const userQuery = useUser();\n  const {\n    isLoading,\n    isFetching,\n    error,\n    data: ranking,\n    refetch: refetchRanking,\n  } = api.players.stats.useQuery();\n\n  const preferencesMutation = usePreferencesMutation();\n  const preferences = userQuery.data?.preferences;\n\n  const onChangeHidingPlayers = () => {\n    preferencesMutation.mutate(\n      _.set(['showHiddenPlayersInRanking'], !preferences.showHiddenPlayersInRanking, preferences)\n    );\n  };\n\n  const onRefresh = () => {\n    !isLoading && refetchRanking();\n  };\n\n  return (\n    <div className=\"ranking-page\">\n      <div className=\"content\">\n        {error && error.message}\n        <div className=\"top-controls\">\n          <div className=\"_flex-fill\" />\n          <Routes>\n            <Route\n              index\n              element={\n                <>\n                  <button\n                    className=\"btn btn-sm btn-dark btn-icon _margin-right\"\n                    disabled={!preferences}\n                    onClick={onChangeHidingPlayers}\n                  >\n                    {preferences?.showHiddenPlayersInRanking ? lang.HIDE_UNSELECTED : lang.SHOW_ALL}\n                  </button>\n                  <Link to=\"faq\">\n                    <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">\n                      <FaQuestionCircle /> faq\n                    </button>\n                  </Link>\n                  <button\n                    disabled={isFetching}\n                    className=\"btn btn-sm btn-dark btn-icon\"\n                    onClick={onRefresh}\n                  >\n                    <FaSearch /> {lang.UPDATE}\n                  </button>\n                </>\n              }\n            />\n            <Route\n              path=\"faq\"\n              element={\n                <Link to=\"..\">\n                  <button className=\"btn btn-sm btn-dark btn-icon\">назад</button>\n                </Link>\n              }\n            />\n          </Routes>\n        </div>\n        <Routes>\n          <Route\n            index\n            element={\n              <RankingList ranking={ranking} isLoading={isLoading} preferences={preferences} />\n            }\n          />\n          <Route path=\"faq\" element={<RankingFaq />} />\n        </Routes>\n      </div>\n    </div>\n  );\n};\n\nexport default Ranking;\n"],"names":["usePreferencesMutation","queryClient","useQueryClient","api","newUser","getQueryKey","RankingFaq","jsxs","jsx","ranks","css","ExpRankImg","exp","rankIndex","rank","title","RankingList","ranking","isLoading","preferences","lang","useLanguage","preferencesMutation","_","Loader","player","playerIndex","isHidden","classNames","GiQueenCrown","Flag","NavLink","routes","Toggle","Ranking","userQuery","useUser","isFetching","error","refetchRanking","_a","onChangeHidingPlayers","onRefresh","Routes","Route","Fragment","Link","FaQuestionCircle","FaSearch"],"mappings":"mTAKO,MAAMA,EAAyB,IAAM,CAC1C,MAAMC,EAAcC,IASb,OAPqBC,EAAI,KAAK,oBAAoB,YAAY,CACnE,UAAYC,GAAY,CACVH,EAAA,aAAaI,EAAYF,EAAI,KAAK,QAAS,OAAW,OAAO,EAAGC,CAAO,EACnFH,EAAY,kBAAkBI,EAAYF,EAAI,OAAO,MAAM,CAAC,CAC9D,CAAA,CACD,CAGH,ECdA,SAAwBG,GAAa,CAEjC,OAAAC,EAAA,KAAC,MAAI,CAAA,UAAU,MACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAAyB,4BAAA,EACnDD,EAAAA,KAAC,MAAI,CAAA,UAAU,SAAS,SAAA,CAAA,mBACLC,EAAA,IAAA,IAAA,CAAE,KAAK,kDAAkD,SAAW,cAAA,EAAI,6UAAA,EAK3F,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAA4C,+CAAA,EACtED,EAAAA,KAAC,MAAI,CAAA,UAAU,SAAS,SAAA,CAAA,gIAGrB,KAAG,EAAA,EAAE,8HAGL,KAAG,EAAA,EAAE,qHAGL,KAAG,EAAA,EAAE,2FAEL,KAAG,EAAA,EAAE,uHAGL,KAAG,EAAA,EAAE,4IAAA,EAGR,CAAA,EACF,EACAA,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAG1B,sHAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAGxB,2JAAA,CAAA,EACF,EAEAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAA0B,6BAAA,EACnDA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAMxB,mZAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAA8C,iDAAA,EACvEA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAIxB,iOAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAA8B,iCAAA,EACvDA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAGxB,wIAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAE1B,uFAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAA6C,gDAAA,CAAA,EACvE,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAG1B,sHAAA,EACCA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAGxB,gJAAA,CAAA,EACF,EACAD,EAAAA,KAAC,MAAI,CAAA,UAAU,kBACb,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,WAAW,SAA6B,gCAAA,EACtDA,EAAA,IAAA,MAAA,CAAI,UAAU,SAAS,SAAiC,oCAAA,CAAA,EAC3D,CACF,CAAA,CAAA,CAEJ,wLC5FaC,EAAQ,CACnB,CACE,UAAW,EACX,SAAU,QACV,MAAOC,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,QACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,IACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,KACb,EACA,CACE,UAAW,KACX,SAAU,SACV,MAAOA,EAAI,MACb,EACA,CACE,UAAW,IACX,SAAU,SACV,MAAOA,EAAI,MACb,CACF,ECjJaC,EAAa,CAAC,CAAE,IAAAC,KAA2B,CAChD,MAAAC,EAAYD,EAAMH,EAAM,cAAeK,GAASA,EAAK,WAAaF,CAAG,EAAI,EACzEE,EAAOL,EAAMI,CAAS,EAC5B,GAAI,CAACC,EAAa,OAAA,KAEZ,MAAAC,EAAQH,EACV,GAAG,KAAK,MAAMA,CAAG,KAChBC,EAAYJ,EAAM,OAAS,EACxB,KAAKA,EAAMI,EAAY,CAAC,EAAE,UAAY,KAAK,MAAMD,CAAG,kBACpD,IACJ,MAGF,OAAAJ,EAAA,IAAC,MAAA,CACC,UAAW,GAAGM,EAAK,SAASJ,EAAI,UAChC,IAAK,UAAUI,EAAK,WACpB,MAAAC,EACA,IAAK,QAAQD,EAAK,WAAA,CAAA,CAGxB,ECZA,SAAwBE,EAAY,CAAE,QAAAC,EAAS,UAAAC,EAAW,YAAAC,GAAe,CACvE,MAAMC,EAAOC,IACPC,EAAsBtB,IAK1B,OAAAO,EAAA,KAAC,MAAI,CAAA,UAAU,eACZ,SAAA,CAAAgB,EAAE,QAAQN,CAAO,GAAK,CAACC,GAAa,oBACpCA,SAAcM,EAAO,EAAA,EACrB,CAACN,GACAX,EAAAA,KAAC,QACC,CAAA,SAAA,CAACC,EAAA,IAAA,QAAA,CACC,gBAAC,KACC,CAAA,SAAA,CAAAA,EAAA,IAAC,KAAG,CAAA,UAAU,QAAS,SAAAY,EAAK,KAAK,EAEjCZ,EAAAA,IAAC,KAAI,CAAA,SAAAY,EAAK,GAAI,CAAA,EACbZ,EAAA,IAAA,KAAA,CAAG,UAAU,OAAQ,WAAK,KAAK,EAC/BA,EAAA,IAAA,KAAA,CAAG,UAAU,gBAAiB,WAAK,OAAO,EAE1CA,EAAA,IAAA,KAAA,CAAG,UAAU,SAAS,SAAE,KAAA,EA2BxBA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAa,WAAK,UAAU,EACzCA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAa,WAAK,aAAa,EAE5CA,EAAA,IAAA,KAAA,CAAG,UAAU,WAAY,WAAK,SAAS,EACvCA,EAAA,IAAA,KAAA,CAAG,UAAU,WAAW,SAAC,IAAA,CAAA,CAAA,CAC5B,CACF,CAAA,QACC,QACE,CAAA,SAAAS,EAAQ,IAAI,CAACQ,EAAQC,IAAgB,CACpC,MAAMC,EAAWR,GAAA,YAAAA,EAAa,oBAAoBM,EAAO,IACrD,OAAAE,GAAY,EAACR,GAAA,MAAAA,EAAa,4BACrB,KAOPZ,OAAC,MAAG,UAAWqB,EAAW,SAAU,CAAE,gBAAiBD,EAAU,EAC/D,SAAA,CAACnB,EAAA,IAAA,KAAA,CAAG,UAAU,QACX,SAAgBkB,IAAA,QAAKG,EAAa,CAAA,CAAA,EAAK,IAAIH,EAAc,IAC5D,QAoBC,KACC,CAAA,SAAAlB,MAACG,GAAW,IAAKc,EAAO,GAAK,CAAA,EAC/B,QACC,KAAG,CAAA,UAAU,OACZ,SAAClB,EAAA,KAAA,MAAA,CAAI,UAAU,iBACb,SAAA,CAACC,EAAAA,IAAAsB,EAAA,CAAK,OAAQL,EAAO,MAAQ,CAAA,EAC5BjB,EAAA,IAAAuB,EAAA,CAAQ,MAAK,GAAC,GAAIC,EAAO,QAAQ,QAAQ,CAAE,GAAIP,EAAO,EAAI,CAAA,EACxD,WAAO,SACV,CAAA,CAAA,CACF,CACF,CAAA,EACAjB,EAAAA,IAAC,MAAG,UAAU,gBACZ,eAACuB,EAAQ,CAAA,MAAK,GAAC,GAAIC,EAAO,QAAQ,QAAQ,CAAE,GAAIP,EAAO,GAAI,EACxD,SAAAA,EAAO,YACV,CACF,CAAA,EAEAjB,EAAAA,IAAC,MAAG,UAAU,mBAAoB,cAAK,MAAMiB,EAAO,EAAE,EAAE,EAsBvDjB,EAAA,IAAA,KAAA,CAAG,UAAU,YAAa,WAAO,cAAc,EAC/CA,EAAA,IAAA,KAAA,CAAG,UAAU,YAAa,WAAO,mBAAmB,EACpDA,EAAA,IAAA,KAAA,CAAG,UAAU,WACX,SAAOiB,EAAA,SAAW,GAAGA,EAAO,SAAS,QAAQ,CAAC,KAAO,GACxD,EACAjB,EAAAA,IAAC,KAAG,CAAA,UAAU,WACZ,SAAAA,EAAA,IAACyB,EAAA,CACC,SAAU,IAAM,CACMX,EAAA,OAClBC,EAAE,IAAI,CAAC,sBAAuBE,EAAO,EAAE,EAAG,CAACE,EAAUR,CAAW,CAAA,CAEpE,EACA,QAAS,CAACQ,CAAA,CAAA,EAEd,CAAA,GA5EuEF,EAAO,EA6EhF,CAEH,CAAA,EACH,CAAA,EACF,CAEJ,CAAA,CAAA,CAEJ,CCtJA,MAAMS,EAAU,IAAM,OACpB,MAAMd,EAAOC,IACPc,EAAYC,IACZ,CACJ,UAAAlB,EACA,WAAAmB,EACA,MAAAC,EACA,KAAMrB,EACN,QAASsB,CACP,EAAApC,EAAI,QAAQ,MAAM,SAAS,EAEzBmB,EAAsBtB,IACtBmB,GAAcqB,EAAAL,EAAU,OAAV,YAAAK,EAAgB,YAE9BC,EAAwB,IAAM,CACdnB,EAAA,OAClBC,EAAE,IAAI,CAAC,4BAA4B,EAAG,CAACJ,EAAY,2BAA4BA,CAAW,CAAA,CAC5F,EAGIuB,EAAY,IAAM,CACtB,CAACxB,GAAaqB,GAAe,EAG/B,aACG,MAAI,CAAA,UAAU,eACb,SAAChC,EAAA,KAAA,MAAA,CAAI,UAAU,UACZ,SAAA,CAAA+B,GAASA,EAAM,QAChB/B,EAAAA,KAAC,MAAI,CAAA,UAAU,eACb,SAAA,CAACC,EAAAA,IAAA,MAAA,CAAI,UAAU,YAAa,CAAA,SAC3BmC,EACC,CAAA,SAAA,CAAAnC,EAAA,IAACoC,EAAA,CACC,MAAK,GACL,QAEIrC,EAAA,KAAAsC,WAAA,CAAA,SAAA,CAAArC,EAAA,IAAC,SAAA,CACC,UAAU,6CACV,SAAU,CAACW,EACX,QAASsB,EAER,SAAatB,GAAA,MAAAA,EAAA,2BAA6BC,EAAK,gBAAkBA,EAAK,QAAA,CACzE,QACC0B,EAAK,CAAA,GAAG,MACP,SAACvC,EAAA,KAAA,SAAA,CAAO,UAAU,6CAChB,SAAA,CAAAC,EAAA,IAACuC,EAAiB,EAAA,EAAE,MAAA,CAAA,CACtB,CACF,CAAA,EACAxC,EAAA,KAAC,SAAA,CACC,SAAU8B,EACV,UAAU,+BACV,QAASK,EAET,SAAA,CAAAlC,EAAA,IAACwC,EAAS,EAAA,EAAE,IAAE5B,EAAK,MAAA,CAAA,CACrB,CAAA,EACF,CAAA,CAEJ,EACAZ,EAAA,IAACoC,EAAA,CACC,KAAK,MACL,QACGpC,EAAA,IAAAsC,EAAA,CAAK,GAAG,KACP,eAAC,SAAO,CAAA,UAAU,+BAA+B,SAAA,OAAA,CAAK,CACxD,CAAA,CAAA,CAEJ,CAAA,EACF,CAAA,EACF,SACCH,EACC,CAAA,SAAA,CAAAnC,EAAA,IAACoC,EAAA,CACC,MAAK,GACL,QACEpC,EAAA,IAACQ,EAAY,CAAA,QAAAC,EAAkB,UAAAC,EAAsB,YAAAC,EAA0B,CAAA,CAEnF,QACCyB,EAAM,CAAA,KAAK,MAAM,QAASpC,MAACF,GAAW,CAAA,EAAI,CAAA,EAC7C,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}