{"version":3,"file":"ResultsByLevel-756839d6.js","sources":["../../src/legacy-code/components/Profile/ResultsByLevel.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { createSelector } from 'reselect';\nimport _ from 'lodash/fp';\nimport numeral from 'numeral';\nimport { useSelector } from 'react-redux';\nimport { Link, NavLink, useNavigate, useParams } from 'react-router-dom';\nimport { FaCaretDown, FaCaretUp } from 'react-icons/fa';\nimport Select from 'react-select';\n\nimport './results-by-level.scss';\n\nimport { routes } from 'legacy-code/constants/routes';\n\nimport { profileSelector } from './Profile';\n\nimport Loader from 'legacy-code/components/Shared/Loader';\nimport Grade from 'legacy-code/components/Shared/Grade';\nimport { ChartLabel } from 'legacy-code/components/Leaderboard/ChartLabel';\n\nimport { gradeComparator } from 'legacy-code/utils/leaderboards';\nimport { useLanguage } from 'utils/context/translation';\n\nconst selectOptionsSelector = createSelector(\n  (state) => state.tracklist.data,\n  (data) => {\n    return _.flow(\n      _.get('chartLevels'),\n      _.keys,\n      _.filter((key) => 0 < key),\n      _.map((key) => ({ label: key, value: key }))\n    )(data);\n  }\n);\n\nconst resultsByLevelSelector = createSelector(\n  (state) => state.results.sharedCharts,\n  profileSelector,\n  (state, props) => props.params.level,\n  (state, props) => props.sortOrder,\n  (sharedCharts, profile, level, sortOrder) => {\n    if (!profile || !level) {\n      return null;\n    }\n\n    const levelString = _.toString(level);\n    const unplayed = _.flow(\n      _.values,\n      _.filter(\n        (chart) =>\n          chart.chartLevel === levelString &&\n          !chart.results.some((res) => res.playerId === profile.id)\n      ),\n      _.map((chart) => ({ chart })),\n      _.groupBy('chart.chartType')\n    )(sharedCharts);\n\n    const grouped = _.flow(\n      _.groupBy('chart.chartType'),\n      // Add keys from unplayed\n      (g) => ({ ...Object.keys(unplayed).reduce((acc, key) => ({ ...acc, [key]: [] }), {}), ...g }),\n      _.mapValues(\n        _.flow(\n          _.groupBy('result.grade'),\n          _.toPairs,\n          _.orderBy(([grade]) => gradeComparator[grade], sortOrder)\n        )\n      ),\n      _.toPairs,\n      _.orderBy(([type]) => (type === 'S' ? 0 : type === 'D' ? 1 : 2), 'asc'),\n      _.map(([type, group]) =>\n        sortOrder === 'asc'\n          ? [type, [['X', unplayed[type] || []], ...group]]\n          : [type, [...group, ['X', unplayed[type] || []]]]\n      )\n    )(profile.bestGradeResultsByLevel[level]);\n\n    return { byType: grouped };\n  }\n);\n\nconst ResultsByLevel = () => {\n  const navigate = useNavigate();\n  const params = useParams();\n\n  const lang = useLanguage();\n  const [sortOrder, setSortOrder] = useState('asc');\n  const selectOptions = useSelector(selectOptionsSelector);\n  const profile = useSelector((state) => profileSelector(state, { params }));\n  const data = useSelector((state) => resultsByLevelSelector(state, { params, sortOrder }));\n  const isLoading = useSelector(\n    (state) => state.charts.isLoading || state.results.isLoadingRanking || state.tracklist.isLoading\n  );\n\n  useEffect(() => {\n    if (profile && !params.level) {\n      const redirectToLevel = _.flow(\n        _.get('resultsByLevel'),\n        _.toPairs,\n        _.maxBy('[1].length'),\n        _.first\n      )(profile);\n      navigate(routes.profile.resultsByLevel.level.getPath({ ...params, level: redirectToLevel }));\n    }\n  }, [params, profile, navigate]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!data) {\n    return null;\n  }\n\n  const chartTypeText = {\n    D: lang.DOUBLES,\n    S: lang.SINGLES,\n  };\n\n  const handleChangeLvl = (level) => {\n    navigate(routes.profile.resultsByLevel.level.getPath({ id: profile.id, level: level }));\n  };\n\n  return (\n    <div className=\"profile-results-by-level\">\n      <header>\n        <Link to={routes.profile.getPath({ id: profile.id })}>\n          <button className=\"btn btn-sm btn-dark btn-icon _margin-right\">{lang.BACK_BUTTON}</button>\n        </Link>\n        <div className=\"_flex-fill\" />\n        <button\n          className=\"btn btn-sm btn-dark btn-icon _margin-right\"\n          onClick={() => setSortOrder((order) => (order === 'asc' ? 'desc' : 'asc'))}\n        >\n          {sortOrder === 'desc' ? <FaCaretDown /> : <FaCaretUp />} {lang.SORTING}\n        </button>\n        <button\n          className=\"btn btn-sm btn-dark _margin-right\"\n          disabled={params.level === '1'}\n          onClick={() => handleChangeLvl(Number(params.level) - 1)}\n        >\n          -\n        </button>\n        <Select\n          className={'select levels _margin-right'}\n          classNamePrefix=\"select\"\n          placeholder={lang.LEVEL_PLACEHOLDER}\n          options={selectOptions}\n          value={selectOptions.find((option) => option.value === params.level)}\n          onChange={(option) => handleChangeLvl(option.value)}\n        />\n        <button\n          className=\"btn btn-sm btn-dark\"\n          disabled={params.level === '28'}\n          onClick={() => handleChangeLvl(Number(params.level) + 1)}\n        >\n          +\n        </button>\n      </header>\n      <div className=\"chart-types\">\n        {data.byType.map(([chartType, byGrade]) => {\n          const total = byGrade.map((list) => list[1].length).reduce((sum, cur) => sum + cur, 0);\n\n          return (\n            <div key={chartType} className=\"chart-type\">\n              <header>{`${chartTypeText[chartType] || chartType} (${total})`}</header>\n              <div className=\"grades-groups\">\n                {byGrade.map(([grade, charts]) => {\n                  if (_.isEmpty(charts)) {\n                    return null;\n                  }\n\n                  return (\n                    <div key={grade} className=\"grades-group\">\n                      <header>\n                        {grade === 'X' ? (\n                          lang.UNPLAYED\n                        ) : grade === '?' ? (\n                          '?'\n                        ) : (\n                          <Grade grade={grade} />\n                        )}\n                        {` (${charts.length})`}\n                      </header>\n                      <div className=\"charts-for-grade\">\n                        {charts.map(({ chart, result }) => {\n                          return (\n                            <div key={chart.sharedChartId} className=\"chart-block\">\n                              <ChartLabel type={chart.chartType} level={chart.chartLevel} />\n                              <NavLink\n                                exact\n                                to={routes.leaderboard.sharedChart.getPath({\n                                  sharedChartId: chart.sharedChartId,\n                                })}\n                              >\n                                {chart.song}\n                              </NavLink>\n                              {result && (\n                                <>\n                                  <div className=\"_flex-fill\" />\n                                  <Grade grade={grade} />\n                                  <span className=\"score-span desktop-only\">\n                                    {result.scoreIncrease > result.score * 0.8 && '*'}\n                                    {numeral(result.score).format('0,0')}\n                                  </span>\n                                </>\n                              )}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsByLevel;\n"],"names":["selectOptionsSelector","createSelector","state","data","_","key","resultsByLevelSelector","profileSelector","props","sharedCharts","profile","level","sortOrder","levelString","unplayed","chart","res","g","acc","grade","gradeComparator","type","group","ResultsByLevel","navigate","useNavigate","params","useParams","lang","useLanguage","setSortOrder","useState","selectOptions","useSelector","isLoading","useEffect","redirectToLevel","routes","Loader","chartTypeText","handleChangeLvl","jsxs","jsx","Link","order","FaCaretDown","FaCaretUp","Select","option","chartType","byGrade","total","list","sum","cur","charts","Grade","result","ChartLabel","NavLink","Fragment","numeral"],"mappings":"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"}