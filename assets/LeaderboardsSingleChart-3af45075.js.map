{"version":3,"file":"LeaderboardsSingleChart-3af45075.js","sources":["../../src/features/leaderboards/LeaderboardsSingleChart.tsx"],"sourcesContent":["import { Alert, Button } from '@mantine/core';\nimport { FaExclamationCircle, FaInfoCircle, FaPlusCircle } from 'react-icons/fa';\nimport { useParams } from 'react-router';\nimport { NavLink } from 'react-router-dom';\n\nimport './components/charts/leaderboard.scss';\n\nimport Loader from 'components/Loader/Loader';\n\nimport { routes } from 'constants/routes';\n\nimport { useUser } from 'hooks/useUser';\n\nimport { useLanguage } from 'utils/context/translation';\n\nimport Chart from './components/charts/Chart';\nimport { useSingleChartQuery } from './hooks/useSingleChartQuery';\n\nconst LeaderboardsChartsList = (): JSX.Element => {\n  const params = useParams();\n  const user = useUser();\n  const chart = useSingleChartQuery({\n    sharedChartId: params.sharedChartId ? Number(params.sharedChartId) : 0,\n  });\n  const lang = useLanguage();\n\n  const chartsList = chart.data?.items.map((chart) => {\n    return <Chart key={chart.id} chart={chart} />;\n  });\n\n  console.log(user.data);\n\n  return (\n    <div className=\"leaderboard-page\">\n      <div className=\"content\">\n        <div className=\"simple-search\">\n          <div className=\"_flex-fill\" />\n          {user.data?.can_add_results_manually && params.sharedChartId ? (\n            <NavLink\n              to={routes.leaderboard.sharedChart.addResult.getPath({\n                sharedChartId: params.sharedChartId,\n              })}\n            >\n              <Button size=\"xs\" disabled={chart.isLoading} leftSection={<FaPlusCircle />}>\n                {lang.ADD_RESULT}\n              </Button>\n            </NavLink>\n          ) : null}\n        </div>\n        <div className=\"top-list\">\n          {chart.isError ? (\n            <Alert\n              radius=\"md\"\n              variant=\"light\"\n              color=\"red\"\n              title={lang.ERROR}\n              icon={<FaExclamationCircle />}\n            >\n              {chart.error.message}\n            </Alert>\n          ) : chart.isFetched && !chartsList?.length ? (\n            <Alert\n              radius=\"md\"\n              variant=\"default\"\n              title={lang.NOTHING_FOUND}\n              icon={<FaInfoCircle />}\n            />\n          ) : chartsList?.length ? (\n            chartsList\n          ) : null}\n          {chart.isLoading && <Loader />}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LeaderboardsChartsList;\n"],"names":["LeaderboardsChartsList","params","useParams","user","useUser","chart","useSingleChartQuery","lang","useLanguage","chartsList","_a","jsx","Chart","jsxs","_b","NavLink","routes","Button","FaPlusCircle","Alert","FaExclamationCircle","FaInfoCircle","Loader"],"mappings":"+YAkBA,MAAMA,EAAyB,IAAmB,SAChD,MAAMC,EAASC,IACTC,EAAOC,IACPC,EAAQC,EAAoB,CAChC,cAAeL,EAAO,cAAgB,OAAOA,EAAO,aAAa,EAAI,CAAA,CACtE,EACKM,EAAOC,IAEPC,GAAaC,EAAAL,EAAM,OAAN,YAAAK,EAAY,MAAM,IAAKL,GAChCM,EAAAA,IAAAC,EAAA,CAAqB,MAAOP,GAAjBA,EAAM,EAAkB,GAGrC,eAAA,IAAIF,EAAK,IAAI,QAGlB,MAAI,CAAA,UAAU,mBACb,SAACU,EAAA,KAAA,MAAA,CAAI,UAAU,UACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,gBACb,SAAA,CAACF,EAAAA,IAAA,MAAA,CAAI,UAAU,YAAa,CAAA,GAC3BG,EAAAX,EAAK,OAAL,MAAAW,EAAW,0BAA4Bb,EAAO,cAC7CU,EAAA,IAACI,EAAA,CACC,GAAIC,EAAO,YAAY,YAAY,UAAU,QAAQ,CACnD,cAAef,EAAO,aAAA,CACvB,EAED,SAACU,EAAA,IAAAM,EAAA,CAAO,KAAK,KAAK,SAAUZ,EAAM,UAAW,YAAcM,EAAAA,IAAAO,EAAA,CAAa,CAAA,EACrE,SAAAX,EAAK,WACR,CAAA,CAAA,EAEA,IAAA,EACN,EACAM,EAAAA,KAAC,MAAI,CAAA,UAAU,WACZ,SAAA,CAAAR,EAAM,QACLM,EAAA,IAACQ,EAAA,CACC,OAAO,KACP,QAAQ,QACR,MAAM,MACN,MAAOZ,EAAK,MACZ,WAAOa,EAAoB,EAAA,EAE1B,WAAM,MAAM,OAAA,CAEb,EAAAf,EAAM,WAAa,EAACI,GAAA,MAAAA,EAAY,QAClCE,EAAA,IAACQ,EAAA,CACC,OAAO,KACP,QAAQ,UACR,MAAOZ,EAAK,cACZ,WAAOc,EAAa,EAAA,CAAA,CAAA,EAEpBZ,GAAA,MAAAA,EAAY,OACdA,EACE,KACHJ,EAAM,WAAaM,MAACW,EAAO,CAAA,CAAA,CAAA,EAC9B,CAAA,CACF,CAAA,CACF,CAAA,CAEJ"}